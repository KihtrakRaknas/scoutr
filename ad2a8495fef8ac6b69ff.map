{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/SetUp.js","C:/Users/karth/Documents/RoboticsScoutingTool/Main.js","C:/Users/karth/Documents/RoboticsScoutingTool/CompScreen.js","C:/Users/karth/Documents/RoboticsScoutingTool/TeamInfo.js","C:/Users/karth/Documents/RoboticsScoutingTool/App.js","C:/Users/karth/Documents/RoboticsScoutingTool/web-build/register-service-worker.js"],"names":["SetUp","props","state","name","team","handleLogin","AsyncStorage","setItem","then","navigation","navigate","firebase","apiKey","authDomain","projectId","getItem","SplashScreen","hide","KeyboardAvoidingView","behavior","style","styles","container","Text","title","View","textInputBox","TextInput","placeholder","placeholderTextColor","autoCapitalize","textInput","onChangeText","setState","value","this","TouchableOpacity","submitButton","onPress","color","fontSize","React","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderBottomWidth","marginBottom","width","alignSelf","height","fontWeight","padding","borderRadius","Main","comps","open","openNum","Number","StoreReview","console","log","fetch","response","json","responseJson","JSON","stringify","offlineEventData","parse","download","Platform","OS","Button","Linking","openURL","catch","err","error","FlatList","data","renderItem","item","chevron","sku","compName","bottomDivider","topDivider","subtitle","loc_city","Date","end","getMonth","getDate","getFullYear","keyExtractor","id","ListEmptyComponent","CompScreen","teams","symbolBtns","getParam","firestore","collection","doc","replace","onSnapshot","snapshot","teamItemNa","teamItem","has","symbol","forEach","number","Object","keys","length","toLowerCase","haveData","matches","allies","opps","matchNa","matchItem","ourTeamColor","oppTeamColor","matchNum","matchnum","matchType","round","matchTypeNum","red1","red2","red3","blue1","blue2","blue3","matchTeams","i","push","type","typeNum","hasAlly","hasOpp","ally","opp","sort","a","b","typeA","typeB","offlineTeamData","checkmark","organisation","region","titleStyle","navigationOptions","substring","trim","TeamInfo","currTeam","selTeam","exists","metadata","hasPendingWrites","vrating_rank","vrating","awards","index","res","skills","options","oldFormat","option","intake","label","itemCount","updateFirebase","text","place","flexDirection","enabled","keyboardVerticalOffset","textAlign","marginHorizontal","paddingHorizontal","paddingVertical","createDropDown","keyboardType","stats","rightTitle","score","season_rank","selectedIndex","buttons","containerStyle","feild","content","now","getHours","getMinutes","set","merge","docRef","LoggedInStack","createStackNavigator","initialRouteName","defaultNavigationOptions","headerStyle","headerTintColor","headerTitleStyle","App","createAppContainer","createSwitchNavigator","welcome","margin","instructions","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.a86ef84e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Button, Alert, KeyboardAvoidingView, TouchableOpacity, AsyncStorage} from 'react-native'\r\nimport * as firebase from 'firebase';\r\nimport { SplashScreen } from 'expo';\r\n\r\n\r\nexport default class SetUp extends React.Component {\r\n    state = {name:'',team:''}\r\n    constructor(props){\r\n      super(props)\r\n      firebase.initializeApp({\r\n        apiKey: 'AIzaSyAgbDbOgy-QIkZmXNkueOWhSZfSOYta0MA',\r\n        authDomain: 'roboticsscoutingtool.firebaseapp.com',\r\n        projectId: 'roboticsscoutingtool'\r\n      });      \r\n      AsyncStorage.getItem('name').then((name)=>{\r\n        if(name)\r\n          this.props.navigation.navigate('LoggedInStack')\r\n        else\r\n          SplashScreen.hide()\r\n      })\r\n    }\r\n    handleLogin = () => {\r\n      AsyncStorage.setItem('name',this.state.name).then(()=>{\r\n        AsyncStorage.setItem('team',this.state.team).then(()=>{\r\n          this.props.navigation.navigate('LoggedInStack')\r\n        })\r\n      })\r\n      \r\n      /*firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(() => {\r\n        if(checkUserFeilds(doc.data()))\r\n          this.props.navigation.navigate('LoggedIn')\r\n        else\r\n          this.props.navigation.navigate('SetUp')\r\n      })\r\n      .catch(error => {\r\n        if(error.message.includes(\"The user may have been deleted\"))\r\n          error.message = error.message.substring(0,error.message.indexOf(\"The user may have been deleted\"))\r\n        Alert.alert(error.message)\r\n        this.setState({ errorMessage: error.message })\r\n      })*/\r\n    }  \r\n    render() {\r\n      return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <Text style={styles.title}>Set Up</Text>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Real Name\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={name => this.setState({ name })}\r\n            value={this.state.name}\r\n          />\r\n        </View>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Team (including letter)\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={team => this.setState({ team })}\r\n            value={this.state.team}\r\n          />\r\n        </View>\r\n        <TouchableOpacity \r\n          style={styles.submitButton}\r\n          onPress={this.handleLogin}\r\n        >\r\n          <Text style={{color:\"white\",fontSize:20,}}>Continue To App</Text>\r\n        </TouchableOpacity>\r\n    </KeyboardAvoidingView>\r\n      )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    width:\"90%\",\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n    \r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    width:\"90%\",\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Button, Alert, KeyboardAvoidingView, TouchableOpacity, AsyncStorage, FlatList, Platform, Linking} from 'react-native'\r\nimport firebase from 'firebase'\r\nimport '@firebase/firestore';\r\nimport { SplashScreen } from 'expo';\r\nimport { ListItem } from 'react-native-elements'\r\nimport * as StoreReview from 'expo-store-review';\r\n\r\n\r\nexport default class Main extends React.Component {\r\n    state = {comps:[],team:'null'}\r\n    constructor(props){\r\n      super(props)\r\n      SplashScreen.hide()\r\n      AsyncStorage.getItem('appOpen').then((open)=>{\r\n        let openNum = 0\r\n        if(open)\r\n          openNum = Number(open)\r\n        if(openNum>3)\r\n           StoreReview.requestReview();\r\n        AsyncStorage.setItem('appOpen',\"\"+(openNum+1))\r\n      })\r\n      AsyncStorage.getItem('team').then((team)=>{\r\n        this.setState({team})\r\n        console.log('https://api.vexdb.io/v1/get_events?season=current&team='+team)\r\n        fetch('https://api.vexdb.io/v1/get_events?season=current&team='+team)\r\n        .then(\r\n          (response) => \r\n            response.json()\r\n        )\r\n        .then(\r\n          (responseJson)=>{\r\n            AsyncStorage.setItem('offlineEventData',JSON.stringify(responseJson[\"result\"]))\r\n            this.setState({\r\n              comps:responseJson[\"result\"]\r\n            })\r\n        })\r\n      })\r\n      AsyncStorage.getItem('offlineEventData').then((offlineEventData)=>{\r\n        if(offlineEventData)\r\n          this.setState({comps:JSON.parse(offlineEventData)})\r\n      });\r\n    }\r\n   \r\n    render() {\r\n      let download = null\r\n      if(Platform.OS === 'web')\r\n        download=<View>\r\n          <Button title=\"Download iOS App\" onPress={()=>{Linking.openURL('https://apps.apple.com/us/app/robotics-scouting-tool/id1494612234').catch((err) => console.error('An error occurred', err))}}/>\r\n          <Button title=\"Download Android App\" onPress={()=>{Linking.openURL('https://play.google.com/store/apps/details?id=com.kihtrak.scouter').catch((err) => console.error('An error occurred', err))}}/>\r\n          \r\n        </View>\r\n      return (\r\n        <View>\r\n          {download}\r\n          <FlatList\r\n              data={this.state.comps}\r\n              renderItem={({ item }) => <ListItem chevron onPress={()=>this.props.navigation.navigate('CompScreen',{title:item.name,sku:item.sku,compName: item.name})}\r\n          bottomDivider topDivider subtitle={item.loc_city+\" - \"+((new Date(item.end).getMonth() > 8) ? (new Date(item.end).getMonth() + 1) : ('0' + (new Date(item.end).getMonth() + 1))) + '/' + ((new Date(item.end).getDate() > 9) ? new Date(item.end).getDate() : ('0' + new Date(item.end).getDate())) + '/' + new Date(item.end).getFullYear()%100} title={item.name} />}\r\n              keyExtractor={item => item.id}\r\n        ListEmptyComponent={<View><Text>No Competitions found for {this.state.team}</Text></View>}\r\n          />\r\n        </View>\r\n      )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    width:\"90%\",\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n    \r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    width:\"90%\",\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Button, Alert, KeyboardAvoidingView, TouchableOpacity, AsyncStorage, FlatList} from 'react-native'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nimport { SplashScreen } from 'expo';\r\nimport { ListItem } from 'react-native-elements'\r\n\r\nexport default class CompScreen extends React.Component {\r\n\r\n      state = {\r\n        teams:[]\r\n      }\r\n    \r\n    constructor(props){\r\n      super(props)\r\n      let symbolBtns = ['🔵', '🟢', '🌟'];\r\n      let name = this.props.navigation.getParam('name', 'No Name')\r\n      let sku = this.props.navigation.getParam('sku','sku')\r\n      console.log(sku)\r\n      let fireStSn;\r\n        AsyncStorage.getItem('team').then((team)=>{\r\n            this.setState({team})\r\n            fetch('https://api.vexdb.io/v1/get_teams?season=current&sku='+sku)\r\n            .then((response) => response.json())\r\n            .then((responseJson)=>{\r\n                let teams = responseJson[\"result\"]\r\n                AsyncStorage.setItem('offlineTeamData-'+sku,JSON.stringify(teams))\r\n                this.setState({teams})            \r\n                fireStSn = firebase.firestore().collection('teams').doc(team.replace(/\\D+/g, '')).collection('comp').doc(sku).collection('teams').onSnapshot(snapshot => {\r\n                  for(let teamItemNa in teams){\r\n                    let teamItem = teams[teamItemNa]\r\n                    let has = false;\r\n                    let symbol;\r\n                    snapshot.forEach(doc => {\r\n                        //console.log(doc.id, '=>', doc.data());\r\n                        if(doc.id == teamItem.number){\r\n                            if(Object.keys(doc.data()).length>10){\r\n                              console.log(\"AHHH\")\r\n                              has = true;\r\n                            }\r\n                            if(doc.data() && doc.data()['Symbol']!=null && team.toLowerCase() == \"750s\")\r\n                              symbol = symbolBtns[doc.data()['Symbol']]\r\n                        }\r\n                    });\r\n                    teams[teamItemNa].haveData = has;\r\n                    teams[teamItemNa].symbol = symbol;\r\n                  }\r\n                  AsyncStorage.setItem('offlineTeamData'+sku,JSON.stringify(teams))\r\n                  this.setState({teams}) \r\n                })\r\n                console.log(team+\"1\")\r\n\r\n                fetch('https://api.vexdb.io/v1/get_matches?season=current&sku='+sku+'&team='+team)\r\n                .then((response) => response.json())\r\n                .then((responseJson)=>{\r\n                  console.log('https://api.vexdb.io/v1/get_matches?season=current&sku='+sku+'&team='+team)\r\n                    let matches = responseJson[\"result\"]\r\n                    //console.log(matches)\r\n                    let allies = []\r\n                    let opps = []\r\n                    if(matches.length>0){\r\n                        for(let matchNa in matches){\r\n                          let matchItem = matches[matchNa]\r\n                          let ourTeamColor;\r\n                          let oppTeamColor\r\n                          let matchNum = matchItem.matchnum;\r\n                          let matchType = matchItem.round==\"1\"?\"Practice\":matchItem.round==\"2\"?\"Quals\":matchItem.round==\"3\"?\"Quarter Finals\":matchItem.round==\"4\"?\"Semi Finals\":matchItem.round==\"5\"?\"Finals\":\"Unknown\";\r\n                          let matchTypeNum = Number(matchItem.round)\r\n                          if(matchItem.red1==team||matchItem.red2==team||matchItem.red3==team){\r\n                            ourTeamColor = \"red\"\r\n                            oppTeamColor = \"blue\"\r\n                          }else if(matchItem.blue1==team||matchItem.blue2==team||matchItem.blue3==team){\r\n                            ourTeamColor = \"blue\"\r\n                            oppTeamColor = \"red\"\r\n                          }\r\n                          let matchTeams = [];\r\n                          for(var i = 1; i!=4;i++)\r\n                            if(matchItem[ourTeamColor+i]!=team){\r\n                              allies.push(matchItem[ourTeamColor+i])\r\n                              matchTeams.push(matchItem[ourTeamColor+i])\r\n                            }\r\n                          for(var i = 1; i!=4;i++){\r\n                              opps.push(matchItem[oppTeamColor+i])\r\n                              matchTeams.push(matchItem[oppTeamColor+i])\r\n                          }\r\n                          for(let teamItemNa in teams){\r\n                            let teamItem = teams[teamItemNa]\r\n                            for(let matchedTeam of matchTeams)\r\n                              if(matchedTeam == teamItem.number){\r\n                                teams[teamItemNa].round = matchNum;\r\n                                teams[teamItemNa].type = matchType;\r\n                                teams[teamItemNa].typeNum = matchTypeNum;\r\n                              }\r\n                          }\r\n                        }\r\n                        for(let teamItemNa in teams){\r\n                          let teamItem = teams[teamItemNa]\r\n                          let hasAlly = false;\r\n                          let hasOpp = false;\r\n                          for(let ally of allies)\r\n                            if(ally == teamItem.number)\r\n                              hasAlly = true\r\n                          for(let opp of opps)\r\n                            if(opp == teamItem.number)\r\n                              hasOpp = true\r\n                          teams[teamItemNa].ally = hasAlly;\r\n                          teams[teamItemNa].opp = hasOpp;\r\n                          //teams[teamItemNa].round = matchItem.round\r\n                        }\r\n                        teams.sort((a,b)=>{\r\n                          let typeA = a.typeNum?a.typeNum:-1;\r\n                          let typeB = b.typeNum?b.typeNum:-1;\r\n                          if(typeB-typeA==0){\r\n                            let matchA = a.round?a.round:-1;\r\n                            let matchB = b.round?b.round:-1;\r\n                            return matchA-matchB\r\n                          }\r\n                          return typeB-typeA\r\n                        })\r\n                        console.log(\"done sorting\")\r\n                        AsyncStorage.setItem('offlineTeamData'+sku,JSON.stringify(teams)) //save the data offline for later\r\n                        this.setState({teams}) //send new team information to app interface\r\n                      }\r\n                    })\r\n                  })\r\n\r\n              AsyncStorage.getItem('offlineTeamData'+sku).then((offlineTeamData)=>{\r\n              \r\n                if(offlineTeamData){\r\n                  console.log(\"\\n\\n\\n\\n\\nOFF\\n\\n\\n\\n\\n\")\r\n                    let teams = JSON.parse(offlineTeamData)\r\n                    this.setState({teams})            \r\n                    fireStSn = firebase.firestore().collection('teams').doc(team.replace(/\\D+/g, '')).collection('comp').doc(sku).collection('teams').onSnapshot(snapshot => {\r\n                        for(let teamItemNa in teams){\r\n                            let teamItem = teams[teamItemNa]\r\n                            let has = false;\r\n                            let symbol;\r\n                            snapshot.forEach(doc => {\r\n                                //console.log(doc.id, '=>', doc.data());\r\n                                if(doc.id == teamItem.number){\r\n                                  if(Object.keys(doc.data()).length>10){\r\n                                    console.log(\"AHHH\")\r\n                                    has = true;\r\n                                  }\r\n                                  if(doc.data() && doc.data()['Symbol'])\r\n                                    symbol = symbolBtns[doc.data()['Symbol']]\r\n                                }\r\n                            });\r\n                            teams[teamItemNa].haveData = has;\r\n                            teams[teamItemNa].symbol = symbol;\r\n                        }\r\n                        this.setState({teams}) \r\n                    })\r\n                   }\r\n  \r\n                  })            \r\n  \r\n                })\r\n      \r\n    }\r\n\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n          title: navigation.getParam('title', 'No Name').substring(0,25)+`${navigation.getParam('title', 'No Name').substring(25).trim()!=\"\"?'...':''}`,\r\n        };\r\n      };\r\n   \r\n    render() {\r\n      return (\r\n        <FlatList\r\n            data={this.state.teams}\r\n            renderItem={({ item }) => <ListItem chevron checkmark={item.haveData} onPress={()=>this.props.navigation.navigate('TeamInfo',{team:item.number, compName: this.props.navigation.getParam('compName'),sku:this.props.navigation.getParam('sku')})}\r\n            bottomDivider topDivider subtitle={item.organisation+\" - \"+item.region} title={(item.symbol?item.symbol+\" \":\"\")+item.number+(item.round?\" - \"+item.round:\"\")+(item.type?\" - \"+item.type:\"\")} titleStyle={item.ally&&item.opp?{ color: 'purple', fontWeight: 'bold' }:item.ally?{ color: 'green', fontWeight: 'bold' }:item.opp?{ color: 'red', fontWeight: 'bold' }:null}/>}\r\n            keyExtractor={item => item.id}\r\n            ListEmptyComponent={<View><Text>No Competitions found for {this.state.team}</Text></View>}\r\n        />\r\n      )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    width:\"90%\",\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n    \r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    width:\"90%\",\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","import React, { Component } from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Button, Alert, KeyboardAvoidingView, TouchableOpacity, AsyncStorage, FlatList, Platform} from 'react-native'\r\nimport firebase from 'firebase'\r\nimport 'firebase/firestore';\r\nimport { SplashScreen } from 'expo';\r\nimport { ListItem , ButtonGroup} from 'react-native-elements'\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Input } from 'react-native-elements';\r\nimport { Dropdown } from 'react-native-material-dropdown';\r\n\r\nexport default class TeamInfo extends React.Component {\r\n\r\n      state = {\r\n        team:null,name:\"Didn't load in\"\r\n      }\r\n    \r\n    constructor(props){\r\n      super(props)\r\n      AsyncStorage.getItem('name').then((name)=>{\r\n        this.setState({name})\r\n      });\r\n      AsyncStorage.getItem('team').then((team)=>{\r\n        this.setState({team})\r\n        let currTeam = team\r\n        let compName = this.props.navigation.getParam('sku')\r\n        let selTeam = this.props.navigation.getParam('team','default team')\r\n        firebase.firestore().collection('teams').doc(currTeam.replace(/\\D+/g, '')).collection('comp').doc(compName).collection('teams').doc(selTeam).onSnapshot(doc => {\r\n          if (!doc.exists) {\r\n            console.log('No such document!');\r\n          } else {\r\n            if(!doc.metadata.hasPendingWrites)\r\n              this.setState(doc.data())\r\n          }\r\n        })\r\n      })\r\n      let team = this.props.navigation.getParam('team','750S')\r\n        fetch('https://api.vexdb.io/v1/get_season_rankings?season=current&team='+team)\r\n            .then((response) => response.json())\r\n            .then((responseJson)=>{\r\n                console.log(responseJson)\r\n                //console.log(responseJson[\"result\"])\r\n                this.setState({vrating_rank:responseJson[\"result\"][0].vrating_rank,vrating:responseJson[\"result\"][0].vrating})\r\n            })\r\n        fetch('https://api.vexdb.io/v1/get_awards?season=current&team='+team)\r\n            .then((response) => response.json())\r\n            .then((responseJson)=>{\r\n                console.log(responseJson)\r\n                //console.log(responseJson[\"result\"])\r\n                this.setState({awards:responseJson[\"result\"]})\r\n            })\r\n          fetch('https://api.vexdb.io/v1/get_events?season=current&team='+team).then((response) => response.json()).then((responseJson)=>{\r\n              this.setState({comps:responseJson[\"result\"]})\r\n          })\r\n          fetch('https://api.vexdb.io/v1/get_skills?season=current&season_rank=true&team='+team).then((response) => response.json()).then((responseJson)=>{\r\n            for(let index in responseJson[\"result\"]){\r\n              let res = responseJson[\"result\"][index]\r\n              let type = \"?\";\r\n              if(res.type == 0)\r\n                type = \"Robot Skills\"\r\n              else if(res.type == 1)\r\n                type = \"Programming Skills\"\r\n              else if(res.type == 2)\r\n                type = \"Combined Skills\"\r\n                responseJson[\"result\"][index].type = type\r\n            }\r\n            console.log(responseJson[\"result\"])\r\n            this.setState({skills:responseJson[\"result\"]})\r\n        })\r\n          \r\n        var db = firebase.firestore();\r\n        console.log('compName'+ this.props.navigation.getParam('compName'))\r\n    }\r\n\r\n    static navigationOptions = ({ navigation }) => {\r\n        return {\r\n            title: navigation.getParam('team', 'No Name').substring(0,25)+`${navigation.getParam('team', 'No Name').substring(25).trim()!=\"\"?'...':''}`,\r\n        };\r\n      };\r\n\r\n      createDropDown(name,options,oldFormat){\r\n        let data = []\r\n        for(let option of options)\r\n          data.push({\r\n            value: option,\r\n          })\r\n        if(oldFormat)\r\n          data = options\r\n        if(Platform.OS !== 'web')\r\n          return(<View style={styles.intake}><Dropdown\r\n                    label={name}\r\n                    data={data}\r\n                    value={this.state[name]}\r\n                    itemCount={5}\r\n                    onChangeText={(value) => this.updateFirebase(name,value)}\r\n                  /></View>)\r\n        return(<Input placeholder={name} label={name} value={this.state[name]} onChangeText={(text)=>this.updateFirebase(name,text)} style={styles.place}/>)\r\n      }\r\n   \r\n    render() {\r\n      let symbolBtns = ['Bad', 'Good', 'Consider for Ally'];\r\n      return (\r\n        <KeyboardAvoidingView style={{ flex: 1, flexDirection: 'column',justifyContent: 'center',}} behavior=\"padding\" enabled   keyboardVerticalOffset={100}>\r\n            <ScrollView>\r\n                <Text style={{textAlign: 'center', marginHorizontal:20}}>{this.state[\"Last Update\"]}</Text>\r\n                <View style={styles.place}/>\r\n      {this.state[\"Other Comments\"]?<Text style={{\r\n      fontSize:18,\r\n      paddingHorizontal:10,\r\n      paddingVertical:15,\r\n  }}>{this.state[\"Other Comments\"]}</Text>:null}\r\n                {this.createDropDown(\"Intake Type\", ['Rollers','Long Vertical Claw','Claw','No Intake','Other (more info in comments)'])}\r\n                {this.createDropDown(\"Lift Type\", ['2 Bar','4 Bar','Double Reverse 4 Bar','Cascade Lift','No Lift','Other (more info in comments)'])}\r\n                {this.createDropDown(\"Drive Type\", [{\r\n                    value: 'Tank Drive (2 motors)',\r\n                  }, {\r\n                    value: 'Tank Drive (4 motors)',\r\n                  }, {\r\n                    value: 'X Drive',\r\n                  }, {\r\n                    value: 'Mecanum',\r\n                  }, {\r\n                    value: 'H Drive',\r\n                  }, {\r\n                    value: 'Other (more info in comments)',\r\n                  }],true)}\r\n                <View style={styles.place}/>\r\n                <Input keyboardType=\"number-pad\" placeholder='Max Number of Cubes They Can Stack' label='Max Number of Cubes They Can Stack' value={this.state[\"Max Number of Cubes They Can Stack\"]} onChangeText={(text)=>this.updateFirebase('Max Number of Cubes They Can Stack',text)} style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                {this.createDropDown('Scoring Towers',[{\r\n                    value: 'Can score all towers',\r\n                  }, {\r\n                    value: 'Can score low and medium towers',\r\n                  }, {\r\n                    value: 'Can only score low towers',\r\n                  }, {\r\n                    value: `Can't score any towers`,\r\n                  }, {\r\n                    value: 'Other (more info in comments)',\r\n                  }],true)}\r\n                {this.createDropDown('Descoring Towers',[{\r\n                    value: 'Can descore all towers',\r\n                  }, {\r\n                    value: 'Can descore low and medium towers',\r\n                  }, {\r\n                    value: 'Can only descore low towers',\r\n                  }, {\r\n                    value: `Can't descore any towers`,\r\n                  }, {\r\n                    value: 'Other (more info in comments)',\r\n                  }],true)}     \r\n                <View style={styles.place}/>\r\n                <Input placeholder='Protected Zone Auton Point Value and Reliability' label='Protected Zone Auton Point Value and Reliability' value={this.state[\"Protected Zone Auton Point Value and Reliability\"]} onChangeText={(text)=>this.updateFirebase('Protected Zone Auton Point Value and Reliability',text)} style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                <Input placeholder='Unprotected Zone Auton Point Value and Reliability' label='Unprotected Zone Auton Point Value and Reliability' value={this.state[\"Unprotected Zone Auton Point Value and Reliability\"]} onChangeText={(text)=>this.updateFirebase('Unprotected Zone Auton Point Value and Reliability',text)} style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                {this.createDropDown('Can they get 2 stacks in the protected zone?',[{\r\n                    value: 'They can get 2 stacks in the protected zone',\r\n                  }, {\r\n                    value: `They stuggle with 2 stacks in the protected zone`,\r\n                  }, {\r\n                    value: `They can't get 2 stacks in the protected zone`,\r\n                  }],true)} \r\n                {this.createDropDown('Add onto existing stacks?',[{\r\n                    value: 'They can add onto existing stacks',\r\n                  }, {\r\n                    value: `They can't add onto existing stacks`,\r\n                  }],true)}\r\n                <View style={styles.place}/>\r\n                <Input placeholder='Pit Location' label='Pit Location' value={this.state[\"Pit Location\"]} onChangeText={(text)=>this.updateFirebase('Pit Location',text)} style={styles.place}/>\r\n                <Input placeholder='Other Comments' label='Other Comments' value={this.state[\"Other Comments\"]} onChangeText={(text)=>this.updateFirebase('Other Comments',text)} style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                <Text style={styles.stats}>V-Rating Rank: {this.state.vrating_rank}</Text>\r\n                <Text style={styles.stats}>V-Rating: {this.state.vrating}</Text>\r\n                <Text style={styles.stats}>Past Awards:</Text>\r\n                <FlatList\r\n                  data={this.state.awards}\r\n                  renderItem={({ item }) => <ListItem bottomDivider topDivider title={item.name} />}\r\n\r\n                  keyExtractor={item => item.id}\r\n                  ListEmptyComponent={<View><Text style={styles.stats}>No awards found for {this.props.navigation.getParam('team','Team Name')}</Text></View>}\r\n                />\r\n                <Text style={styles.stats}>Past Competitions:</Text>\r\n                <FlatList\r\n                  data={this.state.comps}\r\n                  renderItem={({ item }) => new Date(item.end)<new Date()?<ListItem bottomDivider topDivider title={item.name}/>:null}\r\n\r\n                  keyExtractor={item => item.id}\r\n                  ListEmptyComponent={<View><Text style={styles.stats}>No competitions found for {this.props.navigation.getParam('team','Team Name')}</Text></View>}\r\n                />\r\n                <View style={styles.place}/>\r\n                <Text style={styles.stats}>Skills Scores:</Text>\r\n                <FlatList\r\n                  data={this.state.skills}\r\n                  renderItem={({ item }) => <ListItem bottomDivider topDivider title={item.type} rightTitle={item.score+\" (Rank: \"+item.season_rank+\")\"}/>}\r\n\r\n                  keyExtractor={item => item.id}\r\n                  ListEmptyComponent={<View><Text style={styles.stats}>No skills data found for {this.props.navigation.getParam('team','Team Name')}</Text></View>}\r\n                />\r\n                <View style={styles.place}/>\r\n                {this.state.team && this.state.team.toLowerCase() == \"750s\"?<ButtonGroup\r\n                  label='Symbol'\r\n                  onPress={(index)=>this.updateFirebase('Symbol',index)}\r\n                  selectedIndex={this.state[\"Symbol\"]}\r\n                  buttons={symbolBtns}\r\n                  containerStyle={{height: 70}}\r\n                />:null}\r\n                <View style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                <View style={styles.place}/>\r\n                <View style={styles.place}/>\r\n            </ScrollView>\r\n        </KeyboardAvoidingView> \r\n      )\r\n    }\r\n\r\n    updateFirebase(feild,content){\r\n        this.setState({[feild]: content,})\r\n        let currTeam = this.state.team\r\n        let compName = this.props.navigation.getParam('sku')\r\n        let team = this.props.navigation.getParam('team','default team')\r\n        let now = new Date()\r\nconsole.log(((now.getHours()-1)%12+1)+\":\"+now.getMinutes()+\" \"+(now.getHours()>=12?\"PM\":\"AM\")+\" \"+(now.getMonth()+1)+\"/\"+now.getDate()+\"/\"+now.getFullYear()%100);\r\n\r\n        firebase.firestore().collection('teams').doc(currTeam.replace(/\\D+/g, '')).collection('comp').doc(compName).collection('teams').doc(team).set({\r\n            [feild]: content,\r\n            \"Last Update\": this.state.name+\" - \"+this.state.team+\" - \"+((now.getHours()-1)%12+1)+\":\"+(now.getMinutes()<10?'0'+now.getMinutes():now.getMinutes())+\" \"+(now.getHours()>=12?\"PM\":\"AM\")+\" \"+(now.getMonth()+1)+\"/\"+now.getDate()+\"/\"+now.getFullYear()%100\r\n        },{merge: true})\r\n        .then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef);\r\n        })\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    width:\"90%\",\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n    \r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    width:\"90%\",\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n  stats:{\r\n      fontSize:20,\r\n      paddingHorizontal:10,\r\n      paddingVertical:25,\r\n  },\r\n  place:{\r\n      paddingVertical:10,\r\n  },\r\n  intake:{\r\n    marginHorizontal:10,\r\n  }\r\n})","import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport SetUp from './SetUp'\nimport Main from './Main'\nimport CompScreen from './CompScreen'\nimport TeamInfo from './TeamInfo'\n\n\nconst LoggedInStack = createStackNavigator({\n  Main,\n  CompScreen,\n  TeamInfo,\n},{\n  initialRouteName: 'Main',\n  defaultNavigationOptions: {\n    headerStyle: {\n      backgroundColor: 'red',\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold',\n    },\n  },\n})\n\nconst App = createAppContainer(createSwitchNavigator(\n  {\n    SetUp,\n    LoggedInStack\n  },\n  {\n    initialRouteName: 'SetUp'\n  }\n))\nexport default App\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}