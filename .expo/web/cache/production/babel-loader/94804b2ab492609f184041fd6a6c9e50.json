{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import PropTypes from'prop-types';import React,{PureComponent}from'react';import Text from\"react-native-web/dist/exports/Text\";import Button from\"../button\";import{styles}from\"./styles\";var TextButton=function(_PureComponent){_inherits(TextButton,_PureComponent);function TextButton(){_classCallCheck(this,TextButton);return _possibleConstructorReturn(this,_getPrototypeOf(TextButton).apply(this,arguments));}_createClass(TextButton,[{key:\"render\",value:function render(){var _this$props=this.props,title=_this$props.title,titleColor=_this$props.titleColor,titleStyle=_this$props.titleStyle,disabledTitleColor=_this$props.disabledTitleColor,style=_this$props.style,props=_objectWithoutProperties(_this$props,[\"title\",\"titleColor\",\"titleStyle\",\"disabledTitleColor\",\"style\"]);var titleStyleOverrides={color:props.disabled?disabledTitleColor:titleColor};return React.createElement(Button,_extends({style:[styles.container,style],shadeColor:titleColor,rippleColor:titleColor},props),React.createElement(Text,{style:[styles.title,titleStyle,titleStyleOverrides],numberOfLines:1},String(title).toUpperCase()));}}]);return TextButton;}(PureComponent);TextButton.defaultProps={color:'transparent',disabledColor:'transparent',titleColor:'rgb(0, 0, 0)',disabledTitleColor:'rgba(0, 0, 0, .26)',shadeOpacity:0.20};TextButton.propTypes=_objectSpread({},Button.propTypes,{title:PropTypes.string.isRequired,titleColor:PropTypes.string,titleStyle:Text.propTypes.style,disabledTitleColor:PropTypes.string});export{TextButton as default};","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-material-buttons/src/components/text-button/index.js"],"names":["PropTypes","React","PureComponent","Button","styles","TextButton","props","title","titleColor","titleStyle","disabledTitleColor","style","titleStyleOverrides","color","disabled","container","String","toUpperCase","defaultProps","disabledColor","shadeOpacity","propTypes","string","isRequired","Text"],"mappings":"4zCAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,C,qDAGA,MAAOC,CAAAA,MAAP,iBACA,OAASC,MAAT,gB,GAEqBC,CAAAA,U,+QAoBV,iBAQH,KAAKC,KARF,CAELC,KAFK,aAELA,KAFK,CAGLC,UAHK,aAGLA,UAHK,CAILC,UAJK,aAILA,UAJK,CAKLC,kBALK,aAKLA,kBALK,CAMLC,KANK,aAMLA,KANK,CAOFL,KAPE,wGAUP,GAAIM,CAAAA,mBAAmB,CAAG,CACxBC,KAAK,CAAEP,KAAK,CAACQ,QAAN,CACLJ,kBADK,CAELF,UAHsB,CAA1B,CAMA,MACE,qBAAC,MAAD,WACE,KAAK,CAAE,CAACJ,MAAM,CAACW,SAAR,CAAmBJ,KAAnB,CADT,CAEE,UAAU,CAAEH,UAFd,CAGE,WAAW,CAAEA,UAHf,EAIMF,KAJN,EAME,oBAAC,IAAD,EACE,KAAK,CAAE,CAACF,MAAM,CAACG,KAAR,CAAeE,UAAf,CAA2BG,mBAA3B,CADT,CAEE,aAAa,CAAE,CAFjB,EAIGI,MAAM,CAACT,KAAD,CAAN,CAAcU,WAAd,EAJH,CANF,CADF,CAeD,C,wBAnDqCf,a,EAAnBG,U,CACZa,Y,CAAe,CACpBL,KAAK,CAAE,aADa,CAEpBM,aAAa,CAAE,aAFK,CAIpBX,UAAU,CAAE,cAJQ,CAKpBE,kBAAkB,CAAE,oBALA,CAOpBU,YAAY,CAAE,IAPM,C,CADHf,U,CAWZgB,S,kBACFlB,MAAM,CAACkB,S,EAEVd,KAAK,CAAEP,SAAS,CAACsB,MAAV,CAAiBC,U,CACxBf,UAAU,CAAER,SAAS,CAACsB,M,CACtBb,UAAU,CAAEe,IAAI,CAACH,SAAL,CAAeV,K,CAC3BD,kBAAkB,CAAEV,SAAS,CAACsB,M,UAjBbjB,U","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Text } from 'react-native';\n\nimport Button from '../button';\nimport { styles } from './styles';\n\nexport default class TextButton extends PureComponent {\n  static defaultProps = {\n    color: 'transparent',\n    disabledColor: 'transparent',\n\n    titleColor: 'rgb(0, 0, 0)',\n    disabledTitleColor: 'rgba(0, 0, 0, .26)',\n\n    shadeOpacity: 0.20,\n  };\n\n  static propTypes = {\n    ...Button.propTypes,\n\n    title: PropTypes.string.isRequired,\n    titleColor: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    disabledTitleColor: PropTypes.string,\n  };\n\n  render() {\n    let {\n      title,\n      titleColor,\n      titleStyle,\n      disabledTitleColor,\n      style,\n      ...props\n    } = this.props;\n\n    let titleStyleOverrides = {\n      color: props.disabled?\n        disabledTitleColor:\n        titleColor,\n    };\n\n    return (\n      <Button\n        style={[styles.container, style]}\n        shadeColor={titleColor}\n        rippleColor={titleColor}\n        {...props}\n      >\n        <Text\n          style={[styles.title, titleStyle, titleStyleOverrides]}\n          numberOfLines={1}\n        >\n          {String(title).toUpperCase()}\n        </Text>\n      </Button>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}