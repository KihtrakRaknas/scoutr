{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-core/src/views/withNavigationFocus.js\";import React from'react';import hoistStatics from'hoist-non-react-statics';import withNavigation from\"./withNavigation\";export default function withNavigationFocus(Component){var ComponentWithNavigationFocus=function(_React$Component){_inherits(ComponentWithNavigationFocus,_React$Component);function ComponentWithNavigationFocus(props){var _this;_classCallCheck(this,ComponentWithNavigationFocus);_this=_possibleConstructorReturn(this,_getPrototypeOf(ComponentWithNavigationFocus).call(this,props));_this.subscriptions=[props.navigation.addListener('didFocus',function(){return _this.setState({isFocused:true});}),props.navigation.addListener('willBlur',function(){return _this.setState({isFocused:false});})];_this.state={isFocused:props.navigation?props.navigation.isFocused():false};return _this;}_createClass(ComponentWithNavigationFocus,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.subscriptions.forEach(function(sub){return sub.remove();});}},{key:\"render\",value:function render(){return React.createElement(Component,_extends({},this.props,{isFocused:this.state.isFocused,ref:this.props.onRef,__source:{fileName:_jsxFileName,lineNumber:33}}));}}]);return ComponentWithNavigationFocus;}(React.Component);ComponentWithNavigationFocus.displayName=\"withNavigationFocus(\"+(Component.displayName||Component.name)+\")\";return hoistStatics(withNavigation(ComponentWithNavigationFocus,{forwardRef:false}),Component);}","map":{"version":3,"sources":["withNavigationFocus.js"],"names":["ComponentWithNavigationFocus","React","Component","props","isFocused","sub","hoistStatics","withNavigation","forwardRef"],"mappings":"mfAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,YAAA,KAAA,yBAAA,CACA,MAAA,CAAA,cAAA,wBAEA,cAAe,SAAA,CAAA,mBAAA,CAAA,SAAA,CAAwC,CAAA,GAC/CA,CAAAA,4BAD+C,CAAA,SAAA,gBAAA,CAAA,CAAA,SAAA,CAAA,4BAAA,CAAA,gBAAA,CAAA,CAKnD,QAAA,CAAA,4BAAA,CAAA,KAAA,CAAmB,CAAA,GAAA,CAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA,4BAAA,CAAA,CACjB,KAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,eAAA,CAAA,4BAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAEA,KAAA,CAAA,aAAA,CAAqB,CACnBG,KAAK,CAALA,UAAAA,CAAAA,WAAAA,CAAAA,UAAAA,CAAyC,UAAA,CAAA,MACvC,CAAA,KAAA,CAAA,QAAA,CAAc,CAAEC,SAAS,CADc,IACzB,CAAd,CADuC,CADtB,CACnBD,CADmB,CAInBA,KAAK,CAALA,UAAAA,CAAAA,WAAAA,CAAAA,UAAAA,CAAyC,UAAA,CAAA,MACvC,CAAA,KAAA,CAAA,QAAA,CAAc,CAAEC,SAAS,CADc,KACzB,CAAd,CADuC,CAJ3C,CAIED,CAJmB,CAArB,CASA,KAAA,CAAA,KAAA,CAAa,CACXC,SAAS,CAAED,KAAK,CAALA,UAAAA,CAAmBA,KAAK,CAALA,UAAAA,CAAnBA,SAAmBA,EAAnBA,CADb,KAAa,CAAb,CAZiB,MAAA,CAAA,KAAA,CALgC,CAAA,YAAA,CAAA,4BAAA,CAAA,CAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,oBAAA,EAsB5B,CACrB,KAAA,aAAA,CAAA,OAAA,CAA2B,SAAA,GAAA,CAAG,CAAA,MAAIE,CAAAA,GAAG,CAAP,MAAIA,EAAJ,CAA9B,CAAA,EAvBiD,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,EA0B1C,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CACM,KADN,KAAA,CAAA,CAEE,SAAS,CAAE,KAAA,KAAA,CAFb,SAAA,CAGE,GAAG,CAAE,KAAA,KAAA,CAHP,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,CA3BiD,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,4BAAA,CAAA,CAAA,CACVJ,KAAK,CADK,SAAA,CAAA,CAC/CD,4BAD+C,CAAA,WAC/CA,CAD+C,wBAEPE,SAAS,CAATA,WAAAA,EAC1CA,SAAS,CAHwC,IAAA,EAAA,GAC/CF,CAoCN,MAAOM,CAAAA,YAAY,CACjBC,cAAc,CAAA,4BAAA,CAA+B,CAAEC,UAAU,CADxC,KAC4B,CAA/B,CADG,CAAnB,SAAmB,CAAnB,CAID","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.subscriptions = [\n        props.navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        props.navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\n    Component\n  );\n}\n"]},"metadata":{},"sourceType":"module"}