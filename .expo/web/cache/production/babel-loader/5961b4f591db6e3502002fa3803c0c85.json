{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import{State,BaseButton}from\"../GestureHandler\";import PropTypes from'prop-types';export var TOUCHABLE_STATE={UNDETERMINED:0,BEGAN:1,MOVED_OUTSIDE:2};var PublicPropTypes={accessible:PropTypes.bool,accessibilityLabel:PropTypes.node,accessibilityHint:PropTypes.string,hitSlop:PropTypes.shape({top:PropTypes.number,left:PropTypes.number,bottom:PropTypes.number,right:PropTypes.number}),disabled:PropTypes.bool,onPress:PropTypes.func,onPressIn:PropTypes.func,onPressOut:PropTypes.func,onLayout:PropTypes.func,onLongPress:PropTypes.func,nativeID:PropTypes.string,testID:PropTypes.string,delayPressIn:PropTypes.number,delayPressOut:PropTypes.number,delayLongPress:PropTypes.number,shouldActivateOnStart:PropTypes.bool,disallowInterruption:PropTypes.bool};var InternalPropTypes={extraButtonProps:PropTypes.object,onStateChange:PropTypes.func};var GenericTouchable=function(_Component){_inherits(GenericTouchable,_Component);function GenericTouchable(){var _getPrototypeOf2;var _this;_classCallCheck(this,GenericTouchable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GenericTouchable)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.longPressDetected=false;_this.pointerInside=true;_this.STATE=TOUCHABLE_STATE.UNDETERMINED;_this.onGestureEvent=function(_ref){var pointerInside=_ref.nativeEvent.pointerInside;if(_this.pointerInside!==pointerInside){if(pointerInside){_this.onMoveIn();}else{_this.onMoveOut();}}_this.pointerInside=pointerInside;};_this.onHandlerStateChange=function(_ref2){var nativeEvent=_ref2.nativeEvent;var state=nativeEvent.state;if(state===State.CANCELLED||state===State.FAILED){_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}else if(state===(Platform.OS==='ios'?State.ACTIVE:State.BEGAN)&&_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.handlePressIn();}else if(state===State.END){var shouldCallOnPress=!_this.longPressDetected&&_this.STATE!==TOUCHABLE_STATE.MOVED_OUTSIDE&&_this.pressOutTimeout===null;_this.handleGoToUndetermined();if(shouldCallOnPress){_this.props.onPress&&_this.props.onPress();}}};_this.onLongPressDetected=function(){_this.longPressDetected=true;_this.props.onLongPress();};return _this;}_createClass(GenericTouchable,[{key:\"handlePressIn\",value:function handlePressIn(){var _this2=this;if(this.props.delayPressIn){this.pressInTimeout=setTimeout(function(){_this2.moveToState(TOUCHABLE_STATE.BEGAN);_this2.pressInTimeout=null;},this.props.delayPressIn);}else{this.moveToState(TOUCHABLE_STATE.BEGAN);}if(this.props.onLongPress){var time=(this.props.delayPressIn||0)+(this.props.delayLongPress||0);this.longPressTimeout=setTimeout(this.onLongPressDetected,time);}}},{key:\"handleMoveOutside\",value:function handleMoveOutside(){var _this3=this;if(this.props.delayPressOut){this.pressOutTimeout=this.pressOutTimeout||setTimeout(function(){_this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);_this3.pressOutTimeout=null;},this.props.delayPressOut);}else{this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);}}},{key:\"handleGoToUndetermined\",value:function handleGoToUndetermined(){var _this4=this;clearTimeout(this.pressOutTimeout);if(this.props.delayPressOut){this.pressOutTimeout=setTimeout(function(){if(_this4.STATE===TOUCHABLE_STATE.UNDETERMINED){_this4.moveToState(TOUCHABLE_STATE.BEGAN);}_this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);_this4.pressOutTimeout=null;},this.props.delayPressOut);}else{if(this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.moveToState(TOUCHABLE_STATE.BEGAN);}this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}}},{key:\"componentDidMount\",value:function componentDidMount(){this.reset();}},{key:\"reset\",value:function reset(){this.longPressDetected=false;this.pointerInside=true;clearTimeout(this.pressInTimeout);clearTimeout(this.pressOutTimeout);clearTimeout(this.longPressTimeout);this.pressOutTimeout=null;this.longPressTimeout=null;this.pressInTimeout=null;}},{key:\"moveToState\",value:function moveToState(newState){if(newState===this.STATE){return;}if(newState===TOUCHABLE_STATE.BEGAN){this.props.onPressIn&&this.props.onPressIn();}else if(newState===TOUCHABLE_STATE.MOVED_OUTSIDE){this.props.onPressOut&&this.props.onPressOut();}else if(newState===TOUCHABLE_STATE.UNDETERMINED){this.reset();if(this.STATE===TOUCHABLE_STATE.BEGAN){this.props.onPressOut&&this.props.onPressOut();}}this.props.onStateChange&&this.props.onStateChange(this.STATE,newState);this.STATE=newState;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.reset();}},{key:\"onMoveIn\",value:function onMoveIn(){if(this.STATE===TOUCHABLE_STATE.MOVED_OUTSIDE){this.moveToState(TOUCHABLE_STATE.BEGAN);}}},{key:\"onMoveOut\",value:function onMoveOut(){clearTimeout(this.longPressTimeout);this.longPressTimeout=null;if(this.STATE===TOUCHABLE_STATE.BEGAN){this.handleMoveOutside();}}},{key:\"render\",value:function render(){var coreProps={accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityComponentType:this.props.accessibilityComponentType,accessibilityRole:this.props.accessibilityRole,accessibilityStates:this.props.accessibilityStates,accessibilityTraits:this.props.accessibilityTraits,nativeID:this.props.nativeID,testID:this.props.testID,onLayout:this.props.onLayout,hitSlop:this.props.hitSlop};return React.createElement(BaseButton,_extends({style:this.props.containerStyle,onHandlerStateChange:this.props.disabled?null:this.onHandlerStateChange,onGestureEvent:this.onGestureEvent,hitSlop:this.props.hitSlop,shouldActivateOnStart:this.props.shouldActivateOnStart,disallowInterruption:this.props.disallowInterruption},this.props.extraButtonProps),React.createElement(Animated.View,_extends({},coreProps,{style:this.props.style}),this.props.children));}}]);return GenericTouchable;}(Component);GenericTouchable.publicPropTypes=PublicPropTypes;GenericTouchable.internalPropTypes=InternalPropTypes;GenericTouchable.propTypes=_objectSpread({},InternalPropTypes,{},PublicPropTypes);GenericTouchable.defaultProps={delayLongPress:600,extraButtonProps:{rippleColor:'transparent'}};export{GenericTouchable as default};","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/touchables/GenericTouchable.js"],"names":["React","Component","State","BaseButton","PropTypes","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","PublicPropTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","hitSlop","shape","top","number","left","bottom","right","disabled","onPress","func","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","shouldActivateOnStart","disallowInterruption","InternalPropTypes","extraButtonProps","object","onStateChange","GenericTouchable","longPressDetected","pointerInside","STATE","onGestureEvent","nativeEvent","onMoveIn","onMoveOut","onHandlerStateChange","state","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","handlePressIn","END","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","props","onLongPressDetected","pressInTimeout","setTimeout","time","longPressTimeout","clearTimeout","reset","newState","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityTraits","containerStyle","style","children","publicPropTypes","internalPropTypes","propTypes","defaultProps","rippleColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS === 'ios' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}