{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Header/HeaderContainer.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{NavigationContext}from'react-navigation';import Header from\"./Header\";import{forStatic,forNoAnimation}from\"../../TransitionConfigs/HeaderStyleInterpolators\";export default function HeaderContainer(_ref){var mode=_ref.mode,scenes=_ref.scenes,layout=_ref.layout,insets=_ref.insets,state=_ref.state,getPreviousRoute=_ref.getPreviousRoute,onContentHeightChange=_ref.onContentHeightChange,styleInterpolator=_ref.styleInterpolator,style=_ref.style;var focusedRoute=state.routes[state.index];return React.createElement(View,{pointerEvents:\"box-none\",style:style,__source:{fileName:_jsxFileName,lineNumber:51}},scenes.slice(-3).map(function(scene,i,self){if(mode==='screen'&&i!==self.length-1||!scene){return null;}var options=scene.descriptor.options;var isFocused=focusedRoute.key===scene.route.key;var previousRoute=getPreviousRoute({route:scene.route});var previous;if(previousRoute){for(var j=i-1;j>=0;j--){var s=self[j];if(s&&s.route.key===previousRoute.key){previous=s;break;}}}var previousScene=self[i-1];var nextScene=self[i+1];var isHeaderStatic=previousScene&&previousScene.descriptor.options.headerShown===false&&!nextScene||nextScene&&nextScene.descriptor.options.headerShown===false;var props={mode:mode,layout:layout,insets:insets,scene:scene,previous:previous,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?forStatic:styleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.route.key,value:scene.descriptor.navigation,__source:{fileName:_jsxFileName,lineNumber:104}},React.createElement(View,{onLayout:onContentHeightChange?function(e){return onContentHeightChange({route:scene.route,height:e.nativeEvent.layout.height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'||options.headerTransparent?styles.header:null,__source:{fileName:_jsxFileName,lineNumber:108}},options.headerShown!==false?options.header!==undefined?options.header(props):React.createElement(Header,_extends({},props,{__source:{fileName:_jsxFileName,lineNumber:133}})):null));}));}var styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["HeaderContainer.tsx"],"names":["mode","scenes","layout","insets","state","getPreviousRoute","onContentHeightChange","styleInterpolator","style","focusedRoute","i","self","options","scene","isFocused","previousRoute","route","j","s","previous","previousScene","nextScene","isHeaderStatic","props","navigation","height","e","styles","StyleSheet","header","position","top","left","right"],"mappings":"4KAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,OAAA,iBAAA,KAAA,kBAAA,CAIA,MAAA,CAAA,MAAA,gBACA,OAAA,SAAA,CAAA,cAAA,wDA6BA,cAAe,SAAA,CAAA,eAAA,CAAA,IAAA,CAUL,CATRA,GAAAA,CAAAA,IASQ,CAAA,IAAA,CATRA,IAAAA,CACAC,MAQQ,CAAA,IAAA,CARRA,MADAD,CAEAE,MAOQ,CAAA,IAAA,CAPRA,MAFAF,CAGAG,MAMQ,CAAA,IAAA,CANRA,MAHAH,CAIAI,KAKQ,CAAA,IAAA,CALRA,KAJAJ,CAKAK,gBAIQ,CAAA,IAAA,CAJRA,gBALAL,CAMAM,qBAGQ,CAAA,IAAA,CAHRA,qBANAN,CAOAO,iBAEQ,CAAA,IAAA,CAFRA,iBAPAP,CAQAQ,KACQ,CAAA,IAAA,CADRA,KARAR,CAUA,GAAMS,CAAAA,YAAY,CAAGL,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAvC,KAAqBA,CAArB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,aAAa,CAAnB,UAAA,CAA+B,KAAK,CAApC,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACGH,MAAM,CAANA,KAAAA,CAAa,CAAbA,CAAAA,EAAAA,GAAAA,CAAqB,SAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAoB,CACxC,GAAKD,IAAI,GAAJA,QAAAA,EAAqBU,CAAC,GAAKC,IAAI,CAAJA,MAAAA,CAA5B,CAACX,EAA+C,CAApD,KAAA,CAA4D,CAC1D,MAAA,KAAA,CAFsC,IAKhCY,CAAAA,OALgC,CAKpBC,KAAK,CALe,UAKpBA,CALoB,OAAA,CAMxC,GAAMC,CAAAA,SAAS,CAAGL,YAAY,CAAZA,GAAAA,GAAqBI,KAAK,CAALA,KAAAA,CAAvC,GAAA,CACA,GAAME,CAAAA,aAAa,CAAGV,gBAAgB,CAAC,CAAEW,KAAK,CAAEH,KAAK,CAArD,KAAuC,CAAD,CAAtC,CAEA,GAAA,CAAA,QAAA,CAEA,GAAA,aAAA,CAAmB,CAGjB,IAAK,GAAII,CAAAA,CAAC,CAAGP,CAAC,CAAd,CAAA,CAAoBO,CAAC,EAArB,CAAA,CAA4BA,CAA5B,EAAA,CAAiC,CAC/B,GAAMC,CAAAA,CAAC,CAAGP,IAAI,CAAd,CAAc,CAAd,CAEA,GAAIO,CAAC,EAAIA,CAAC,CAADA,KAAAA,CAAAA,GAAAA,GAAgBH,aAAa,CAAtC,GAAA,CAA4C,CAC1CI,QAAQ,CAARA,CAAAA,CACA,MAEH,CACF,CAID,IAAMC,CAAAA,aAAa,CAAGT,IAAI,CAACD,CAAC,CAA5B,CAA0B,CAA1B,CACA,GAAMW,CAAAA,SAAS,CAAGV,IAAI,CAACD,CAAC,CAAxB,CAAsB,CAAtB,CACA,GAAMY,CAAAA,cAAc,CACjBF,aAAa,EACZA,aAAa,CAAbA,UAAAA,CAAAA,OAAAA,CAAAA,WAAAA,GADDA,KAAAA,EAIC,CAJF,SAACA,EAKAC,SAAS,EAAIA,SAAS,CAATA,UAAAA,CAAAA,OAAAA,CAAAA,WAAAA,GANhB,KAAA,CAQA,GAAME,CAAAA,KAAK,CAAG,CACZvB,IAAI,CADQ,IAAA,CAEZE,MAAM,CAFM,MAAA,CAGZC,MAAM,CAHM,MAAA,CAIZU,KAAK,CAJO,KAAA,CAKZM,QAAQ,CALI,QAAA,CAMZK,UAAU,CAAGX,KAAK,CAALA,UAAAA,CAND,UAAA,CAOZN,iBAAiB,CACfP,IAAI,GAAJA,OAAAA,CACIsB,cAAc,CAAA,SAAA,CADlBtB,iBAAAA,CARJ,cAAc,CAAd,CAeA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,iBAAD,CAAA,QAAA,CAAA,CACE,GAAG,CAAEa,KAAK,CAALA,KAAAA,CADP,GAAA,CAEE,KAAK,CAAEA,KAAK,CAALA,UAAAA,CAFT,UAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAIE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,QAAQ,CACNP,qBAAqB,CACjB,SAAA,CAAA,CAAC,CAAA,MACCA,CAAAA,qBAAqB,CAAC,CACpBU,KAAK,CAAEH,KAAK,CADQ,KAAA,CAEpBY,MAAM,CAAEC,CAAC,CAADA,WAAAA,CAAAA,MAAAA,CAHX,MACuB,CAAD,CADtB,CADgB,CAAA,CAFzB,SAAA,CAUE,aAAa,CAAEZ,SAAS,CAAA,UAAA,CAV1B,MAAA,CAWE,2BAA2B,CAAE,CAX/B,SAAA,CAYE,yBAAyB,CACvBA,SAAS,CAAA,MAAA,CAbb,qBAAA,CAeE,KAAK,CACHd,IAAI,GAAJA,OAAAA,EAAoBY,OAAO,CAA3BZ,iBAAAA,CACI2B,MAAM,CADV3B,MAAAA,CAhBJ,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAqBGY,OAAO,CAAPA,WAAAA,GAAAA,KAAAA,CACCA,OAAO,CAAPA,MAAAA,GAAAA,SAAAA,CACEA,OAAO,CAAPA,MAAAA,CADFA,KACEA,CADFA,CAGE,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAJHA,GAIG,CAAA,CAAA,CAAA,CAJHA,CA1BP,IAKI,CAJF,CADF,CArDN,CAEKX,CADH,CADF,CA8FF,IAAM0B,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,MAAM,CAAE,CACNC,QAAQ,CADF,UAAA,CAENC,GAAG,CAFG,CAAA,CAGNC,IAAI,CAHE,CAAA,CAINC,KAAK,CALT,CACU,CADuB,CAAlBL,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { NavigationContext } from 'react-navigation';\nimport { NavigationState as StackNavigationState } from 'react-navigation';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forStatic,\n  forNoAnimation,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport {\n  Route,\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  state: StackNavigationState;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  state,\n  getPreviousRoute,\n  onContentHeightChange,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = state.routes[state.index];\n\n  return (\n    <View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const { options } = scene.descriptor;\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previousRoute = getPreviousRoute({ route: scene.route });\n\n        let previous;\n\n        if (previousRoute) {\n          // The previous scene will be shortly before the current scene in the array\n          // So loop back from current index to avoid looping over the full array\n          for (let j = i - 1; j >= 0; j--) {\n            const s = self[j];\n\n            if (s && s.route.key === previousRoute.key) {\n              previous = s;\n              break;\n            }\n          }\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n        const isHeaderStatic =\n          (previousScene &&\n            previousScene.descriptor.options.headerShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          (nextScene && nextScene.descriptor.options.headerShown === false);\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation:  scene.descriptor.navigation as StackNavigationProp,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? forStatic\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <View\n              onLayout={\n                onContentHeightChange\n                  ? e =>\n                      onContentHeightChange({\n                        route: scene.route,\n                        height: e.nativeEvent.layout.height,\n                      })\n                  : undefined\n              }\n              pointerEvents={isFocused ? 'box-none' : 'none'}\n              accessibilityElementsHidden={!isFocused}\n              importantForAccessibility={\n                isFocused ? 'auto' : 'no-hide-descendants'\n              }\n              style={\n                mode === 'float' || options.headerTransparent\n                  ? styles.header\n                  : null\n              }\n            >\n              {options.headerShown !== false ? (\n                options.header !== undefined ? (\n                  options.header(props)\n                ) : (\n                  <Header {...props} />\n                )\n              ) : null}\n            </View>\n          </NavigationContext.Provider>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}