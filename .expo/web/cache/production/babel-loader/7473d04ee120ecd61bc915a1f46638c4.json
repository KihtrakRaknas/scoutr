{"ast":null,"code":"var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Stack/CardContainer.tsx\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Card from\"./Card\";import HeaderHeightContext from\"../../utils/HeaderHeightContext\";import useTheme from\"../../../utils/useTheme\";function CardContainer(_ref){var active=_ref.active,cardOverlayEnabled=_ref.cardOverlayEnabled,cardShadowEnabled=_ref.cardShadowEnabled,cardStyle=_ref.cardStyle,cardStyleInterpolator=_ref.cardStyleInterpolator,closing=_ref.closing,gesture=_ref.gesture,focused=_ref.focused,gestureDirection=_ref.gestureDirection,gestureEnabled=_ref.gestureEnabled,gestureResponseDistance=_ref.gestureResponseDistance,gestureVelocityImpact=_ref.gestureVelocityImpact,getPreviousRoute=_ref.getPreviousRoute,headerMode=_ref.headerMode,headerShown=_ref.headerShown,headerStyleInterpolator=_ref.headerStyleInterpolator,headerTransparent=_ref.headerTransparent,headerHeight=_ref.headerHeight,onHeaderHeightChange=_ref.onHeaderHeightChange,index=_ref.index,layout=_ref.layout,onCloseRoute=_ref.onCloseRoute,onOpenRoute=_ref.onOpenRoute,onPageChangeCancel=_ref.onPageChangeCancel,onPageChangeConfirm=_ref.onPageChangeConfirm,onPageChangeStart=_ref.onPageChangeStart,onTransitionEnd=_ref.onTransitionEnd,onTransitionStart=_ref.onTransitionStart,previousScene=_ref.previousScene,renderHeader=_ref.renderHeader,renderScene=_ref.renderScene,safeAreaInsetBottom=_ref.safeAreaInsetBottom,safeAreaInsetLeft=_ref.safeAreaInsetLeft,safeAreaInsetRight=_ref.safeAreaInsetRight,safeAreaInsetTop=_ref.safeAreaInsetTop,scene=_ref.scene,state=_ref.state,transitionSpec=_ref.transitionSpec;React.useEffect(function(){onPageChangeConfirm==null?void 0:onPageChangeConfirm();},[active,onPageChangeConfirm]);var handleOpen=function handleOpen(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},false);onOpenRoute({route:scene.route});};var handleClose=function handleClose(){onTransitionEnd==null?void 0:onTransitionEnd({route:scene.route},true);onCloseRoute({route:scene.route});};var handleTransitionStart=function handleTransitionStart(_ref2){var closing=_ref2.closing;if(active&&closing){onPageChangeConfirm==null?void 0:onPageChangeConfirm();}else{onPageChangeCancel==null?void 0:onPageChangeCancel();}onTransitionStart==null?void 0:onTransitionStart({route:scene.route},closing);};var insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};var _useTheme=useTheme(),colors=_useTheme.colors;return React.createElement(Card,{index:index,gestureDirection:gestureDirection,layout:layout,insets:insets,gesture:gesture,current:scene.progress.current,next:scene.progress.next,closing:closing,onOpen:handleOpen,onClose:handleClose,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransitionStart:handleTransitionStart,onGestureBegin:onPageChangeStart,onGestureCanceled:onPageChangeCancel,gestureEnabled:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:\"box-none\",containerStyle:headerMode==='float'&&!headerTransparent&&headerShown!==false?{marginTop:headerHeight}:null,contentStyle:[{backgroundColor:colors.background},cardStyle],style:StyleSheet.absoluteFill,__source:{fileName:_jsxFileName,lineNumber:138}},React.createElement(View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:170}},React.createElement(View,{style:styles.scene,__source:{fileName:_jsxFileName,lineNumber:171}},React.createElement(HeaderHeightContext.Provider,{value:headerHeight,__source:{fileName:_jsxFileName,lineNumber:172}},renderScene({route:scene.route}))),headerMode==='screen'?renderHeader({mode:'screen',layout:layout,insets:insets,scenes:[previousScene,scene],state:state,getPreviousRoute:getPreviousRoute,styleInterpolator:headerStyleInterpolator,onContentHeightChange:onHeaderHeightChange}):null));}export default React.memo(CardContainer);var styles=StyleSheet.create({container:{flex:1,flexDirection:'column-reverse'},scene:{flex:1}});","map":{"version":3,"sources":["CardContainer.tsx"],"names":["active","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousRoute","headerMode","headerShown","headerStyleInterpolator","headerTransparent","headerHeight","onHeaderHeightChange","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onTransitionEnd","onTransitionStart","previousScene","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","state","transitionSpec","React","handleOpen","route","handleClose","handleTransitionStart","insets","top","right","bottom","left","colors","useTheme","marginTop","backgroundColor","StyleSheet","styles","mode","scenes","styleInterpolator","onContentHeightChange","container","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { NavigationState as StackNavigationState } from 'react-navigation';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\nimport useTheme from '../../../utils/useTheme';\nimport {\n  Route,\n  Scene,\n  Layout,\n  StackHeaderMode,\n  TransitionPreset,\n} from '../../types';\n\ntype Props = TransitionPreset & {\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  previousScene?: Scene<Route<string>>;\n  scene: Scene<Route<string>>;\n  state: StackNavigationState;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  cardOverlayEnabled?: boolean;\n  cardShadowEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  gestureEnabled?: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact?: number;\n  headerMode: StackHeaderMode;\n  headerShown?: boolean;\n  headerTransparent?: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n};\n\nfunction CardContainer({\n  active,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousRoute,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  headerTransparent,\n  headerHeight,\n  onHeaderHeightChange,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onTransitionEnd,\n  onTransitionStart,\n  previousScene,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  state,\n  transitionSpec,\n}: Props) {\n  React.useEffect(() => {\n    onPageChangeConfirm?.();\n  }, [active, onPageChangeConfirm]);\n\n  const handleOpen = () => {\n    onTransitionEnd?.({ route: scene.route }, false);\n    onOpenRoute({ route: scene.route });\n  };\n\n  const handleClose = () => {\n    onTransitionEnd?.({ route: scene.route }, true);\n    onCloseRoute({ route: scene.route });\n  };\n\n  const handleTransitionStart = ({ closing }: { closing: boolean }) => {\n    if (active && closing) {\n      onPageChangeConfirm?.();\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route: scene.route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  return (\n    <Card\n      index={index}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransitionStart={handleTransitionStart}\n      onGestureBegin={onPageChangeStart}\n      onGestureCanceled={onPageChangeCancel}\n      gestureEnabled={gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents=\"box-none\"\n      containerStyle={\n        headerMode === 'float' && !headerTransparent && headerShown !== false\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle] as any}\n      style={StyleSheet.absoluteFill}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <HeaderHeightContext.Provider value={headerHeight}>\n            {renderScene({ route: scene.route })}\n          </HeaderHeightContext.Provider>\n        </View>\n        {headerMode === 'screen'\n          ? renderHeader({\n              mode: 'screen',\n              layout,\n              insets,\n              scenes: [previousScene, scene],\n              state,\n              getPreviousRoute,\n              styleInterpolator: headerStyleInterpolator,\n              onContentHeightChange: onHeaderHeightChange,\n            })\n          : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}