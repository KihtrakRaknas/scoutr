{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import NativeText from\"react-native-web/dist/exports/Text\";import TextElement from\"../text/Text\";import CheckBoxIcon from\"./CheckBoxIcon\";import{fonts,ViewPropTypes,withTheme}from\"../config\";var CheckBox=function CheckBox(props){var theme=props.theme,rest=_objectWithoutProperties(props,[\"theme\"]);var Component=rest.Component,checked=rest.checked,iconRight=rest.iconRight,title=rest.title,titleProps=rest.titleProps,center=rest.center,right=rest.right,containerStyle=rest.containerStyle,textStyle=rest.textStyle,wrapperStyle=rest.wrapperStyle,onPress=rest.onPress,onLongPress=rest.onLongPress,checkedTitle=rest.checkedTitle,fontFamily=rest.fontFamily,_rest$checkedColor=rest.checkedColor,checkedColor=_rest$checkedColor===void 0?theme.colors.primary:_rest$checkedColor,attributes=_objectWithoutProperties(rest,[\"Component\",\"checked\",\"iconRight\",\"title\",\"titleProps\",\"center\",\"right\",\"containerStyle\",\"textStyle\",\"wrapperStyle\",\"onPress\",\"onLongPress\",\"checkedTitle\",\"fontFamily\",\"checkedColor\"]);return React.createElement(Component,_extends({},attributes,{testID:\"checkbox\",onLongPress:onLongPress,onPress:onPress,style:StyleSheet.flatten([styles.container,title&&styles.containerHasTitle,containerStyle&&containerStyle])}),React.createElement(View,{style:StyleSheet.flatten([styles.wrapper,right&&{justifyContent:'flex-end'},center&&{justifyContent:'center'},wrapperStyle&&wrapperStyle])},!iconRight&&React.createElement(CheckBoxIcon,_extends({},props,{checkedColor:checkedColor})),React.isValidElement(title)?title:title&&React.createElement(TextElement,_extends({testID:\"checkboxTitle\",style:StyleSheet.flatten([styles.text(theme),textStyle&&textStyle,fontFamily&&{fontFamily:fontFamily}])},titleProps),checked?checkedTitle||title:title),iconRight&&React.createElement(CheckBoxIcon,_extends({},props,{checkedColor:checkedColor}))));};CheckBox.propTypes=_objectSpread({},CheckBoxIcon.propTypes,{Component:PropTypes.elementType,iconRight:PropTypes.bool,title:PropTypes.oneOfType([PropTypes.string,PropTypes.element]),titleProps:PropTypes.object,center:PropTypes.bool,right:PropTypes.bool,containerStyle:ViewPropTypes.style,wrapperStyle:ViewPropTypes.style,textStyle:NativeText.propTypes.style,onPress:PropTypes.func,onLongPress:PropTypes.func,checkedTitle:PropTypes.string,fontFamily:PropTypes.string});CheckBox.defaultProps={checked:false,iconRight:false,right:false,center:false,uncheckedColor:'#bfbfbf',checkedIcon:'check-square-o',uncheckedIcon:'square-o',size:24,Component:TouchableOpacity,titleProps:{}};var styles={wrapper:{flexDirection:'row',alignItems:'center'},container:{margin:5,marginLeft:10,marginRight:10,padding:10},containerHasTitle:{borderWidth:1,borderRadius:3,backgroundColor:'#fafafa',borderColor:'#ededed'},text:function text(theme){return _objectSpread({marginLeft:10,marginRight:10,color:theme.colors.grey1},Platform.select({android:_objectSpread({},fonts.android.bold),default:{fontWeight:'bold'}}));}};export{CheckBox};export default withTheme(CheckBox,'CheckBox');","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/checkbox/CheckBox.js"],"names":["React","PropTypes","TextElement","CheckBoxIcon","fonts","ViewPropTypes","withTheme","CheckBox","props","theme","rest","Component","checked","iconRight","title","titleProps","center","right","containerStyle","textStyle","wrapperStyle","onPress","onLongPress","checkedTitle","fontFamily","checkedColor","colors","primary","attributes","StyleSheet","flatten","styles","container","containerHasTitle","wrapper","justifyContent","isValidElement","text","propTypes","elementType","bool","oneOfType","string","element","object","style","NativeText","func","defaultProps","uncheckedColor","checkedIcon","uncheckedIcon","size","TouchableOpacity","flexDirection","alignItems","margin","marginLeft","marginRight","padding","borderWidth","borderRadius","backgroundColor","borderColor","color","grey1","Platform","select","android","bold","default","fontWeight"],"mappings":"y+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,2TASA,MAAOC,CAAAA,WAAP,oBACA,MAAOC,CAAAA,YAAP,sBACA,OAASC,KAAT,CAAgBC,aAAhB,CAA+BC,SAA/B,iBAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,IAChBC,CAAAA,KADgB,CACGD,KADH,CAChBC,KADgB,CACNC,IADM,0BACGF,KADH,eAItBG,CAAAA,SAJsB,CAoBpBD,IApBoB,CAItBC,SAJsB,CAKtBC,OALsB,CAoBpBF,IApBoB,CAKtBE,OALsB,CAMtBC,SANsB,CAoBpBH,IApBoB,CAMtBG,SANsB,CAOtBC,KAPsB,CAoBpBJ,IApBoB,CAOtBI,KAPsB,CAQtBC,UARsB,CAoBpBL,IApBoB,CAQtBK,UARsB,CAStBC,MATsB,CAoBpBN,IApBoB,CAStBM,MATsB,CAUtBC,KAVsB,CAoBpBP,IApBoB,CAUtBO,KAVsB,CAWtBC,cAXsB,CAoBpBR,IApBoB,CAWtBQ,cAXsB,CAYtBC,SAZsB,CAoBpBT,IApBoB,CAYtBS,SAZsB,CAatBC,YAbsB,CAoBpBV,IApBoB,CAatBU,YAbsB,CActBC,OAdsB,CAoBpBX,IApBoB,CActBW,OAdsB,CAetBC,WAfsB,CAoBpBZ,IApBoB,CAetBY,WAfsB,CAgBtBC,YAhBsB,CAoBpBb,IApBoB,CAgBtBa,YAhBsB,CAiBtBC,UAjBsB,CAoBpBd,IApBoB,CAiBtBc,UAjBsB,oBAoBpBd,IApBoB,CAkBtBe,YAlBsB,CAkBtBA,YAlBsB,6BAkBPhB,KAAK,CAACiB,MAAN,CAAaC,OAlBN,oBAmBnBC,UAnBmB,0BAoBpBlB,IApBoB,2LAsBxB,MACE,qBAAC,SAAD,aACMkB,UADN,EAEE,MAAM,CAAC,UAFT,CAGE,WAAW,CAAEN,WAHf,CAIE,OAAO,CAAED,OAJX,CAKE,KAAK,CAAEQ,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACC,SADiB,CAExBlB,KAAK,EAAIiB,MAAM,CAACE,iBAFQ,CAGxBf,cAAc,EAAIA,cAHM,CAAnB,CALT,GAWE,oBAAC,IAAD,EACE,KAAK,CAAEW,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACG,OADiB,CAExBjB,KAAK,EAAI,CAAEkB,cAAc,CAAE,UAAlB,CAFe,CAGxBnB,MAAM,EAAI,CAAEmB,cAAc,CAAE,QAAlB,CAHc,CAIxBf,YAAY,EAAIA,YAJQ,CAAnB,CADT,EAQG,CAACP,SAAD,EAAc,oBAAC,YAAD,aAAkBL,KAAlB,EAAyB,YAAY,CAAEiB,YAAvC,GARjB,CAUGzB,KAAK,CAACoC,cAAN,CAAqBtB,KAArB,EACGA,KADH,CAEGA,KAAK,EACH,oBAAC,WAAD,WACE,MAAM,CAAC,eADT,CAEE,KAAK,CAAEe,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACM,IAAP,CAAY5B,KAAZ,CADwB,CAExBU,SAAS,EAAIA,SAFW,CAGxBK,UAAU,EAAI,CAAEA,UAAU,CAAVA,UAAF,CAHU,CAAnB,CAFT,EAOMT,UAPN,EASGH,OAAO,CAAGW,YAAY,EAAIT,KAAnB,CAA2BA,KATrC,CAbR,CA0BGD,SAAS,EAAI,oBAAC,YAAD,aAAkBL,KAAlB,EAAyB,YAAY,CAAEiB,YAAvC,GA1BhB,CAXF,CADF,CA0CD,CAhED,CAiEAlB,QAAQ,CAAC+B,SAAT,kBACKnC,YAAY,CAACmC,SADlB,EAEE3B,SAAS,CAAEV,SAAS,CAACsC,WAFvB,CAGE1B,SAAS,CAAEZ,SAAS,CAACuC,IAHvB,CAIE1B,KAAK,CAAEb,SAAS,CAACwC,SAAV,CAAoB,CAACxC,SAAS,CAACyC,MAAX,CAAmBzC,SAAS,CAAC0C,OAA7B,CAApB,CAJT,CAKE5B,UAAU,CAAEd,SAAS,CAAC2C,MALxB,CAME5B,MAAM,CAAEf,SAAS,CAACuC,IANpB,CAOEvB,KAAK,CAAEhB,SAAS,CAACuC,IAPnB,CAQEtB,cAAc,CAAEb,aAAa,CAACwC,KARhC,CASEzB,YAAY,CAAEf,aAAa,CAACwC,KAT9B,CAUE1B,SAAS,CAAE2B,UAAU,CAACR,SAAX,CAAqBO,KAVlC,CAWExB,OAAO,CAAEpB,SAAS,CAAC8C,IAXrB,CAYEzB,WAAW,CAAErB,SAAS,CAAC8C,IAZzB,CAaExB,YAAY,CAAEtB,SAAS,CAACyC,MAb1B,CAcElB,UAAU,CAAEvB,SAAS,CAACyC,MAdxB,GAiBAnC,QAAQ,CAACyC,YAAT,CAAwB,CACtBpC,OAAO,CAAE,KADa,CAEtBC,SAAS,CAAE,KAFW,CAGtBI,KAAK,CAAE,KAHe,CAItBD,MAAM,CAAE,KAJc,CAKtBiC,cAAc,CAAE,SALM,CAMtBC,WAAW,CAAE,gBANS,CAOtBC,aAAa,CAAE,UAPO,CAQtBC,IAAI,CAAE,EARgB,CAStBzC,SAAS,CAAE0C,gBATW,CAUtBtC,UAAU,CAAE,EAVU,CAAxB,CAaA,GAAMgB,CAAAA,MAAM,CAAG,CACbG,OAAO,CAAE,CACPoB,aAAa,CAAE,KADR,CAEPC,UAAU,CAAE,QAFL,CADI,CAKbvB,SAAS,CAAE,CACTwB,MAAM,CAAE,CADC,CAETC,UAAU,CAAE,EAFH,CAGTC,WAAW,CAAE,EAHJ,CAITC,OAAO,CAAE,EAJA,CALE,CAWb1B,iBAAiB,CAAE,CACjB2B,WAAW,CAAE,CADI,CAEjBC,YAAY,CAAE,CAFG,CAGjBC,eAAe,CAAE,SAHA,CAIjBC,WAAW,CAAE,SAJI,CAXN,CAiBb1B,IAAI,CAAE,cAAA5B,KAAK,wBACTgD,UAAU,CAAE,EADH,CAETC,WAAW,CAAE,EAFJ,CAGTM,KAAK,CAAEvD,KAAK,CAACiB,MAAN,CAAauC,KAHX,EAINC,QAAQ,CAACC,MAAT,CAAgB,CACjBC,OAAO,kBACFhE,KAAK,CAACgE,OAAN,CAAcC,IADZ,CADU,CAIjBC,OAAO,CAAE,CACPC,UAAU,CAAE,MADL,CAJQ,CAAhB,CAJM,GAjBE,CAAf,CAgCA,OAAShE,QAAT,EACA,cAAeD,CAAAA,SAAS,CAACC,QAAD,CAAW,UAAX,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  Platform,\n  Text as NativeText,\n} from 'react-native';\n\nimport TextElement from '../text/Text';\nimport CheckBoxIcon from './CheckBoxIcon';\nimport { fonts, ViewPropTypes, withTheme } from '../config';\n\nconst CheckBox = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    checked,\n    iconRight,\n    title,\n    titleProps,\n    center,\n    right,\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    onLongPress,\n    checkedTitle,\n    fontFamily,\n    checkedColor = theme.colors.primary,\n    ...attributes\n  } = rest;\n\n  return (\n    <Component\n      {...attributes}\n      testID=\"checkbox\"\n      onLongPress={onLongPress}\n      onPress={onPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        title && styles.containerHasTitle,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          right && { justifyContent: 'flex-end' },\n          center && { justifyContent: 'center' },\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {!iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n\n        {React.isValidElement(title)\n          ? title\n          : title && (\n              <TextElement\n                testID=\"checkboxTitle\"\n                style={StyleSheet.flatten([\n                  styles.text(theme),\n                  textStyle && textStyle,\n                  fontFamily && { fontFamily },\n                ])}\n                {...titleProps}\n              >\n                {checked ? checkedTitle || title : title}\n              </TextElement>\n            )}\n\n        {iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n      </View>\n    </Component>\n  );\n};\nCheckBox.propTypes = {\n  ...CheckBoxIcon.propTypes,\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {},\n};\n\nconst styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed',\n  },\n  text: theme => ({\n    marginLeft: 10,\n    marginRight: 10,\n    color: theme.colors.grey1,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n  }),\n};\n\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');\n"]},"metadata":{},"sourceType":"module"}