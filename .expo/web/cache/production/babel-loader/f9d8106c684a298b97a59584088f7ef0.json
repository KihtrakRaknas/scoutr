{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import RNImage from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import TouchableNativeFeedback from\"react-native-web/dist/exports/TouchableNativeFeedback\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import{withTheme,ViewPropTypes}from\"../config\";import{renderNode,nodeType}from\"../helpers\";import Icon from\"../icons/Icon\";import Image from\"../image/Image\";var avatarSizes={small:34,medium:50,large:75,xlarge:150};var defaultEditButton={name:'mode-edit',type:'material',color:'#fff',underlayColor:'#000'};var Avatar=function Avatar(_ref){var onPress=_ref.onPress,onLongPress=_ref.onLongPress,_ref$Component=_ref.Component,Component=_ref$Component===void 0?onPress||onLongPress?TouchableOpacity:View:_ref$Component,containerStyle=_ref.containerStyle,icon=_ref.icon,iconStyle=_ref.iconStyle,source=_ref.source,size=_ref.size,avatarStyle=_ref.avatarStyle,rounded=_ref.rounded,title=_ref.title,titleStyle=_ref.titleStyle,overlayContainerStyle=_ref.overlayContainerStyle,showEditButton=_ref.showEditButton,passedEditButton=_ref.editButton,onEditPress=_ref.onEditPress,imageProps=_ref.imageProps,placeholderStyle=_ref.placeholderStyle,renderPlaceholderContent=_ref.renderPlaceholderContent,ImageComponent=_ref.ImageComponent,attributes=_objectWithoutProperties(_ref,[\"onPress\",\"onLongPress\",\"Component\",\"containerStyle\",\"icon\",\"iconStyle\",\"source\",\"size\",\"avatarStyle\",\"rounded\",\"title\",\"titleStyle\",\"overlayContainerStyle\",\"showEditButton\",\"editButton\",\"onEditPress\",\"imageProps\",\"placeholderStyle\",\"renderPlaceholderContent\",\"ImageComponent\"]);var width=typeof size==='number'?size:avatarSizes[size]||avatarSizes.small;var height=width;var titleSize=width/2;var iconSize=width/2;var editButton=_objectSpread({},defaultEditButton,{},passedEditButton);var editButtonSize=editButton.size||(width+height)/2/3;var Utils=showEditButton&&React.createElement(TouchableHighlight,{style:StyleSheet.flatten([styles.editButton,{width:editButtonSize,height:editButtonSize,borderRadius:editButtonSize/2},editButton.style]),underlayColor:editButton.underlayColor,onPress:onEditPress},React.createElement(View,null,React.createElement(Icon,_extends({size:editButtonSize*0.8},editButton))));var PlaceholderContent=renderPlaceholderContent&&renderNode(undefined,renderPlaceholderContent)||title&&React.createElement(Text,{style:StyleSheet.flatten([styles.title,{fontSize:titleSize},titleStyle])},title)||icon&&React.createElement(Icon,{style:iconStyle&&iconStyle,color:icon.color||'white',name:icon.name||'user',size:icon.size||iconSize,type:icon.type&&icon.type});var hidePlaceholder=!source;return React.createElement(Component,_extends({onPress:onPress,onLongPress:onLongPress,style:StyleSheet.flatten([styles.container,{height:height,width:width},rounded&&{borderRadius:width/2},containerStyle])},attributes),React.createElement(Image,_extends({placeholderStyle:StyleSheet.flatten([placeholderStyle,hidePlaceholder&&{backgroundColor:'transparent'}]),PlaceholderContent:PlaceholderContent,containerStyle:StyleSheet.flatten([styles.overlayContainer,overlayContainerStyle,rounded&&{borderRadius:width/2,overflow:'hidden'}]),source:source},imageProps,{style:StyleSheet.flatten([styles.avatar,imageProps&&imageProps.style,avatarStyle]),ImageComponent:ImageComponent})),Utils);};var styles=StyleSheet.create({container:{backgroundColor:'transparent'},avatar:{flex:1,width:null,height:null},overlayContainer:{flex:1,backgroundColor:'#bdbdbd'},title:{color:'#ffffff',backgroundColor:'transparent',textAlign:'center'},editButton:_objectSpread({position:'absolute',bottom:0,right:0,alignItems:'center',justifyContent:'center',backgroundColor:'#aaa'},Platform.select({android:{elevation:1},default:{shadowColor:'#000',shadowOffset:{width:1,height:1},shadowRadius:2,shadowOpacity:0.5}}))});Avatar.propTypes={Component:PropTypes.oneOf([View,TouchableOpacity,TouchableHighlight,TouchableNativeFeedback,TouchableWithoutFeedback]),onPress:PropTypes.func,onLongPress:PropTypes.func,containerStyle:ViewPropTypes.style,source:RNImage.propTypes.source,avatarStyle:ViewPropTypes.style,rounded:PropTypes.bool,title:PropTypes.string,titleStyle:Text.propTypes.style,overlayContainerStyle:ViewPropTypes.style,activeOpacity:PropTypes.number,icon:PropTypes.object,iconStyle:Text.propTypes.style,size:PropTypes.oneOfType([PropTypes.oneOf(['small','medium','large','xlarge']),PropTypes.number]),showEditButton:PropTypes.bool,onEditPress:PropTypes.func,editButton:PropTypes.shape({size:PropTypes.number,name:PropTypes.string,type:PropTypes.string,color:PropTypes.string,underlayColor:PropTypes.string,style:ViewPropTypes.style}),placeholderStyle:ViewPropTypes.style,renderPlaceholderContent:nodeType,imageProps:PropTypes.object,ImageComponent:PropTypes.elementType};Avatar.defaultProps={showEditButton:false,onEditPress:null,size:'small',editButton:defaultEditButton,ImageComponent:RNImage};export{Avatar};export default withTheme(Avatar,'Avatar');","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["React","PropTypes","withTheme","ViewPropTypes","renderNode","nodeType","Icon","Image","avatarSizes","small","medium","large","xlarge","defaultEditButton","name","type","color","underlayColor","Avatar","onPress","onLongPress","Component","TouchableOpacity","View","containerStyle","icon","iconStyle","source","size","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","showEditButton","passedEditButton","editButton","onEditPress","imageProps","placeholderStyle","renderPlaceholderContent","ImageComponent","attributes","width","height","titleSize","iconSize","editButtonSize","Utils","StyleSheet","flatten","styles","borderRadius","style","PlaceholderContent","undefined","fontSize","hidePlaceholder","container","backgroundColor","overlayContainer","overflow","avatar","create","flex","textAlign","position","bottom","right","alignItems","justifyContent","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius","shadowOpacity","propTypes","oneOf","TouchableHighlight","TouchableNativeFeedback","TouchableWithoutFeedback","func","RNImage","bool","string","Text","activeOpacity","number","object","oneOfType","shape","elementType","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text,\n  Image as RNImage,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport { withTheme, ViewPropTypes } from '../config';\nimport { renderNode, nodeType } from '../helpers';\n\nimport Icon from '../icons/Icon';\nimport Image from '../image/Image';\n\nconst avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150,\n};\n\nconst defaultEditButton = {\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000',\n};\n\nconst Avatar = ({\n  onPress,\n  onLongPress,\n  Component = onPress || onLongPress ? TouchableOpacity : View,\n  containerStyle,\n  icon,\n  iconStyle,\n  source,\n  size,\n  avatarStyle,\n  rounded,\n  title,\n  titleStyle,\n  overlayContainerStyle,\n  showEditButton,\n  editButton: passedEditButton,\n  onEditPress,\n  imageProps,\n  placeholderStyle,\n  renderPlaceholderContent,\n  ImageComponent,\n  ...attributes\n}) => {\n  const width =\n    typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  const height = width;\n  const titleSize = width / 2;\n  const iconSize = width / 2;\n\n  const editButton = {\n    ...defaultEditButton,\n    ...passedEditButton,\n  };\n  const editButtonSize = editButton.size || (width + height) / 2 / 3;\n\n  const Utils = showEditButton && (\n    <TouchableHighlight\n      style={StyleSheet.flatten([\n        styles.editButton,\n        {\n          width: editButtonSize,\n          height: editButtonSize,\n          borderRadius: editButtonSize / 2,\n        },\n        editButton.style,\n      ])}\n      underlayColor={editButton.underlayColor}\n      onPress={onEditPress}\n    >\n      <View>\n        <Icon size={editButtonSize * 0.8} {...editButton} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  const PlaceholderContent =\n    (renderPlaceholderContent &&\n      renderNode(undefined, renderPlaceholderContent)) ||\n    (title && (\n      <Text\n        style={StyleSheet.flatten([\n          styles.title,\n          { fontSize: titleSize },\n          titleStyle,\n        ])}\n      >\n        {title}\n      </Text>\n    )) ||\n    (icon && (\n      <Icon\n        style={iconStyle && iconStyle}\n        color={icon.color || 'white'}\n        name={icon.name || 'user'}\n        size={icon.size || iconSize}\n        type={icon.type && icon.type}\n      />\n    ));\n\n  // Remove placeholder styling if we're not using image\n  const hidePlaceholder = !source;\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        { height, width },\n        rounded && { borderRadius: width / 2 },\n        containerStyle,\n      ])}\n      {...attributes}\n    >\n      <Image\n        placeholderStyle={StyleSheet.flatten([\n          placeholderStyle,\n          hidePlaceholder && { backgroundColor: 'transparent' },\n        ])}\n        PlaceholderContent={PlaceholderContent}\n        containerStyle={StyleSheet.flatten([\n          styles.overlayContainer,\n          overlayContainerStyle,\n          rounded && { borderRadius: width / 2, overflow: 'hidden' },\n        ])}\n        source={source}\n        {...imageProps}\n        style={StyleSheet.flatten([\n          styles.avatar,\n          imageProps && imageProps.style,\n          avatarStyle,\n        ])}\n        ImageComponent={ImageComponent}\n      />\n      {Utils}\n    </Component>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  overlayContainer: {\n    flex: 1,\n    backgroundColor: '#bdbdbd',\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n  },\n  editButton: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: '#000',\n        shadowOffset: { width: 1, height: 1 },\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n      },\n    }),\n  },\n});\n\nAvatar.propTypes = {\n  Component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  source: RNImage.propTypes.source,\n  avatarStyle: ViewPropTypes.style,\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: Text.propTypes.style,\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n    PropTypes.number,\n  ]),\n  showEditButton: PropTypes.bool,\n  onEditPress: PropTypes.func,\n  editButton: PropTypes.shape({\n    size: PropTypes.number,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    color: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: ViewPropTypes.style,\n  }),\n  placeholderStyle: ViewPropTypes.style,\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nAvatar.defaultProps = {\n  showEditButton: false,\n  onEditPress: null,\n  size: 'small',\n  editButton: defaultEditButton,\n  ImageComponent: RNImage,\n};\n\nexport { Avatar };\nexport default withTheme(Avatar, 'Avatar');\n"]},"metadata":{},"sourceType":"module"}