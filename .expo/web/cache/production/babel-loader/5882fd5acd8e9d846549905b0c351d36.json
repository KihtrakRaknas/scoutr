{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import FontObserver from'fontfaceobserver';import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';export default{get name(){return'ExpoFontLoader';},loadAsync:function loadAsync(fontFamilyName,resource){var canInjectStyle,style;return _regeneratorRuntime.async(function loadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(canUseDOM){_context.next=2;break;}return _context.abrupt(\"return\");case 2:canInjectStyle=document.head&&typeof document.head.appendChild==='function';if(canInjectStyle){_context.next=5;break;}throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');case 5:style=_createWebStyle(fontFamilyName,resource);document.head.appendChild(style);if(!navigator.userAgent.includes('Edge')){_context.next=9;break;}return _context.abrupt(\"return\");case 9:return _context.abrupt(\"return\",new FontObserver(fontFamilyName).load());case 10:case\"end\":return _context.stop();}}});}};var ID='expo-generated-fonts';function getStyleElement(){var element=document.getElementById(ID);if(element&&element instanceof HTMLStyleElement){return element;}var styleElement=document.createElement('style');styleElement.id=ID;styleElement.type='text/css';return styleElement;}function _createWebStyle(fontFamily,resource){var fontStyle=\"@font-face {\\n    font-family: \"+fontFamily+\";\\n    src: url(\"+resource.uri+\");\\n  }\";var styleElement=getStyleElement();if(styleElement.styleSheet){var styleElementIE=styleElement;styleElementIE.styleSheet.cssText=styleElementIE.styleSheet.cssText?styleElementIE.styleSheet.cssText+fontStyle:fontStyle;}else{var textNode=document.createTextNode(fontStyle);styleElement.appendChild(textNode);}return styleElement;}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":"4DAAA,MAAO,CAAA,YAAP,KAAyB,kBAAzB,CACA,OAAS,SAAT,KAA0B,+BAA1B,CAGA,cAAe,CACb,GAAI,CAAA,IAAJ,EAAQ,CACN,MAAO,gBAAP,CACD,CAHY,CAKP,SALO,oBAKG,cALH,CAK2B,QAL3B,iJAMN,SANM,iEAUL,cAVK,CAUY,QAAQ,CAAC,IAAT,EAAiB,MAAO,CAAA,QAAQ,CAAC,IAAT,CAAc,WAArB,GAAqC,UAVlE,IAWN,cAXM,8BAYH,IAAI,CAAA,KAAJ,CAAU,0EAAV,CAZG,QAeL,KAfK,CAeG,eAAe,CAAC,cAAD,CAAiB,QAAjB,CAflB,CAgBX,QAAQ,CAAC,IAAT,CAAe,WAAf,CAA2B,KAA3B,EAhBW,IAkBP,SAAS,CAAC,SAAV,CAAoB,QAApB,CAA6B,MAA7B,CAlBO,iGAqBJ,GAAI,CAAA,YAAJ,CAAiB,cAAjB,EAAiC,IAAjC,EArBI,kDAAf,CAyBA,GAAM,CAAA,EAAE,CAAG,sBAAX,CAEA,QAAS,CAAA,eAAT,EAAwB,CACtB,GAAM,CAAA,OAAO,CAAG,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAhB,CACA,GAAI,OAAO,EAAI,OAAO,WAAY,CAAA,gBAAlC,CAAoD,CAClD,MAAO,CAAA,OAAP,CACD,CACD,GAAM,CAAA,YAAY,CAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAArB,CACA,YAAY,CAAC,EAAb,CAAkB,EAAlB,CACA,YAAY,CAAC,IAAb,CAAoB,UAApB,CACA,MAAO,CAAA,YAAP,CACD,CAED,QAAS,CAAA,eAAT,CAAyB,UAAzB,CAA6C,QAA7C,CAAmE,CACjE,GAAM,CAAA,SAAS,mCACE,UADF,oBAEF,QAAQ,CAAC,GAFP,UAAf,CAKA,GAAM,CAAA,YAAY,CAAG,eAAe,EAApC,CAGA,GAAI,YAAY,CAAC,UAAjB,CAA6B,CAC3B,GAAM,CAAA,cAAc,CAAG,YAAvB,CACA,cAAc,CAAC,UAAf,CAA0B,OAA1B,CAAoC,cAAc,CAAC,UAAf,CAA0B,OAA1B,CAChC,cAAc,CAAC,UAAf,CAA0B,OAA1B,CAAoC,SADJ,CAEhC,SAFJ,CAGD,CALD,IAKO,CACL,GAAM,CAAA,QAAQ,CAAG,QAAQ,CAAC,cAAT,CAAwB,SAAxB,CAAjB,CACA,YAAY,CAAC,WAAb,CAAyB,QAAzB,EACD,CACD,MAAO,CAAA,YAAP,CACD","sourcesContent":["import FontObserver from 'fontfaceobserver';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { FontResource } from './Font.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  async loadAsync(fontFamilyName: string, resource: FontResource): Promise<void> {\n    if (!canUseDOM) {\n      return;\n    }\n\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n    // https://github.com/bramstein/fontfaceobserver/issues/109#issuecomment-333356795\n    if (navigator.userAgent.includes('Edge')) {\n      return;\n    }\n    return new FontObserver(fontFamilyName).load();\n  },\n};\n\nconst ID = 'expo-generated-fonts';\n\nfunction getStyleElement(): HTMLStyleElement {\n  const element = document.getElementById(ID);\n  if (element && element instanceof HTMLStyleElement) {\n    return element;\n  }\n  const styleElement = document.createElement('style');\n  styleElement.id = ID;\n  styleElement.type = 'text/css';\n  return styleElement;\n}\n\nfunction _createWebStyle(fontFamily: string, resource: FontResource): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource.uri});\n  }`;\n\n  const styleElement = getStyleElement();\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    const styleElementIE = styleElement as any;\n    styleElementIE.styleSheet.cssText = styleElementIE.styleSheet.cssText\n      ? styleElementIE.styleSheet.cssText + fontStyle\n      : fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}