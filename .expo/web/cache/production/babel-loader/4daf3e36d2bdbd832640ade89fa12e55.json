{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Hammer from'hammerjs';import State from\"../State\";import{CONTENT_TOUCHES_DELAY,CONTENT_TOUCHES_QUICK_TAP_END_DELAY}from\"./constants\";import DiscreteGestureHandler from\"./DiscreteGestureHandler\";import{fireAfterInterval,isValidNumber,isnan}from\"./utils\";var PressGestureHandler=function(_DiscreteGestureHandl){_inherits(PressGestureHandler,_DiscreteGestureHandl);function PressGestureHandler(){var _getPrototypeOf2;var _this;_classCallCheck(this,PressGestureHandler);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PressGestureHandler)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.shouldDelayTouches=true;return _this;}_createClass(PressGestureHandler,[{key:\"simulateCancelEvent\",value:function simulateCancelEvent(inputData){this.hasGestureFailed=true;this.cancelEvent(inputData);}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(_ref){var shouldCancelWhenOutside=_ref.shouldCancelWhenOutside,maxDistSq=_ref.maxDistSq;return shouldCancelWhenOutside||!isValidNumber(maxDistSq);}},{key:\"getState\",value:function getState(type){var _Hammer$INPUT_START$H;return(_Hammer$INPUT_START$H={},_defineProperty(_Hammer$INPUT_START$H,Hammer.INPUT_START,State.BEGAN),_defineProperty(_Hammer$INPUT_START$H,Hammer.INPUT_MOVE,State.ACTIVE),_defineProperty(_Hammer$INPUT_START$H,Hammer.INPUT_END,State.END),_defineProperty(_Hammer$INPUT_START$H,Hammer.INPUT_CANCEL,State.CANCELLED),_Hammer$INPUT_START$H)[type];}},{key:\"getConfig\",value:function getConfig(){if(!this._hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}},{key:\"getHammerConfig\",value:function getHammerConfig(){return _objectSpread({},_get(_getPrototypeOf(PressGestureHandler.prototype),\"getHammerConfig\",this).call(this),{time:this.minDurationMs});}},{key:\"onGestureActivated\",value:function onGestureActivated(ev){this.onGestureStart(ev);}},{key:\"shouldDelayTouchForEvent\",value:function shouldDelayTouchForEvent(_ref2){var pointerType=_ref2.pointerType;return this.shouldDelayTouches&&pointerType==='touch';}},{key:\"onGestureStart\",value:function onGestureStart(ev){var _this2=this;this.isGestureRunning=true;clearTimeout(this.visualFeedbackTimer);this.initialEvent=ev;this.visualFeedbackTimer=fireAfterInterval(function(){_this2.sendGestureStartedEvent(_this2.initialEvent);_this2.initialEvent=null;},this.shouldDelayTouchForEvent(ev)&&CONTENT_TOUCHES_DELAY);}},{key:\"sendGestureStartedEvent\",value:function sendGestureStartedEvent(ev){clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.sendEvent(_objectSpread({},ev,{eventType:Hammer.INPUT_MOVE,isFirst:true}));}},{key:\"forceInvalidate\",value:function forceInvalidate(event){_get(_getPrototypeOf(PressGestureHandler.prototype),\"forceInvalidate\",this).call(this,event);clearTimeout(this.visualFeedbackTimer);this.visualFeedbackTimer=null;this.initialEvent=null;}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this3=this;_get(_getPrototypeOf(PressGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(ev.isFinal&&this.isGestureRunning){var timeout;if(this.visualFeedbackTimer){timeout=CONTENT_TOUCHES_QUICK_TAP_END_DELAY;this.sendGestureStartedEvent(this.initialEvent);this.initialEvent=null;}fireAfterInterval(function(){_this3.sendEvent(_objectSpread({},ev,{eventType:Hammer.INPUT_END,isFinal:true}));_this3.onGestureEnded();},timeout);}}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$shouldActivateO=_ref3.shouldActivateOnStart,shouldActivateOnStart=_ref3$shouldActivateO===void 0?false:_ref3$shouldActivateO,_ref3$disallowInterru=_ref3.disallowInterruption,disallowInterruption=_ref3$disallowInterru===void 0?false:_ref3$disallowInterru,_ref3$shouldCancelWhe=_ref3.shouldCancelWhenOutside,shouldCancelWhenOutside=_ref3$shouldCancelWhe===void 0?true:_ref3$shouldCancelWhe,_ref3$minDurationMs=_ref3.minDurationMs,minDurationMs=_ref3$minDurationMs===void 0?Number.NaN:_ref3$minDurationMs,_ref3$maxDist=_ref3.maxDist,maxDist=_ref3$maxDist===void 0?Number.NaN:_ref3$maxDist,_ref3$minPointers=_ref3.minPointers,minPointers=_ref3$minPointers===void 0?1:_ref3$minPointers,_ref3$maxPointers=_ref3.maxPointers,maxPointers=_ref3$maxPointers===void 0?1:_ref3$maxPointers,props=_objectWithoutProperties(_ref3,[\"shouldActivateOnStart\",\"disallowInterruption\",\"shouldCancelWhenOutside\",\"minDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"]);return _get(_getPrototypeOf(PressGestureHandler.prototype),\"updateGestureConfig\",this).call(this,_objectSpread({shouldActivateOnStart:shouldActivateOnStart,disallowInterruption:disallowInterruption,shouldCancelWhenOutside:shouldCancelWhenOutside,minDurationMs:minDurationMs,maxDist:maxDist,minPointers:minPointers,maxPointers:maxPointers},props));}},{key:\"name\",get:function get(){return'press';}},{key:\"minDurationMs\",get:function get(){return isnan(this.config.minDurationMs)?5:this.config.minDurationMs;}},{key:\"maxDist\",get:function get(){return isnan(this.config.maxDist)?9:this.config.maxDist;}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Press;}}]);return PressGestureHandler;}(DiscreteGestureHandler);export default PressGestureHandler;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/web/PressGestureHandler.js"],"names":["Hammer","State","CONTENT_TOUCHES_DELAY","CONTENT_TOUCHES_QUICK_TAP_END_DELAY","DiscreteGestureHandler","fireAfterInterval","isValidNumber","isnan","PressGestureHandler","shouldDelayTouches","inputData","hasGestureFailed","cancelEvent","shouldCancelWhenOutside","maxDistSq","type","INPUT_START","BEGAN","INPUT_MOVE","ACTIVE","INPUT_END","END","INPUT_CANCEL","CANCELLED","_hasCustomActivationCriteria","config","time","minDurationMs","ev","onGestureStart","pointerType","isGestureRunning","clearTimeout","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","shouldDelayTouchForEvent","sendEvent","eventType","isFirst","event","isFinal","timeout","onGestureEnded","shouldActivateOnStart","disallowInterruption","Number","NaN","maxDist","minPointers","maxPointers","props","Press"],"mappings":"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","sourcesContent":["import Hammer from 'hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n"]},"metadata":{},"sourceType":"module"}