{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Badge from\"./Badge\";var withBadge=function withBadge(value){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return function(WrappedComponent){var WithBadge=function WithBadge(props){var bottom=options.bottom,_options$hidden=options.hidden,hidden=_options$hidden===void 0?false:_options$hidden,left=options.left,containerStyle=options.containerStyle,badgeProps=_objectWithoutProperties(options,[\"bottom\",\"hidden\",\"left\",\"containerStyle\"]);var _options$right=options.right,right=_options$right===void 0?-16:_options$right,_options$top=options.top,top=_options$top===void 0?-1:_options$top;if(!value){right=-3;top=3;}var badgeValue=typeof value==='function'?value(props):value;return React.createElement(View,{style:StyleSheet.flatten([styles.container,containerStyle])},React.createElement(WrappedComponent,props),!hidden&&React.createElement(Badge,_extends({value:badgeValue,status:\"error\",containerStyle:StyleSheet.flatten([styles.badgeContainer,{bottom:bottom,left:left,right:right,top:top}])},badgeProps)));};WithBadge.displayName=\"WithBadge(\"+(WrappedComponent.displayName||WrappedComponent.name||'Component')+\")\";return WithBadge;};};var styles=StyleSheet.create({badgeContainer:{position:'absolute'},container:{alignItems:'center',justifyContent:'center',position:'relative'}});export default withBadge;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/badge/withBadge.js"],"names":["React","Badge","withBadge","value","options","WrappedComponent","WithBadge","props","bottom","hidden","left","containerStyle","badgeProps","right","top","badgeValue","StyleSheet","flatten","styles","container","badgeContainer","displayName","name","create","position","alignItems","justifyContent"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,sHAGA,MAAOC,CAAAA,KAAP,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,KAAQC,CAAAA,OAAR,2DAAkB,EAAlB,OAAyB,UAAAC,gBAAgB,CAAI,CAC7D,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,IAEvBC,CAAAA,MAFuB,CAOrBJ,OAPqB,CAEvBI,MAFuB,iBAOrBJ,OAPqB,CAGvBK,MAHuB,CAGvBA,MAHuB,0BAGd,KAHc,iBAIvBC,IAJuB,CAOrBN,OAPqB,CAIvBM,IAJuB,CAKvBC,cALuB,CAOrBP,OAPqB,CAKvBO,cALuB,CAMpBC,UANoB,0BAOrBR,OAPqB,iEASOA,OATP,CASnBS,KATmB,CASnBA,KATmB,yBASX,CAAC,EATU,6BASOT,OATP,CASNU,GATM,CASNA,GATM,uBASA,CAAC,CATD,cAWzB,GAAI,CAACX,KAAL,CAAY,CACVU,KAAK,CAAG,CAAC,CAAT,CACAC,GAAG,CAAG,CAAN,CACD,CAED,GAAMC,CAAAA,UAAU,CAAG,MAAOZ,CAAAA,KAAP,GAAiB,UAAjB,CAA8BA,KAAK,CAACI,KAAD,CAAnC,CAA6CJ,KAAhE,CAEA,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEa,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,CAAmBR,cAAnB,CAAnB,CAAb,EACE,oBAAC,gBAAD,CAAsBJ,KAAtB,CADF,CAGG,CAACE,MAAD,EACC,oBAAC,KAAD,WACE,KAAK,CAAEM,UADT,CAEE,MAAM,CAAC,OAFT,CAGE,cAAc,CAAEC,UAAU,CAACC,OAAX,CAAmB,CACjCC,MAAM,CAACE,cAD0B,CAEjC,CAAEZ,MAAM,CAANA,MAAF,CAAUE,IAAI,CAAJA,IAAV,CAAgBG,KAAK,CAALA,KAAhB,CAAuBC,GAAG,CAAHA,GAAvB,CAFiC,CAAnB,CAHlB,EAOMF,UAPN,EAJJ,CADF,CAiBD,CAnCD,CAqCAN,SAAS,CAACe,WAAV,eAAqChB,gBAAgB,CAACgB,WAAjB,EACnChB,gBAAgB,CAACiB,IADkB,EAEnC,WAFF,MAIA,MAAOhB,CAAAA,SAAP,CACD,CA3CiB,EAAlB,CA6CA,GAAMY,CAAAA,MAAM,CAAGF,UAAU,CAACO,MAAX,CAAkB,CAC/BH,cAAc,CAAE,CACdI,QAAQ,CAAE,UADI,CADe,CAI/BL,SAAS,CAAE,CACTM,UAAU,CAAE,QADH,CAETC,cAAc,CAAE,QAFP,CAGTF,QAAQ,CAAE,UAHD,CAJoB,CAAlB,CAAf,CAWA,cAAetB,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Badge from './Badge';\n\nconst withBadge = (value, options = {}) => WrappedComponent => {\n  const WithBadge = props => {\n    const {\n      bottom,\n      hidden = false,\n      left,\n      containerStyle,\n      ...badgeProps\n    } = options;\n\n    let { right = -16, top = -1 } = options;\n\n    if (!value) {\n      right = -3;\n      top = 3;\n    }\n\n    const badgeValue = typeof value === 'function' ? value(props) : value;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <WrappedComponent {...props} />\n\n        {!hidden && (\n          <Badge\n            value={badgeValue}\n            status=\"error\"\n            containerStyle={StyleSheet.flatten([\n              styles.badgeContainer,\n              { bottom, left, right, top },\n            ])}\n            {...badgeProps}\n          />\n        )}\n      </View>\n    );\n  };\n\n  WithBadge.displayName = `WithBadge(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`;\n\n  return WithBadge;\n};\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n});\n\nexport default withBadge;\n"]},"metadata":{},"sourceType":"module"}