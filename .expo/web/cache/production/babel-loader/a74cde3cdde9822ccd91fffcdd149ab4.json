{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _jsxFileName=\"/Users/satya/Workspace/Callstack/react-navigation-stack/src/vendor/views/Stack/CardStack.tsx\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import{ScreenContainer,Screen,screensEnabled}from'react-native-screens';import{getDefaultHeaderHeight}from\"../Header/HeaderSegment\";import CardContainer from\"./CardContainer\";import{DefaultTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import{forNoAnimation as forNoAnimationHeader}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import{forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";var EPSILON=1e-5;var dimensions=Dimensions.get('window');var layout={width:dimensions.width,height:dimensions.height};var MaybeScreenContainer=function MaybeScreenContainer(_ref){var enabled=_ref.enabled,rest=_objectWithoutProperties(_ref,[\"enabled\"]);if(Platform.OS!=='ios'&&enabled&&screensEnabled()){return React.createElement(ScreenContainer,_extends({},rest,{__source:{fileName:_jsxFileName,lineNumber:90}}));}return React.createElement(View,_extends({},rest,{__source:{fileName:_jsxFileName,lineNumber:93}}));};var MaybeScreen=function MaybeScreen(_ref2){var enabled=_ref2.enabled,active=_ref2.active,rest=_objectWithoutProperties(_ref2,[\"enabled\",\"active\"]);if(Platform.OS!=='ios'&&enabled&&screensEnabled()){return React.createElement(Screen,_extends({active:active},rest,{__source:{fileName:_jsxFileName,lineNumber:107}}));}return React.createElement(View,_extends({},rest,{__source:{fileName:_jsxFileName,lineNumber:110}}));};var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getHeaderHeights=function getHeaderHeights(routes,insets,descriptors,layout,previous){return routes.reduce(function(acc,curr){var _ref3=descriptors[curr.key]||{},_ref3$options=_ref3.options,options=_ref3$options===void 0?{}:_ref3$options;var _StyleSheet$flatten=StyleSheet.flatten(options.headerStyle||{}),_StyleSheet$flatten$h=_StyleSheet$flatten.height,height=_StyleSheet$flatten$h===void 0?previous[curr.key]:_StyleSheet$flatten$h;var safeAreaInsets=_objectSpread({},insets,options.safeAreaInsets);var _options$headerStatus=options.headerStatusBarHeight,headerStatusBarHeight=_options$headerStatus===void 0?safeAreaInsets.top:_options$headerStatus;acc[curr.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(mode,layout,descriptor){var _ref4=(descriptor==null?void 0:descriptor.options)||{},_ref4$gestureDirectio=_ref4.gestureDirection,gestureDirection=_ref4$gestureDirectio===void 0?mode==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref4$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(mode,gesture,layout,descriptor){var distance=getDistanceFromOptions(mode,layout,descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component){_inherits(CardStack,_React$Component);function CardStack(){var _getPrototypeOf2;var _this;_classCallCheck(this,CardStack);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CardStack)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={routes:[],scenes:[],gestures:{},layout:layout,descriptors:_this.props.descriptors,headerHeights:{}};_this.handleLayout=function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,layout,{})};});};_this.handleHeaderLayout=function(_ref5){var route=_ref5.route,height=_ref5.height;_this.setState(function(_ref6){var headerHeights=_ref6.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread({},headerHeights,_defineProperty({},route.key,height))};});};return _this;}_createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,mode=_this$props.mode,insets=_this$props.insets,descriptors=_this$props.descriptors,state=_this$props.state,routes=_this$props.routes,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,getPreviousRoute=_this$props.getPreviousRoute,getGesturesEnabled=_this$props.getGesturesEnabled,renderHeader=_this$props.renderHeader,renderScene=_this$props.renderScene,headerMode=_this$props.headerMode,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onPageChangeStart=_this$props.onPageChangeStart,onPageChangeConfirm=_this$props.onPageChangeConfirm,onPageChangeCancel=_this$props.onPageChangeCancel;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedDescriptor=descriptors[focusedRoute.key];var focusedOptions=focusedDescriptor?focusedDescriptor.options:{};var defaultTransitionPreset=mode==='modal'?ModalTransition:DefaultTransition;if(headerMode==='screen'){defaultTransitionPreset=_objectSpread({},defaultTransitionPreset,{headerStyleInterpolator:forNoAnimationHeader});}var _ref7=focusedOptions.safeAreaInsets||{},_ref7$top=_ref7.top,top=_ref7$top===void 0?insets.top:_ref7$top,_ref7$right=_ref7.right,right=_ref7$right===void 0?insets.right:_ref7$right,_ref7$bottom=_ref7.bottom,bottom=_ref7$bottom===void 0?insets.bottom:_ref7$bottom,_ref7$left=_ref7.left,left=_ref7$left===void 0?insets.left:_ref7$left;return React.createElement(React.Fragment,{__source:{fileName:_jsxFileName,lineNumber:400}},React.createElement(MaybeScreenContainer,{enabled:mode!=='modal',style:styles.container,onLayout:this.handleLayout,__source:{fileName:_jsxFileName,lineNumber:401}},routes.map(function(route,index,self){var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=index===self.length-1?1:Platform.OS==='android'?scene.progress.next?scene.progress.next.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,0],extrapolate:'clamp'}):1:index===self.length-2?1:0;var _ref8=scene.descriptor?scene.descriptor.options:{},safeAreaInsets=_ref8.safeAreaInsets,headerShown=_ref8.headerShown,headerTransparent=_ref8.headerTransparent,cardShadowEnabled=_ref8.cardShadowEnabled,cardOverlayEnabled=_ref8.cardOverlayEnabled,cardStyle=_ref8.cardStyle,animationEnabled=_ref8.animationEnabled,gestureResponseDistance=_ref8.gestureResponseDistance,gestureVelocityImpact=_ref8.gestureVelocityImpact,_ref8$gestureDirectio=_ref8.gestureDirection,gestureDirection=_ref8$gestureDirectio===void 0?defaultTransitionPreset.gestureDirection:_ref8$gestureDirectio,_ref8$transitionSpec=_ref8.transitionSpec,transitionSpec=_ref8$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref8$transitionSpec,_ref8$cardStyleInterp=_ref8.cardStyleInterpolator,cardStyleInterpolator=_ref8$cardStyleInterp===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref8$cardStyleInterp,_ref8$headerStyleInte=_ref8.headerStyleInterpolator,headerStyleInterpolator=_ref8$headerStyleInte===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref8$headerStyleInte;var transitionConfig={gestureDirection:gestureDirection,transitionSpec:transitionSpec,cardStyleInterpolator:cardStyleInterpolator,headerStyleInterpolator:headerStyleInterpolator};if(index!==self.length-1){var nextScene=scenes[index+1];if(nextScene){var _ref9=nextScene.descriptor?nextScene.descriptor.options:{},_animationEnabled=_ref9.animationEnabled,_ref9$gestureDirectio=_ref9.gestureDirection,_gestureDirection=_ref9$gestureDirectio===void 0?defaultTransitionPreset.gestureDirection:_ref9$gestureDirectio,_ref9$transitionSpec=_ref9.transitionSpec,_transitionSpec=_ref9$transitionSpec===void 0?defaultTransitionPreset.transitionSpec:_ref9$transitionSpec,_ref9$cardStyleInterp=_ref9.cardStyleInterpolator,_cardStyleInterpolator=_ref9$cardStyleInterp===void 0?_animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_ref9$cardStyleInterp,_ref9$headerStyleInte=_ref9.headerStyleInterpolator,_headerStyleInterpolator=_ref9$headerStyleInte===void 0?defaultTransitionPreset.headerStyleInterpolator:_ref9$headerStyleInte;transitionConfig={gestureDirection:_gestureDirection,transitionSpec:_transitionSpec,cardStyleInterpolator:_cardStyleInterpolator,headerStyleInterpolator:_headerStyleInterpolator};}}var _ref10=safeAreaInsets||{},_ref10$top=_ref10.top,safeAreaInsetTop=_ref10$top===void 0?insets.top:_ref10$top,_ref10$right=_ref10.right,safeAreaInsetRight=_ref10$right===void 0?insets.right:_ref10$right,_ref10$bottom=_ref10.bottom,safeAreaInsetBottom=_ref10$bottom===void 0?insets.bottom:_ref10$bottom,_ref10$left=_ref10.left,safeAreaInsetLeft=_ref10$left===void 0?insets.left:_ref10$left;return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:mode!=='modal',active:isScreenActive,pointerEvents:\"box-none\",__source:{fileName:_jsxFileName,lineNumber:494}},React.createElement(CardContainer,_extends({index:index,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,previousScene:scenes[index-1],state:state,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,cardOverlayEnabled:cardOverlayEnabled,cardShadowEnabled:cardShadowEnabled,cardStyle:cardStyle,onPageChangeStart:onPageChangeStart,onPageChangeConfirm:onPageChangeConfirm,onPageChangeCancel:onPageChangeCancel,gestureResponseDistance:gestureResponseDistance,headerHeight:headerHeights[route.key],onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousRoute:getPreviousRoute,headerMode:headerMode,headerShown:headerShown,headerTransparent:headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,gestureEnabled:index!==0&&getGesturesEnabled({route:route}),gestureVelocityImpact:gestureVelocityImpact},transitionConfig,{__source:{fileName:_jsxFileName,lineNumber:501}})));})),headerMode==='float'?renderHeader({mode:'float',layout:layout,insets:{top:top,right:right,bottom:bottom,left:left},scenes:scenes,state:state,getPreviousRoute:getPreviousRoute,onContentHeightChange:this.handleHeaderLayout,styleInterpolator:focusedOptions.headerStyleInterpolator!==undefined?focusedOptions.headerStyleInterpolator:defaultTransitionPreset.headerStyleInterpolator,style:styles.floating}):null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref11=(descriptor==null?void 0:descriptor.options)||{},animationEnabled=_ref11.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(props.mode,state.layout,descriptor):0);return acc;},{});return{routes:props.routes,scenes:props.routes.map(function(route,index,self){var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute==null?void 0:nextRoute.key]||state.descriptors[nextRoute==null?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute==null?void 0:previousRoute.key]||state.descriptors[previousRoute==null?void 0:previousRoute.key];var scene={route:route,descriptor:descriptor,progress:{current:getProgressFromGesture(props.mode,currentGesture,state.layout,descriptor),next:nextGesture?getProgressFromGesture(props.mode,nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(props.mode,previousGesture,state.layout,previousDescriptor):undefined},__memo:[route,state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;}),gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(props.routes,props.insets,state.descriptors,state.layout,state.headerHeights)};}}]);return CardStack;}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},floating:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["CardStack.tsx"],"names":["forNoAnimation","EPSILON","dimensions","Dimensions","layout","width","height","MaybeScreenContainer","enabled","rest","Platform","screensEnabled","MaybeScreen","active","FALLBACK_DESCRIPTOR","Object","options","getHeaderHeights","routes","descriptors","curr","previous","StyleSheet","safeAreaInsets","headerStatusBarHeight","acc","getDefaultHeaderHeight","getDistanceFromOptions","gestureDirection","mode","ModalTransition","DefaultTransition","getDistanceForDirection","getProgressFromGesture","distance","gesture","inputRange","outputRange","CardStack","React","Component","props","state","gestures","descriptor","animationEnabled","Animated","scenes","previousRoute","self","index","nextRoute","oldScene","currentGesture","route","previousGesture","nextGesture","nextDescriptor","previousDescriptor","scene","progress","current","next","__memo","headerHeights","handleLayout","e","handleHeaderLayout","previousHeight","insets","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","top","right","bottom","left","styles","focused","isScreenActive","extrapolate","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","onContentHeightChange","styleInterpolator","style","container","flex","overflow","floating","position"],"mappings":"+sBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iTAYA,OAAA,eAAA,CAAA,MAAA,CAAA,cAAA,KAAA,sBAAA,CAGA,OAAA,sBAAA,+BAEA,MAAA,CAAA,aAAA,uBACA,OAAA,iBAAA,CAAA,eAAA,iDAIA,OAASA,cAAc,GAAvB,CAAA,oBAAA,wDACA,OAASA,cAAc,GAAvB,CAAA,kBAAA,sDACA,MAAA,CAAA,uBAAA,2CAoDA,GAAMC,CAAAA,OAAO,CAAb,IAAA,CAEA,GAAMC,CAAAA,UAAU,CAAGC,UAAU,CAAVA,GAAAA,CAAnB,QAAmBA,CAAnB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAEC,KAAK,CAAEH,UAAU,CAAnB,KAAA,CAA2BI,MAAM,CAAEJ,UAAU,CAA5D,MAAe,CAAf,CAEA,GAAMK,CAAAA,oBAAoB,CAApBA,QAAAA,CAAAA,oBAAAA,CAAuB,IAAvBA,CAMA,CALJC,GAAAA,CAAAA,OAKI,CAAA,IAAA,CALJA,OAAAA,CACGC,IAIC,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CAAA,CALJD,CAMA,GAAIE,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EAAAA,OAAAA,EAAoCC,cAAxC,EAAA,CAA0D,CACxD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CAGF,OAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,EAAO,CAAA,CAAA,CAAA,CAAP,CAXF,CAAA,CAcA,GAAMC,CAAAA,WAAW,CAAXA,QAAAA,CAAAA,WAAAA,CAAc,KAAdA,CAQA,CAPJJ,GAAAA,CAAAA,OAOI,CAAA,KAAA,CAPJA,OAAAA,CACAK,MAMI,CAAA,KAAA,CANJA,MADAL,CAEGC,IAKC,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAPJD,CAQA,GAAIE,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EAAAA,OAAAA,EAAoCC,cAAxC,EAAA,CAA0D,CAExD,MAAO,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAQ,MAAM,CAAd,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,GAAO,CAAA,CAAA,CAAA,CAAP,CAGF,OAAO,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAP,GAAO,CAAA,CAAA,CAAA,CAAP,CAdF,CAAA,CAiBA,GAAMG,CAAAA,mBAAmB,CAAGC,MAAM,CAANA,MAAAA,CAAc,CAAEC,OAAO,CAAnD,EAA0C,CAAdD,CAA5B,CAEA,GAAME,CAAAA,gBAAgB,CAAhBA,QAAAA,CAAAA,gBAAAA,CAAmB,MAAnBA,CAAmB,MAAnBA,CAAmB,WAAnBA,CAAmB,MAAnBA,CAAmB,QAAnBA,CAMD,CACH,MAAOC,CAAAA,MAAM,CAANA,MAAAA,CAAsC,SAAA,GAAA,CAAA,IAAA,CAAe,CAAA,GAAA,CAAA,KAAA,CACjCC,WAAW,CAACC,IAAI,CAAhBD,GAAW,CAAXA,EADiC,EAAA,CAAA,aAAA,CAAA,KAAA,CAAA,OAAA,CAClDH,OADkD,CAAA,aAAA,GAAA,IAAA,EAAA,CAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,mBAAA,CAElBM,UAAU,CAAVA,OAAAA,CACtCN,OAAO,CAAPA,WAAAA,EAHwD,EAElBM,CAFkB,CAAA,qBAAA,CAAA,mBAAA,CAAA,MAAA,CAElDhB,MAFkD,CAAA,qBAAA,GAAA,IAAA,EAAA,CAEzCe,QAAQ,CAACD,IAAI,CAF4B,GAEjC,CAFiC,CAAA,qBAAA,CAM1D,GAAMG,CAAAA,cAAc,CAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAEfP,OAAO,CAFZ,cAAoB,CAApB,CAN0D,GAAA,CAAA,qBAAA,CAWHA,OAXG,CAAA,qBAAA,CAWlDQ,qBAXkD,CAAA,qBAAA,GAAA,IAAA,EAAA,CAW1BD,cAAc,CAXY,GAAA,CAAA,qBAAA,CAa1DE,GAAG,CAACL,IAAI,CAARK,GAAG,CAAHA,CACE,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAEIC,sBAAsB,CAAA,MAAA,CAH5BD,qBAG4B,CAH5BA,CAKA,MAAA,CAAA,GAAA,CAlBKP,CAAAA,CAAP,EAAOA,CAAP,CAPF,CAAA,CA6BA,GAAMS,CAAAA,sBAAsB,CAAtBA,QAAAA,CAAAA,sBAAAA,CAAyB,IAAzBA,CAAyB,MAAzBA,CAAyB,UAAzBA,CAID,CAAA,GAAA,CAAA,KAAA,CAKC,CAAA,UAAU,EAAV,IAAA,CAAA,IAAA,EAAA,CAAA,UAAU,CAAV,OAAA,GALD,EAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,gBAAA,CAEDC,gBAFC,CAAA,qBAAA,GAAA,IAAA,EAAA,CAEkBC,IAAI,GAAJA,OAAAA,CACfC,eAAe,CADAD,gBAAAA,CAEfE,iBAAiB,CAJpB,gBAAA,CAAA,qBAAA,CAOH,MAAOC,CAAAA,uBAAuB,CAAA,MAAA,CAA9B,gBAA8B,CAA9B,CAXF,CAAA,CAcA,GAAMC,CAAAA,sBAAsB,CAAtBA,QAAAA,CAAAA,sBAAAA,CAAyB,IAAzBA,CAAyB,OAAzBA,CAAyB,MAAzBA,CAAyB,UAAzBA,CAKD,CACH,GAAMC,CAAAA,QAAQ,CAAGP,sBAAsB,CAAA,IAAA,CAAA,MAAA,CAAvC,UAAuC,CAAvC,CAEA,GAAIO,QAAQ,CAAZ,CAAA,CAAkB,CAChB,MAAOC,CAAAA,OAAO,CAAPA,WAAAA,CAAoB,CACzBC,UAAU,CAAE,CAAA,CAAA,CADa,QACb,CADa,CAEzBC,WAAW,CAAE,CAAA,CAAA,CAFf,CAEe,CAFY,CAApBF,CAAP,CAMF,OAAOA,CAAAA,OAAO,CAAPA,WAAAA,CAAoB,CACzBC,UAAU,CAAE,CAAA,QAAA,CADa,CACb,CADa,CAEzBC,WAAW,CAAE,CAAA,CAAA,CAFf,CAEe,CAFY,CAApBF,CAAP,CAfF,CAAA,CAqBqBG,GAAAA,CAAAA,S,0YAmHnBI,K,CAAe,CACbxB,MAAM,CADO,EAAA,CAEb6B,MAAM,CAFO,EAAA,CAGbJ,QAAQ,CAHK,EAAA,CAIbvC,MAAM,CAJO,MAAA,CAKbe,WAAW,CAAE,KAAA,CAAA,KAAA,CALA,WAAA,CAWb6C,aAAa,CAXA,EAAA,C,OAcPC,Y,CAAe,SAAA,CAAA,CAA0B,CAAA,GAAA,CAAA,qBAAA,CACrBC,CAAC,CAADA,WAAAA,CADqB,MAAA,CACvC5D,MADuC,CAAA,qBAAA,CAAA,MAAA,CAC/BD,KAD+B,CAAA,qBAAA,CAAA,KAAA,CAG/C,GAAMD,CAAAA,MAAM,CAAG,CAAEC,KAAK,CAAP,KAAA,CAASC,MAAM,CAA9B,MAAe,CAAf,CAEA,KAAA,CAAA,QAAA,CAAc,SAAA,KAAA,CAAA,KAAA,CAAkB,CAC9B,GAAIA,MAAM,GAAKoC,KAAK,CAALA,MAAAA,CAAXpC,MAAAA,EAAkCD,KAAK,GAAKqC,KAAK,CAALA,MAAAA,CAAhD,KAAA,CAAoE,CAClE,MAAA,KAAA,CAGF,OAAO,CACLtC,MAAM,CADD,MAAA,CAEL4D,aAAa,CAAE/C,gBAAgB,CAC7BwB,KAAK,CADwB,MAAA,CAE7BA,KAAK,CAFwB,MAAA,CAG7BC,KAAK,CAHwB,WAAA,CAAA,MAAA,CAFjC,EAEiC,CAF1B,CAAP,CALF,CAAA,E,QAkBMyB,kB,CAAqB,SAAA,KAAA,CAMvB,CALJb,GAAAA,CAAAA,KAKI,CAAA,KAAA,CALJA,KAAAA,CACAhD,MAII,CAAA,KAAA,CAJJA,MADAgD,CAMA,KAAA,CAAA,QAAA,CAAc,SAAA,KAAA,CAAuB,CAApBU,GAAAA,CAAAA,aAAoB,CAAA,KAAA,CAApBA,aAAAA,CACf,GAAMI,CAAAA,cAAc,CAAGJ,aAAa,CAACV,KAAK,CAA1C,GAAoC,CAApC,CAEA,GAAIc,cAAc,GAAlB,MAAA,CAA+B,CAC7B,MAAA,KAAA,CAGF,OAAO,CACLJ,aAAa,CAAA,aAAA,CAAA,EAAA,CAAA,aAAA,CAAA,eAAA,CAAA,EAAA,CAEVV,KAAK,CAFK,GAAA,CADf,MACe,CAAA,CADR,CAAP,CAPF,CAAA,E,6EAgBO,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,WAAA,CAoBH,KApBG,KAAA,CAELzB,IAFK,CAAA,WAAA,CAAA,IAAA,CAGLwC,MAHK,CAAA,WAAA,CAAA,MAAA,CAILlD,WAJK,CAAA,WAAA,CAAA,WAAA,CAKLuB,KALK,CAAA,WAAA,CAAA,KAAA,CAMLxB,MANK,CAAA,WAAA,CAAA,MAAA,CAOLoD,gBAPK,CAAA,WAAA,CAAA,gBAAA,CAQLC,WARK,CAAA,WAAA,CAAA,WAAA,CASLC,YATK,CAAA,WAAA,CAAA,YAAA,CAULC,gBAVK,CAAA,WAAA,CAAA,gBAAA,CAWLC,kBAXK,CAAA,WAAA,CAAA,kBAAA,CAYLC,YAZK,CAAA,WAAA,CAAA,YAAA,CAaLC,WAbK,CAAA,WAAA,CAAA,WAAA,CAcLC,UAdK,CAAA,WAAA,CAAA,UAAA,CAeLC,iBAfK,CAAA,WAAA,CAAA,iBAAA,CAgBLC,eAhBK,CAAA,WAAA,CAAA,eAAA,CAiBLC,iBAjBK,CAAA,WAAA,CAAA,iBAAA,CAkBLC,mBAlBK,CAAA,WAAA,CAAA,mBAAA,CAmBLC,kBAnBK,CAAA,WAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,WAAA,CAsB6C,KAtB7C,KAAA,CAsBCnC,MAtBD,CAAA,WAAA,CAAA,MAAA,CAsBS3C,MAtBT,CAAA,WAAA,CAAA,MAAA,CAsBiBuC,QAtBjB,CAAA,WAAA,CAAA,QAAA,CAsB2BqB,aAtB3B,CAAA,WAAA,CAAA,aAAA,CAwBP,GAAMmB,CAAAA,YAAY,CAAGzC,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAvC,KAAqBA,CAArB,CACA,GAAM0C,CAAAA,iBAAiB,CAAGjE,WAAW,CAACgE,YAAY,CAAlD,GAAqC,CAArC,CACA,GAAME,CAAAA,cAAc,CAAGD,iBAAiB,CAAGA,iBAAiB,CAApB,OAAA,CAAxC,EAAA,CAEA,GAAIE,CAAAA,uBAAuB,CACzBzD,IAAI,GAAJA,OAAAA,CAAAA,eAAAA,CADF,iBAAA,CAGA,GAAIgD,UAAU,GAAd,QAAA,CAA6B,CAC3BS,uBAAuB,CAAA,aAAA,CAAA,EAAA,CAAA,uBAAA,CAAA,CAErBC,uBAAuB,CAFzBD,oBAAuB,CAAA,CAAvBA,CAhCK,IAAA,CAAA,KAAA,CA2CHD,cAAc,CAAdA,cAAAA,EA3CG,EAAA,CAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CAuCLG,GAvCK,CAAA,SAAA,GAAA,IAAA,EAAA,CAuCCnB,MAAM,CAvCP,GAAA,CAAA,SAAA,CAAA,WAAA,CAAA,KAAA,CAAA,KAAA,CAwCLoB,KAxCK,CAAA,WAAA,GAAA,IAAA,EAAA,CAwCGpB,MAAM,CAxCT,KAAA,CAAA,WAAA,CAAA,YAAA,CAAA,KAAA,CAAA,MAAA,CAyCLqB,MAzCK,CAAA,YAAA,GAAA,IAAA,EAAA,CAyCIrB,MAAM,CAzCV,MAAA,CAAA,YAAA,CAAA,UAAA,CAAA,KAAA,CAAA,IAAA,CA0CLsB,IA1CK,CAAA,UAAA,GAAA,IAAA,EAAA,CA0CEtB,MAAM,CA1CR,IAAA,CAAA,UAAA,CA6CP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,oBAAA,CAAA,CACE,OAAO,CAAExC,IAAI,GADf,OAAA,CAEE,KAAK,CAAE+D,MAAM,CAFf,SAAA,CAGE,QAAQ,CAAE,KAHZ,YAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAKG1E,MAAM,CAANA,GAAAA,CAAW,SAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAwB,CAClC,GAAM2E,CAAAA,OAAO,CAAGV,YAAY,CAAZA,GAAAA,GAAqB7B,KAAK,CAA1C,GAAA,CACA,GAAMnB,CAAAA,OAAO,CAAGQ,QAAQ,CAACW,KAAK,CAA9B,GAAwB,CAAxB,CACA,GAAMK,CAAAA,KAAK,CAAGZ,MAAM,CAApB,KAAoB,CAApB,CAIA,GAAM+C,CAAAA,cAAc,CAClB5C,KAAK,GAAKD,IAAI,CAAJA,MAAAA,CAAVC,CAAAA,CAAAA,CAAAA,CAEIxC,QAAQ,CAARA,EAAAA,GAAAA,SAAAA,CACAiD,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CACEA,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAgC,CAC9BvB,UAAU,CAAE,CAAA,CAAA,CAAI,EAAJ,OAAA,CADkB,CAClB,CADkB,CAE9BC,WAAW,CAAE,CAAA,CAAA,CAAA,CAAA,CAFiB,CAEjB,CAFiB,CAG9B0D,WAAW,CAJfpC,OACkC,CAAhCA,CADFA,CADAjD,CAAAA,CAQAwC,KAAK,GAAKD,IAAI,CAAJA,MAAAA,CAAVC,CAAAA,CAAAA,CAAAA,CAXN,CAAA,CAPkC,GAAA,CAAA,KAAA,CAsC9BS,KAAK,CAALA,UAAAA,CACAA,KAAK,CAALA,UAAAA,CADAA,OAAAA,CAtC8B,EAAA,CAuBhCpC,cAvBgC,CAAA,KAAA,CAAA,cAAA,CAwBhCyE,WAxBgC,CAAA,KAAA,CAAA,WAAA,CAyBhCC,iBAzBgC,CAAA,KAAA,CAAA,iBAAA,CA0BhCC,iBA1BgC,CAAA,KAAA,CAAA,iBAAA,CA2BhCC,kBA3BgC,CAAA,KAAA,CAAA,kBAAA,CA4BhCC,SA5BgC,CAAA,KAAA,CAAA,SAAA,CA6BhCvD,gBA7BgC,CAAA,KAAA,CAAA,gBAAA,CA8BhCwD,uBA9BgC,CAAA,KAAA,CAAA,uBAAA,CA+BhCC,qBA/BgC,CAAA,KAAA,CAAA,qBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,gBAAA,CAgChC1E,gBAhCgC,CAAA,qBAAA,GAAA,IAAA,EAAA,CAgCb0D,uBAAuB,CAhCV,gBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,cAAA,CAiChCiB,cAjCgC,CAAA,oBAAA,GAAA,IAAA,EAAA,CAiCfjB,uBAAuB,CAjCR,cAAA,CAAA,oBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,qBAAA,CAkChCkB,qBAlCgC,CAAA,qBAAA,GAAA,IAAA,EAAA,CAkCR3D,gBAAgB,GAAhBA,KAAAA,CAAAA,kBAAAA,CAEpByC,uBAAuB,CApCK,qBAAA,CAAA,qBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,uBAAA,CAqChCC,uBArCgC,CAAA,qBAAA,GAAA,IAAA,EAAA,CAqCND,uBAAuB,CArCjB,uBAAA,CAAA,qBAAA,CA0ClC,GAAImB,CAAAA,gBAAgB,CAAG,CACrB7E,gBAAgB,CADK,gBAAA,CAErB2E,cAAc,CAFO,cAAA,CAGrBC,qBAAqB,CAHA,qBAAA,CAIrBjB,uBAAuB,CAJzB,uBAAuB,CAAvB,CAaA,GAAIrC,KAAK,GAAKD,IAAI,CAAJA,MAAAA,CAAd,CAAA,CAA+B,CAC7B,GAAMyD,CAAAA,SAAS,CAAG3D,MAAM,CAACG,KAAK,CAA9B,CAAwB,CAAxB,CAEA,GAAA,SAAA,CAAe,CAAA,GAAA,CAAA,KAAA,CASTwD,SAAS,CAATA,UAAAA,CACAA,SAAS,CAATA,UAAAA,CADAA,OAAAA,CATS,EAAA,CAEX7D,iBAFW,CAAA,KAAA,CAAA,gBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,gBAAA,CAGXjB,iBAHW,CAAA,qBAAA,GAAA,IAAA,EAAA,CAGQ0D,uBAAuB,CAH/B,gBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,cAAA,CAIXiB,eAJW,CAAA,oBAAA,GAAA,IAAA,EAAA,CAIMjB,uBAAuB,CAJ7B,cAAA,CAAA,oBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,qBAAA,CAKXkB,sBALW,CAAA,qBAAA,GAAA,IAAA,EAAA,CAKa3D,iBAAgB,GAAhBA,KAAAA,CAAAA,kBAAAA,CAEpByC,uBAAuB,CAPhB,qBAAA,CAAA,qBAAA,CAAA,qBAAA,CAAA,KAAA,CAAA,uBAAA,CAQXC,wBARW,CAAA,qBAAA,GAAA,IAAA,EAAA,CAQeD,uBAAuB,CARtC,uBAAA,CAAA,qBAAA,CAabmB,gBAAgB,CAAG,CACjB7E,gBAAgB,CADC,iBAAA,CAEjB2E,cAAc,CAFG,eAAA,CAGjBC,qBAAqB,CAHJ,sBAAA,CAIjBjB,uBAAuB,CAJzBkB,wBAAmB,CAAnBA,CAOH,CA9EiC,IAAA,CAAA,MAAA,CAqF9BlF,cAAc,EArFgB,EAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAiF3BoF,gBAjF2B,CAAA,UAAA,GAAA,IAAA,EAAA,CAiFRtC,MAAM,CAjFE,GAAA,CAAA,UAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,CAkFzBuC,kBAlFyB,CAAA,YAAA,GAAA,IAAA,EAAA,CAkFJvC,MAAM,CAlFF,KAAA,CAAA,YAAA,CAAA,aAAA,CAAA,MAAA,CAAA,MAAA,CAmFxBwC,mBAnFwB,CAAA,aAAA,GAAA,IAAA,EAAA,CAmFFxC,MAAM,CAnFJ,MAAA,CAAA,aAAA,CAAA,WAAA,CAAA,MAAA,CAAA,IAAA,CAoF1ByC,iBApF0B,CAAA,WAAA,GAAA,IAAA,EAAA,CAoFNzC,MAAM,CApFA,IAAA,CAAA,WAAA,CAuFlC,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CACE,GAAG,CAAEf,KAAK,CADZ,GAAA,CAEE,KAAK,CAAEhC,UAAU,CAFnB,YAAA,CAGE,OAAO,CAAEO,IAAI,GAHf,OAAA,CAIE,MAAM,CAJR,cAAA,CAKE,aAAa,CALf,UAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAOE,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACE,KAAK,CADP,KAAA,CAEE,MAAM,CAAEqB,KAAK,GAAKD,IAAI,CAAJA,MAAAA,CAFpB,CAAA,CAGE,OAAO,CAHT,OAAA,CAIE,OAAO,CAAEqB,gBAAgB,CAAhBA,QAAAA,CAA0BhB,KAAK,CAJ1C,GAIWgB,CAJX,CAKE,MAAM,CALR,MAAA,CAME,OAAO,CANT,OAAA,CAOE,KAAK,CAPP,KAAA,CAQE,aAAa,CAAEvB,MAAM,CAACG,KAAK,CAR7B,CAQuB,CARvB,CASE,KAAK,CATP,KAAA,CAUE,gBAAgB,CAVlB,gBAAA,CAWE,kBAAkB,CAXpB,kBAAA,CAYE,mBAAmB,CAZrB,mBAAA,CAaE,iBAAiB,CAbnB,iBAAA,CAcE,kBAAkB,CAdpB,kBAAA,CAeE,iBAAiB,CAfnB,iBAAA,CAgBE,SAAS,CAhBX,SAAA,CAiBE,iBAAiB,CAjBnB,iBAAA,CAkBE,mBAAmB,CAlBrB,mBAAA,CAmBE,kBAAkB,CAnBpB,kBAAA,CAoBE,uBAAuB,CApBzB,uBAAA,CAqBE,YAAY,CAAEc,aAAa,CAACV,KAAK,CArBnC,GAqB6B,CArB7B,CAsBE,oBAAoB,CAAE,MAAI,CAtB5B,kBAAA,CAuBE,gBAAgB,CAvBlB,gBAAA,CAwBE,UAAU,CAxBZ,UAAA,CAyBE,WAAW,CAzBb,WAAA,CA0BE,iBAAiB,CA1BnB,iBAAA,CA2BE,YAAY,CA3Bd,YAAA,CA4BE,WAAW,CA5Bb,WAAA,CA6BE,WAAW,CA7Bb,WAAA,CA8BE,YAAY,CA9Bd,YAAA,CA+BE,iBAAiB,CA/BnB,iBAAA,CAgCE,eAAe,CAhCjB,eAAA,CAiCE,cAAc,CAAEJ,KAAK,GAALA,CAAAA,EAAewB,kBAAkB,CAAC,CAAEpB,KAAK,CAjC3D,KAiCoD,CAAD,CAjCnD,CAkCE,qBAAqB,CAlCvB,qBAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CARJ,GAQI,CAAA,CAAA,CAAA,CAPF,CADF,CA7FN,CAMKpC,CALH,CADF,CA8IG2D,UAAU,GAAVA,OAAAA,CACGF,YAAY,CAAC,CACX9C,IAAI,CADO,OAAA,CAEXzB,MAAM,CAFK,MAAA,CAGXiE,MAAM,CAAE,CAAEmB,GAAG,CAAL,GAAA,CAAOC,KAAK,CAAZ,KAAA,CAAcC,MAAM,CAApB,MAAA,CAAsBC,IAAI,CAHvB,IAGH,CAHG,CAIX5C,MAAM,CAJK,MAAA,CAKXL,KAAK,CALM,KAAA,CAMX+B,gBAAgB,CANL,gBAAA,CAOXsC,qBAAqB,CAAE,KAPZ,kBAAA,CAQXC,iBAAiB,CACf3B,cAAc,CAAdA,uBAAAA,GAAAA,SAAAA,CACIA,cAAc,CADlBA,uBAAAA,CAEIC,uBAAuB,CAXlB,uBAAA,CAYX2B,KAAK,CAAErB,MAAM,CAblBf,QACgB,CAAD,CADfA,CA/IL,IACE,CADF,C,6EA3N8BpC,K,CAAcC,K,CAAc,CAC1D,GACED,KAAK,CAALA,MAAAA,GAAiBC,KAAK,CAAtBD,MAAAA,EACAA,KAAK,CAALA,WAAAA,GAAsBC,KAAK,CAF7B,WAAA,CAGE,CACA,MAAA,KAAA,CAGF,IAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAALA,MAAAA,CAAAA,MAAAA,CAAmC,SAAA,GAAA,CAAA,IAAA,CAAe,CACjE,GAAMG,CAAAA,UAAU,CAAGH,KAAK,CAALA,WAAAA,CAAkBrB,IAAI,CAAzC,GAAmBqB,CAAnB,CADiE,GAAA,CAAA,MAAA,CAEpC,CAAA,UAAU,EAAV,IAAA,CAAA,IAAA,EAAA,CAAA,UAAU,CAAV,OAAA,GAFoC,EAAA,CAEzDI,gBAFyD,CAAA,MAAA,CAAA,gBAAA,CAIjEpB,GAAG,CAACL,IAAI,CAARK,GAAG,CAAHA,CACEiB,KAAK,CAALA,QAAAA,CAAetB,IAAI,CAAnBsB,GAAAA,GACA,GAAII,CAAAA,QAAQ,CAAZ,KAAA,CACEL,KAAK,CAALA,gBAAAA,CAAAA,QAAAA,CAAgCrB,IAAI,CAApCqB,GAAAA,GACAI,gBAAgB,GADhBJ,KAAAA,CAEId,sBAAsB,CAACc,KAAK,CAAN,IAAA,CAAaC,KAAK,CAAlB,MAAA,CAF1BD,UAE0B,CAF1BA,CAHJhB,CAEE,CAFFA,CASA,MAAA,CAAA,GAAA,CAbegB,CAAAA,CAAjB,EAAiBA,CAAjB,CAgBA,MAAO,CACLvB,MAAM,CAAEuB,KAAK,CADR,MAAA,CAELM,MAAM,CAAEN,KAAK,CAALA,MAAAA,CAAAA,GAAAA,CAAiB,SAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAwB,CAC/C,GAAMO,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAK,CAAhC,CAA0B,CAA1B,CACA,GAAMC,CAAAA,SAAS,CAAGF,IAAI,CAACC,KAAK,CAA5B,CAAsB,CAAtB,CAEA,GAAME,CAAAA,QAAQ,CAAGV,KAAK,CAALA,MAAAA,CAAjB,KAAiBA,CAAjB,CAEA,GAAMW,CAAAA,cAAc,CAAGV,QAAQ,CAACW,KAAK,CAArC,GAA+B,CAA/B,CACA,GAAMC,CAAAA,eAAe,CAAGP,aAAa,CACjCL,QAAQ,CAACK,aAAa,CADW,GACzB,CADyB,CAArC,SAAA,CAGA,GAAMQ,CAAAA,WAAW,CAAGL,SAAS,CAAGR,QAAQ,CAACQ,SAAS,CAArB,GAAW,CAAX,CAA7B,SAAA,CAEA,GAAMP,CAAAA,UAAU,CACdH,KAAK,CAALA,WAAAA,CAAkBa,KAAK,CAAvBb,GAAAA,GACAC,KAAK,CAALA,WAAAA,CAAkBY,KAAK,CADvBb,GACAC,CADAD,GAECW,QAAQ,CAAGA,QAAQ,CAAX,UAAA,CAHX,mBACEX,CADF,CAKA,GAAMgB,CAAAA,cAAc,CAClBhB,KAAK,CAALA,WAAAA,CAAkBU,SAAlBV,EAAAA,IAAkBU,CAAlBV,IAAAA,EAAkBU,CAAAA,SAAS,CAA3BV,GAAAA,GACAC,KAAK,CAALA,WAAAA,CAAkBS,SAAlBT,EAAAA,IAAkBS,CAAlBT,IAAAA,EAAkBS,CAAAA,SAAS,CAF7B,GAEET,CAFF,CAIA,GAAMgB,CAAAA,kBAAkB,CACtBjB,KAAK,CAALA,WAAAA,CAAkBO,aAAlBP,EAAAA,IAAkBO,CAAlBP,IAAAA,EAAkBO,CAAAA,aAAa,CAA/BP,GAAAA,GACAC,KAAK,CAALA,WAAAA,CAAkBM,aAAlBN,EAAAA,IAAkBM,CAAlBN,IAAAA,EAAkBM,CAAAA,aAAa,CAFjC,GAEEN,CAFF,CAIA,GAAMiB,CAAAA,KAAK,CAAG,CACZL,KAAK,CADO,KAAA,CAEZV,UAAU,CAFE,UAAA,CAGZgB,QAAQ,CAAE,CACRC,OAAO,CAAE5B,sBAAsB,CAC7BQ,KAAK,CADwB,IAAA,CAAA,cAAA,CAG7BC,KAAK,CAHwB,MAAA,CADvB,UACuB,CADvB,CAORoB,IAAI,CAAEN,WAAW,CACbvB,sBAAsB,CACpBQ,KAAK,CADe,IAAA,CAAA,WAAA,CAGpBC,KAAK,CAHe,MAAA,CADT,cACS,CADT,CAPT,SAAA,CAeRrB,QAAQ,CAAEkC,eAAe,CACrBtB,sBAAsB,CACpBQ,KAAK,CADe,IAAA,CAAA,eAAA,CAGpBC,KAAK,CAHe,MAAA,CADD,kBACC,CADD,CAlBf,SAGF,CAHE,CA2BZqB,MAAM,CAAE,CAAA,KAAA,CAENrB,KAAK,CAFC,MAAA,CAAA,UAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,WAAA,CA3BV,eA2BU,CA3BI,CAAd,CAuCA,GACEU,QAAQ,EACRO,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAmB,SAAA,EAAA,CAAA,CAAA,CAAW,CAE5B,MAAOP,CAAAA,QAAQ,CAARA,MAAAA,CAAAA,CAAAA,IAAP,EAAA,CAJJ,CAEEO,CAFF,CAME,CACA,MAAA,CAAA,QAAA,CAGF,OAAA,CAAA,KAAA,CA5EG,CAEGlB,CAFH,CA8ELE,QAAQ,CA9EH,QAAA,CA+ELxB,WAAW,CAAEsB,KAAK,CA/Eb,WAAA,CAgFLuB,aAAa,CAAE/C,gBAAgB,CAC7BwB,KAAK,CADwB,MAAA,CAE7BA,KAAK,CAFwB,MAAA,CAG7BC,KAAK,CAHwB,WAAA,CAI7BA,KAAK,CAJwB,MAAA,CAK7BA,KAAK,CArFT,aAgFiC,CAhF1B,CAAP,C,wBAzBmCH,KAAK,CAACC,S,CAAxBF,C,OAAAA,S,aAgYrB,GAAMsD,CAAAA,MAAM,CAAGtE,UAAU,CAAVA,MAAAA,CAAkB,CAC/B4F,SAAS,CAAE,CACTC,IAAI,CADK,CAAA,CAETC,QAAQ,CAHqB,QACpB,CADoB,CAK/BC,QAAQ,CAAE,CACRC,QAAQ,CADA,UAAA,CAER9B,GAAG,CAFK,CAAA,CAGRG,IAAI,CAHI,CAAA,CAIRF,KAAK,CATT,CAKY,CALqB,CAAlBnE,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    return <ScreenContainer {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (Platform.OS !== 'ios' && enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    headerHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={mode !== 'modal'}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            // On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? scene.progress.next\n                  ? scene.progress.next.interpolate({\n                      inputRange: [0, 1 - EPSILON, 1],\n                      outputRange: [1, 1, 0],\n                      extrapolate: 'clamp',\n                    })\n                  : 1\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={mode !== 'modal'}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  state={state}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              state,\n              getPreviousRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}