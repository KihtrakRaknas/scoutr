{"ast":null,"code":"import PixelRatio from\"react-native-web/dist/exports/PixelRatio\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";var pixelRatio=PixelRatio.get();var deviceHeight=Dimensions.get('window').height;var deviceWidth=Dimensions.get('window').width;var normalize=function normalize(size){if(pixelRatio>=2&&pixelRatio<3){if(deviceWidth<360){return size*0.95;}if(deviceHeight<667){return size;}if(deviceHeight>=667&&deviceHeight<=735){return size*1.15;}return size*1.25;}if(pixelRatio>=3&&pixelRatio<3.5){if(deviceWidth<=360){return size;}if(deviceHeight<667){return size*1.15;}if(deviceHeight>=667&&deviceHeight<=735){return size*1.2;}return size*1.27;}if(pixelRatio>=3.5){if(deviceWidth<=360){return size;}if(deviceHeight<667){return size*1.2;}if(deviceHeight>=667&&deviceHeight<=735){return size*1.25;}return size*1.4;}return size;};export default normalize;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/helpers/normalizeText.js"],"names":["pixelRatio","PixelRatio","get","deviceHeight","Dimensions","height","deviceWidth","width","normalize","size"],"mappings":"kIAaA,GAAMA,CAAAA,UAAU,CAAGC,UAAU,CAACC,GAAX,EAAnB,CACA,GAAMC,CAAAA,YAAY,CAAGC,UAAU,CAACF,GAAX,CAAe,QAAf,EAAyBG,MAA9C,CACA,GAAMC,CAAAA,WAAW,CAAGF,UAAU,CAACF,GAAX,CAAe,QAAf,EAAyBK,KAA7C,CAWA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,CAAI,CACxB,GAAIT,UAAU,EAAI,CAAd,EAAmBA,UAAU,CAAG,CAApC,CAAuC,CAErC,GAAIM,WAAW,CAAG,GAAlB,CAAuB,CACrB,MAAOG,CAAAA,IAAI,CAAG,IAAd,CACD,CAGD,GAAIN,YAAY,CAAG,GAAnB,CAAwB,CACtB,MAAOM,CAAAA,IAAP,CAED,CAED,GAAIN,YAAY,EAAI,GAAhB,EAAuBA,YAAY,EAAI,GAA3C,CAAgD,CAC9C,MAAOM,CAAAA,IAAI,CAAG,IAAd,CACD,CAED,MAAOA,CAAAA,IAAI,CAAG,IAAd,CACD,CAED,GAAIT,UAAU,EAAI,CAAd,EAAmBA,UAAU,CAAG,GAApC,CAAyC,CAGvC,GAAIM,WAAW,EAAI,GAAnB,CAAwB,CACtB,MAAOG,CAAAA,IAAP,CACD,CAGD,GAAIN,YAAY,CAAG,GAAnB,CAAwB,CACtB,MAAOM,CAAAA,IAAI,CAAG,IAAd,CAGD,CAED,GAAIN,YAAY,EAAI,GAAhB,EAAuBA,YAAY,EAAI,GAA3C,CAAgD,CAC9C,MAAOM,CAAAA,IAAI,CAAG,GAAd,CACD,CAID,MAAOA,CAAAA,IAAI,CAAG,IAAd,CACD,CAED,GAAIT,UAAU,EAAI,GAAlB,CAAuB,CAGrB,GAAIM,WAAW,EAAI,GAAnB,CAAwB,CACtB,MAAOG,CAAAA,IAAP,CAED,CAED,GAAIN,YAAY,CAAG,GAAnB,CAAwB,CACtB,MAAOM,CAAAA,IAAI,CAAG,GAAd,CAGD,CAED,GAAIN,YAAY,EAAI,GAAhB,EAAuBA,YAAY,EAAI,GAA3C,CAAgD,CAC9C,MAAOM,CAAAA,IAAI,CAAG,IAAd,CACD,CAGD,MAAOA,CAAAA,IAAI,CAAG,GAAd,CACD,CAED,MAAOA,CAAAA,IAAP,CACD,CAlED,CAoEA,cAAeD,CAAAA,SAAf","sourcesContent":["//\n// Method to normalize size of fonts across devices\n//\n// Some code taken from https://jsfiddle.net/97ty7yjk/ &\n// https://stackoverflow.com/questions/34837342/font-size-on-iphone-6s-plus\n//\n// author: @xiaoneng\n// date: 14/10/2016\n// version: 03\n//\n\nimport { PixelRatio, Dimensions } from 'react-native';\n\nconst pixelRatio = PixelRatio.get();\nconst deviceHeight = Dimensions.get('window').height;\nconst deviceWidth = Dimensions.get('window').width;\n\n// -- Testing Only --\n// const fontScale = PixelRatio.getFontScale();\n// const layoutSize = PixelRatio.getPixelSizeForLayoutSize(14);\n// console.log('normalizeText getPR ->', pixelRatio);\n// console.log('normalizeText getFS ->', fontScale);\n// console.log('normalizeText getDH ->', deviceHeight);\n// console.log('normalizeText getDW ->', deviceWidth);\n// console.log('normalizeText getPSFLS ->', layoutSize);\n\nconst normalize = size => {\n  if (pixelRatio >= 2 && pixelRatio < 3) {\n    // iphone 5s and older Androids\n    if (deviceWidth < 360) {\n      return size * 0.95;\n    }\n\n    // iphone 5\n    if (deviceHeight < 667) {\n      return size;\n      // iphone 6-6s\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.15;\n    }\n    // older phablets\n    return size * 1.25;\n  }\n\n  if (pixelRatio >= 3 && pixelRatio < 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size;\n    }\n\n    // Catch other weird android width sizings\n    if (deviceHeight < 667) {\n      return size * 1.15;\n      // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.2;\n    }\n\n    // catch larger devices\n    // ie iphone 6s plus / 7 plus / mi note 等等\n    return size * 1.27;\n  }\n\n  if (pixelRatio >= 3.5) {\n    // catch Android font scaling on small machines\n    // where pixel ratio / font scale ratio => 3:3\n    if (deviceWidth <= 360) {\n      return size;\n      // Catch other smaller android height sizings\n    }\n\n    if (deviceHeight < 667) {\n      return size * 1.2;\n      // catch in-between size Androids and scale font up\n      // a tad but not too much\n    }\n\n    if (deviceHeight >= 667 && deviceHeight <= 735) {\n      return size * 1.25;\n    }\n\n    // catch larger phablet devices\n    return size * 1.4;\n  }\n\n  return size;\n};\n\nexport default normalize;\n"]},"metadata":{},"sourceType":"module"}