{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import Modal from\"react-native-web/dist/exports/Modal\";import{ViewPropTypes,withTheme}from\"../config\";import{ScreenHeight,ScreenWidth}from\"../helpers\";var Overlay=function Overlay(props){var children=props.children,isVisible=props.isVisible,containerStyle=props.containerStyle,overlayStyle=props.overlayStyle,windowBackgroundColor=props.windowBackgroundColor,overlayBackgroundColor=props.overlayBackgroundColor,onBackdropPress=props.onBackdropPress,borderRadius=props.borderRadius,width=props.width,height=props.height,fullScreen=props.fullScreen,rest=_objectWithoutProperties(props,[\"children\",\"isVisible\",\"containerStyle\",\"overlayStyle\",\"windowBackgroundColor\",\"overlayBackgroundColor\",\"onBackdropPress\",\"borderRadius\",\"width\",\"height\",\"fullScreen\"]);return React.createElement(Modal,_extends({visible:isVisible,onRequestClose:onBackdropPress,transparent:true},rest),React.createElement(TouchableWithoutFeedback,{onPress:onBackdropPress,testID:\"RNE__Overlay__backdrop\"},React.createElement(View,{testID:\"overlayContainer\",style:StyleSheet.flatten([styles.backdrop,{backgroundColor:windowBackgroundColor},containerStyle])})),React.createElement(View,{style:styles.container,pointerEvents:\"box-none\"},React.createElement(View,{style:StyleSheet.flatten([styles.overlay,{borderRadius:borderRadius,backgroundColor:overlayBackgroundColor,width:width,height:height},fullScreen&&styles.fullscreen,overlayStyle])},children)));};Overlay.propTypes={children:PropTypes.element.isRequired,isVisible:PropTypes.bool.isRequired,containerStyle:ViewPropTypes.style,overlayStyle:ViewPropTypes.style,windowBackgroundColor:PropTypes.string,overlayBackgroundColor:PropTypes.string,onBackdropPress:PropTypes.func,borderRadius:PropTypes.number,width:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),height:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),fullScreen:PropTypes.bool};Overlay.defaultProps={borderRadius:3,fullScreen:false,windowBackgroundColor:'rgba(0, 0, 0, .4)',overlayBackgroundColor:'white',width:ScreenWidth-80,height:ScreenHeight-180,onBackdropPress:function onBackdropPress(){return null;}};var styles=StyleSheet.create({backdrop:{position:'absolute',top:0,left:0,width:'100%',height:'100%',justifyContent:'center',alignItems:'center'},container:{flex:1,alignItems:'center',justifyContent:'center'},fullscreen:{width:'100%',height:'100%'},overlay:_objectSpread({borderRadius:5,padding:10},Platform.select({android:{elevation:2},default:{shadowColor:'rgba(0, 0, 0, .3)',shadowOffset:{width:0,height:1},shadowRadius:4}}))});export{Overlay};export default withTheme(Overlay,'Overlay');","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/overlay/Overlay.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","ScreenHeight","ScreenWidth","Overlay","props","children","isVisible","containerStyle","overlayStyle","windowBackgroundColor","overlayBackgroundColor","onBackdropPress","borderRadius","width","height","fullScreen","rest","StyleSheet","flatten","styles","backdrop","backgroundColor","container","overlay","fullscreen","propTypes","element","isRequired","bool","style","string","func","number","oneOfType","defaultProps","create","position","top","left","justifyContent","alignItems","flex","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport { ScreenHeight, ScreenWidth } from '../helpers';\n\nconst Overlay = props => {\n  const {\n    children,\n    isVisible,\n    containerStyle,\n    overlayStyle,\n    windowBackgroundColor,\n    overlayBackgroundColor,\n    onBackdropPress,\n    borderRadius,\n    width,\n    height,\n    fullScreen,\n    ...rest\n  } = props;\n\n  return (\n    <Modal\n      visible={isVisible}\n      onRequestClose={onBackdropPress}\n      transparent\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        onPress={onBackdropPress}\n        testID=\"RNE__Overlay__backdrop\"\n      >\n        <View\n          testID=\"overlayContainer\"\n          style={StyleSheet.flatten([\n            styles.backdrop,\n            { backgroundColor: windowBackgroundColor },\n            containerStyle,\n          ])}\n        />\n      </TouchableWithoutFeedback>\n\n      <View style={styles.container} pointerEvents=\"box-none\">\n        <View\n          style={StyleSheet.flatten([\n            styles.overlay,\n            {\n              borderRadius,\n              backgroundColor: overlayBackgroundColor,\n              width,\n              height,\n            },\n            fullScreen && styles.fullscreen,\n            overlayStyle,\n          ])}\n        >\n          {children}\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: ScreenWidth - 80,\n  height: ScreenHeight - 180,\n  onBackdropPress: () => null,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    borderRadius: 5,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"]},"metadata":{},"sourceType":"module"}