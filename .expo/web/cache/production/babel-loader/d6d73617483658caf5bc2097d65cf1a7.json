{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _jsxFileName=\"/Users/janic/Developer/react-native-safe-area-context/src/index.tsx\";import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import NativeSafeAreaView from\"./NativeSafeAreaView\";export var SafeAreaContext=React.createContext(null);export function SafeAreaProvider(_ref){var children=_ref.children,initialSafeAreaInsets=_ref.initialSafeAreaInsets;var parentInsets=useParentSafeArea();var _React$useState=React.useState(initialSafeAreaInsets||parentInsets),_React$useState2=_slicedToArray(_React$useState,2),insets=_React$useState2[0],setInsets=_React$useState2[1];var onInsetsChange=React.useCallback(function(event){setInsets(event.nativeEvent.insets);},[]);return React.createElement(NativeSafeAreaView,{style:styles.fill,onInsetsChange:onInsetsChange,__source:{fileName:_jsxFileName,lineNumber:26}},insets!=null?React.createElement(SafeAreaContext.Provider,{value:insets,__source:{fileName:_jsxFileName,lineNumber:28}},children):null);}var styles=StyleSheet.create({fill:{flex:1}});export var SafeAreaConsumer=SafeAreaContext.Consumer;function useParentSafeArea(){return React.useContext(SafeAreaContext);}export function useSafeArea(){var safeArea=React.useContext(SafeAreaContext);if(safeArea==null){throw new Error('No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');}return safeArea;}export function SafeAreaView(_ref2){var style=_ref2.style,rest=_objectWithoutProperties(_ref2,[\"style\"]);var insets=useSafeArea();return React.createElement(View,_extends({style:[{paddingTop:insets.top,paddingRight:insets.right,paddingBottom:insets.bottom,paddingLeft:insets.left},style]},rest,{__source:{fileName:_jsxFileName,lineNumber:63}}));}","map":{"version":3,"sources":["index.tsx"],"names":["SafeAreaContext","React","children","initialSafeAreaInsets","parentInsets","useParentSafeArea","insets","setInsets","onInsetsChange","event","styles","StyleSheet","fill","flex","SafeAreaConsumer","safeArea","style","rest","useSafeArea","paddingTop","paddingRight","paddingBottom","paddingLeft"],"mappings":"kSAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAGA,MAAA,CAAA,kBAAA,4BAEA,MAAO,IAAMA,CAAAA,eAAe,CAAGC,KAAK,CAALA,aAAAA,CAAxB,IAAwBA,CAAxB,CAOP,MAAO,SAAA,CAAA,gBAAA,CAAA,IAAA,CAGe,CAFpBC,GAAAA,CAAAA,QAEoB,CAAA,IAAA,CAFpBA,QAAAA,CACAC,qBACoB,CAAA,IAAA,CADpBA,qBADAD,CAGA,GAAME,CAAAA,YAAY,CAAGC,iBAArB,EAAA,CADoB,GAAA,CAAA,eAAA,CAEQJ,KAAK,CAALA,QAAAA,CAC1BE,qBAAqB,EAHH,YAEQF,CAFR,CAAA,gBAAA,CAAA,cAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAEbK,MAFa,CAAA,gBAAA,CAAA,CAAA,CAAA,CAELC,SAFK,CAAA,gBAAA,CAAA,CAAA,CAAA,CAKpB,GAAMC,CAAAA,cAAc,CAAGP,KAAK,CAALA,WAAAA,CAAkB,SAAA,KAAA,CAA8B,CACrEM,SAAS,CAACE,KAAK,CAALA,WAAAA,CAAVF,MAAS,CAATA,CADqBN,CAAAA,CAAvB,EAAuBA,CAAvB,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,kBAAA,CAAA,CAAoB,KAAK,CAAES,MAAM,CAAjC,IAAA,CAAwC,cAAc,CAAtD,cAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CACGJ,MAAM,EAANA,IAAAA,CACC,KAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,CAAA,CAA0B,KAAK,CAA/B,MAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CADDA,QACC,CADDA,CAFL,IACE,CADF,CAWF,IAAMI,CAAAA,MAAM,CAAGC,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,IAAI,CAAE,CAAEC,IAAI,CADd,CACQ,CADyB,CAAlBF,CAAf,CAIA,MAAO,IAAMG,CAAAA,gBAAgB,CAAGd,eAAe,CAAxC,QAAA,CAEP,QAAA,CAAA,iBAAA,EAAwE,CACtE,MAAOC,CAAAA,KAAK,CAALA,UAAAA,CAAP,eAAOA,CAAP,CAGF,OAAO,SAAA,CAAA,WAAA,EAAoC,CACzC,GAAMc,CAAAA,QAAQ,CAAGd,KAAK,CAALA,UAAAA,CAAjB,eAAiBA,CAAjB,CACA,GAAIc,QAAQ,EAAZ,IAAA,CAAsB,CACpB,KAAM,IAAA,CAAA,KAAA,CAAN,wGAAM,CAAN,CAIF,OAAA,CAAA,QAAA,CAGF,OAAO,SAAA,CAAA,YAAA,CAAA,KAAA,CAGuC,CAF5CC,GAAAA,CAAAA,KAE4C,CAAA,KAAA,CAF5CA,KAAAA,CACGC,IACyC,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAF5CD,CAGA,GAAMV,CAAAA,MAAM,CAAGY,WAAf,EAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEC,UAAU,CAAEb,MAAM,CADpB,GAAA,CAEEc,YAAY,CAAEd,MAAM,CAFtB,KAAA,CAGEe,aAAa,CAAEf,MAAM,CAHvB,MAAA,CAIEgB,WAAW,CAAEhB,MAAM,CALhB,IACL,CADK,CADT,KACS,CADT,CAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,CAcD","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport { EdgeInsets as EdgeInsetsT, InsetChangedEvent } from './SafeArea.types';\nimport NativeSafeAreaView from './NativeSafeAreaView';\n\nexport const SafeAreaContext = React.createContext<EdgeInsetsT | null>(null);\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialSafeAreaInsets?: EdgeInsetsT | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialSafeAreaInsets,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeArea();\n  const [insets, setInsets] = React.useState<EdgeInsetsT | null | undefined>(\n    initialSafeAreaInsets || parentInsets,\n  );\n  const onInsetsChange = React.useCallback((event: InsetChangedEvent) => {\n    setInsets(event.nativeEvent.insets);\n  }, []);\n\n  return (\n    <NativeSafeAreaView style={styles.fill} onInsetsChange={onInsetsChange}>\n      {insets != null ? (\n        <SafeAreaContext.Provider value={insets}>\n          {children}\n        </SafeAreaContext.Provider>\n      ) : null}\n    </NativeSafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nexport const SafeAreaConsumer = SafeAreaContext.Consumer;\n\nfunction useParentSafeArea(): React.ContextType<typeof SafeAreaContext> {\n  return React.useContext(SafeAreaContext);\n}\n\nexport function useSafeArea(): EdgeInsetsT {\n  const safeArea = React.useContext(SafeAreaContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function SafeAreaView({\n  style,\n  ...rest\n}: ViewProps & { children: React.ReactNode }) {\n  const insets = useSafeArea();\n\n  return (\n    <View\n      style={[\n        {\n          paddingTop: insets.top,\n          paddingRight: insets.right,\n          paddingBottom: insets.bottom,\n          paddingLeft: insets.left,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nexport type EdgeInsets = EdgeInsetsT;\n"]},"metadata":{},"sourceType":"module"}