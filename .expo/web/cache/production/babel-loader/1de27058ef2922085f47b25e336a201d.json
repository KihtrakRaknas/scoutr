{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import PropTypes from'prop-types';import React,{PureComponent}from'react';import Text from\"react-native-web/dist/exports/Text\";import RaisedButton from\"../raised-button\";import{styles}from\"./styles\";var RaisedTextButton=function(_PureComponent){_inherits(RaisedTextButton,_PureComponent);function RaisedTextButton(){_classCallCheck(this,RaisedTextButton);return _possibleConstructorReturn(this,_getPrototypeOf(RaisedTextButton).apply(this,arguments));}_createClass(RaisedTextButton,[{key:\"render\",value:function render(){var _this$props=this.props,title=_this$props.title,titleColor=_this$props.titleColor,titleStyle=_this$props.titleStyle,disabledTitleColor=_this$props.disabledTitleColor,props=_objectWithoutProperties(_this$props,[\"title\",\"titleColor\",\"titleStyle\",\"disabledTitleColor\"]);var titleStyleOverrides={color:props.disabled?disabledTitleColor:titleColor};return React.createElement(RaisedButton,_extends({rippleColor:titleColor,shadeColor:titleColor},props),React.createElement(Text,{style:[styles.title,titleStyle,titleStyleOverrides],numberOfLines:1},String(title).toUpperCase()));}}]);return RaisedTextButton;}(PureComponent);RaisedTextButton.defaultProps={titleColor:'rgb(66, 66, 66)',disabledTitleColor:'rgba(0, 0, 0, .26)'};RaisedTextButton.propTypes=_objectSpread({},RaisedButton.propTypes,{title:PropTypes.string.isRequired,titleColor:PropTypes.string,titleStyle:Text.propTypes.style,disabledTitleColor:PropTypes.string});export{RaisedTextButton as default};","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-material-buttons/src/components/raised-text-button/index.js"],"names":["PropTypes","React","PureComponent","RaisedButton","styles","RaisedTextButton","props","title","titleColor","titleStyle","disabledTitleColor","titleStyleOverrides","color","disabled","String","toUpperCase","defaultProps","propTypes","string","isRequired","Text","style"],"mappings":"4zCAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,aAAhB,KAAqC,OAArC,C,qDAGA,MAAOC,CAAAA,YAAP,wBACA,OAASC,MAAT,gB,GAEqBC,CAAAA,gB,6SAeV,iBAOH,KAAKC,KAPF,CAELC,KAFK,aAELA,KAFK,CAGLC,UAHK,aAGLA,UAHK,CAILC,UAJK,aAILA,UAJK,CAKLC,kBALK,aAKLA,kBALK,CAMFJ,KANE,gGASP,GAAIK,CAAAA,mBAAmB,CAAG,CACxBC,KAAK,CAAEN,KAAK,CAACO,QAAN,CACLH,kBADK,CAELF,UAHsB,CAA1B,CAMA,MACE,qBAAC,YAAD,WAAc,WAAW,CAAEA,UAA3B,CAAuC,UAAU,CAAEA,UAAnD,EAAmEF,KAAnE,EACE,oBAAC,IAAD,EACE,KAAK,CAAE,CAACF,MAAM,CAACG,KAAR,CAAeE,UAAf,CAA2BE,mBAA3B,CADT,CAEE,aAAa,CAAE,CAFjB,EAIGG,MAAM,CAACP,KAAD,CAAN,CAAcQ,WAAd,EAJH,CADF,CADF,CAUD,C,8BAxC2Cb,a,EAAzBG,gB,CACZW,Y,CAAe,CACpBR,UAAU,CAAE,iBADQ,CAEpBE,kBAAkB,CAAE,oBAFA,C,CADHL,gB,CAMZY,S,kBACFd,YAAY,CAACc,S,EAEhBV,KAAK,CAAEP,SAAS,CAACkB,MAAV,CAAiBC,U,CACxBX,UAAU,CAAER,SAAS,CAACkB,M,CACtBT,UAAU,CAAEW,IAAI,CAACH,SAAL,CAAeI,K,CAC3BX,kBAAkB,CAAEV,SAAS,CAACkB,M,UAZbb,gB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Text } from 'react-native';\n\nimport RaisedButton from '../raised-button';\nimport { styles } from './styles';\n\nexport default class RaisedTextButton extends PureComponent {\n  static defaultProps = {\n    titleColor: 'rgb(66, 66, 66)',\n    disabledTitleColor: 'rgba(0, 0, 0, .26)',\n  };\n\n  static propTypes = {\n    ...RaisedButton.propTypes,\n\n    title: PropTypes.string.isRequired,\n    titleColor: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    disabledTitleColor: PropTypes.string,\n  };\n\n  render() {\n    let {\n      title,\n      titleColor,\n      titleStyle,\n      disabledTitleColor,\n      ...props\n    } = this.props;\n\n    let titleStyleOverrides = {\n      color: props.disabled?\n        disabledTitleColor:\n        titleColor,\n    };\n\n    return (\n      <RaisedButton rippleColor={titleColor} shadeColor={titleColor} {...props}>\n        <Text\n          style={[styles.title, titleStyle, titleStyleOverrides]}\n          numberOfLines={1}\n        >\n          {String(title).toUpperCase()}\n        </Text>\n      </RaisedButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}