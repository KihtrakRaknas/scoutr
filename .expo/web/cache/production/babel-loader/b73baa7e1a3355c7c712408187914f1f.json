{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import GestureHandler from\"./GestureHandler\";import{TEST_MAX_IF_NOT_NAN}from\"./utils\";var DiscreteGestureHandler=function(_GestureHandler){_inherits(DiscreteGestureHandler,_GestureHandler);function DiscreteGestureHandler(){_classCallCheck(this,DiscreteGestureHandler);return _possibleConstructorReturn(this,_getPrototypeOf(DiscreteGestureHandler).apply(this,arguments));}_createClass(DiscreteGestureHandler,[{key:\"shouldFailUnderCustomCriteria\",value:function shouldFailUnderCustomCriteria(_ref,_ref2){var x=_ref.x,y=_ref.y,deltaX=_ref.deltaX,deltaY=_ref.deltaY;var maxDeltaX=_ref2.maxDeltaX,maxDeltaY=_ref2.maxDeltaY,maxDistSq=_ref2.maxDistSq,shouldCancelWhenOutside=_ref2.shouldCancelWhenOutside;if(shouldCancelWhenOutside){if(!this.isPointInView({x:x,y:y})){return true;}}return TEST_MAX_IF_NOT_NAN(Math.abs(deltaX),maxDeltaX)||TEST_MAX_IF_NOT_NAN(Math.abs(deltaY),maxDeltaY)||TEST_MAX_IF_NOT_NAN(Math.abs(deltaY*deltaY+deltaX*deltaX),maxDistSq);}},{key:\"transformNativeEvent\",value:function transformNativeEvent(_ref3){var x=_ref3.x,y=_ref3.y;return{absoluteX:x,absoluteY:y,x:x,y:y};}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(_ref4,recognizer,_ref5){var minPointers=_ref4.minPointers,maxPointers=_ref4.maxPointers,maxDist=_ref4.maxDist,maxDeltaX=_ref4.maxDeltaX,maxDeltaY=_ref4.maxDeltaY,maxDistSq=_ref4.maxDistSq,shouldCancelWhenOutside=_ref4.shouldCancelWhenOutside;var pointerLength=_ref5.maxPointers,center=_ref5.center,deltaX=_ref5.deltaX,deltaY=_ref5.deltaY,props=_objectWithoutProperties(_ref5,[\"maxPointers\",\"center\",\"deltaX\",\"deltaY\"]);var validPointerCount=pointerLength>=minPointers&&pointerLength<=maxPointers;if(this.shouldFailUnderCustomCriteria(_objectSpread({},center,{deltaX:deltaX,deltaY:deltaY}),{maxDeltaX:maxDeltaX,maxDeltaY:maxDeltaY,maxDistSq:maxDistSq,shouldCancelWhenOutside:shouldCancelWhenOutside})||!validPointerCount&&this.isGestureRunning){return{failed:true};}return{success:validPointerCount};}},{key:\"isDiscrete\",get:function get(){return true;}},{key:\"shouldEnableGestureOnSetup\",get:function get(){return true;}}]);return DiscreteGestureHandler;}(GestureHandler);export default DiscreteGestureHandler;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/web/DiscreteGestureHandler.js"],"names":["GestureHandler","TEST_MAX_IF_NOT_NAN","DiscreteGestureHandler","x","y","deltaX","deltaY","maxDeltaX","maxDeltaY","maxDistSq","shouldCancelWhenOutside","isPointInView","Math","abs","absoluteX","absoluteY","recognizer","minPointers","maxPointers","maxDist","pointerLength","center","props","validPointerCount","shouldFailUnderCustomCriteria","isGestureRunning","failed","success"],"mappings":"uwCAAA,MAAOA,CAAAA,cAAP,wBACA,OAASC,mBAAT,e,GAEMC,CAAAA,sB,qYAYF,IAFEC,CAAAA,CAEF,MAFEA,CAEF,CAFKC,CAEL,MAFKA,CAEL,CAFQC,MAER,MAFQA,MAER,CAFgBC,MAEhB,MAFgBA,MAEhB,IADEC,CAAAA,SACF,OADEA,SACF,CADaC,SACb,OADaA,SACb,CADwBC,SACxB,OADwBA,SACxB,CADmCC,uBACnC,OADmCA,uBACnC,CACA,GAAIA,uBAAJ,CAA6B,CAC3B,GAAI,CAAC,KAAKC,aAAL,CAAmB,CAAER,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAnB,CAAL,CAAmC,CACjC,MAAO,KAAP,CACD,CACF,CACD,MACEH,CAAAA,mBAAmB,CAACW,IAAI,CAACC,GAAL,CAASR,MAAT,CAAD,CAAmBE,SAAnB,CAAnB,EACAN,mBAAmB,CAACW,IAAI,CAACC,GAAL,CAASP,MAAT,CAAD,CAAmBE,SAAnB,CADnB,EAEAP,mBAAmB,CAACW,IAAI,CAACC,GAAL,CAASP,MAAM,CAAGA,MAAT,CAAkBD,MAAM,CAAGA,MAApC,CAAD,CAA8CI,SAA9C,CAHrB,CAKD,C,wEAE8B,IAARN,CAAAA,CAAQ,OAARA,CAAQ,CAALC,CAAK,OAALA,CAAK,CAC7B,MAAO,CACLU,SAAS,CAAEX,CADN,CAELY,SAAS,CAAEX,CAFN,CAGLD,CAAC,CAADA,CAHK,CAILC,CAAC,CAADA,CAJK,CAAP,CAMD,C,gFAICY,U,OAEA,IAHEC,CAAAA,WAGF,OAHEA,WAGF,CAHeC,WAGf,OAHeA,WAGf,CAH4BC,OAG5B,OAH4BA,OAG5B,CAHqCZ,SAGrC,OAHqCA,SAGrC,CAHgDC,SAGhD,OAHgDA,SAGhD,CAH2DC,SAG3D,OAH2DA,SAG3D,CAHsEC,uBAGtE,OAHsEA,uBAGtE,IADeU,CAAAA,aACf,OADEF,WACF,CAD8BG,MAC9B,OAD8BA,MAC9B,CADsChB,MACtC,OADsCA,MACtC,CAD8CC,MAC9C,OAD8CA,MAC9C,CADyDgB,KACzD,4EACA,GAAMC,CAAAA,iBAAiB,CAAGH,aAAa,EAAIH,WAAjB,EAAgCG,aAAa,EAAIF,WAA3E,CAEA,GACE,KAAKM,6BAAL,kBACOH,MADP,EACehB,MAAM,CAANA,MADf,CACuBC,MAAM,CAANA,MADvB,GAEE,CACEC,SAAS,CAATA,SADF,CAEEC,SAAS,CAATA,SAFF,CAGEC,SAAS,CAATA,SAHF,CAIEC,uBAAuB,CAAvBA,uBAJF,CAFF,GAWC,CAACa,iBAAD,EAAsB,KAAKE,gBAZ9B,CAaE,CACA,MAAO,CAAEC,MAAM,CAAE,IAAV,CAAP,CACD,CAED,MAAO,CAAEC,OAAO,CAAEJ,iBAAX,CAAP,CACD,C,sCA1DgB,CACf,MAAO,KAAP,CACD,C,sDAEgC,CAC/B,MAAO,KAAP,CACD,C,oCAPkCvB,c,EA8DrC,cAAeE,CAAAA,sBAAf","sourcesContent":["import GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nclass DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY },\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq)\n    );\n  }\n\n  transformNativeEvent({ x, y }) {\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x,\n      y,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers, maxDist, maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside },\n    recognizer,\n    { maxPointers: pointerLength, center, deltaX, deltaY, ...props }\n  ) {\n    const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"module"}