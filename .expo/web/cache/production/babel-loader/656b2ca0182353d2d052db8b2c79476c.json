{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import GenericTouchable,{TOUCHABLE_STATE}from\"./GenericTouchable\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import PropTypes from'prop-types';var TouchableHighlight=function(_Component){_inherits(TouchableHighlight,_Component);function TouchableHighlight(props){var _this;_classCallCheck(this,TouchableHighlight);_this=_possibleConstructorReturn(this,_getPrototypeOf(TouchableHighlight).call(this,props));_this.showUnderlay=function(){if(!_this.hasPressHandler()){return;}_this.setState({extraChildStyle:{opacity:_this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:_this.props.underlayColor}});_this.props.onShowUnderlay&&_this.props.onShowUnderlay();};_this.hasPressHandler=function(){return _this.props.onPress||_this.props.onPressIn||_this.props.onPressOut||_this.props.onLongPress;};_this.hideUnderlay=function(){_this.setState({extraChildStyle:null,extraUnderlayStyle:null});_this.props.onHideUnderlay&&_this.props.onHideUnderlay();};_this.onStateChange=function(from,to){if(to===TOUCHABLE_STATE.BEGAN){_this.showUnderlay();}else if(to===TOUCHABLE_STATE.UNDETERMINED||to===TOUCHABLE_STATE.MOVED_OUTSIDE){_this.hideUnderlay();}};_this.state={extraChildStyle:null,extraUnderlayStyle:null};return _this;}_createClass(TouchableHighlight,[{key:\"renderChildren\",value:function renderChildren(){if(!this.props.children){return React.createElement(View,null);}var child=React.Children.only(this.props.children);return React.cloneElement(child,{style:StyleSheet.compose(child.props.style,this.state.extraChildStyle)});}},{key:\"render\",value:function render(){var _this$props=this.props,_this$props$style=_this$props.style,style=_this$props$style===void 0?{}:_this$props$style,rest=_objectWithoutProperties(_this$props,[\"style\"]);var extraUnderlayStyle=this.state.extraUnderlayStyle;return React.createElement(GenericTouchable,_extends({},rest,{style:[style,extraUnderlayStyle],onStateChange:this.onStateChange}),this.renderChildren());}}]);return TouchableHighlight;}(Component);TouchableHighlight.defaultProps=_objectSpread({},GenericTouchable.defaultProps,{activeOpacity:0.85,delayPressOut:100,underlayColor:'black'});TouchableHighlight.propTypes=_objectSpread({},GenericTouchable.publicPropTypes,{activeOpacity:PropTypes.number,underlayColor:PropTypes.string,style:PropTypes.any,onShowUnderlay:PropTypes.func,onHideUnderlay:PropTypes.func});export{TouchableHighlight as default};","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js"],"names":["React","Component","GenericTouchable","TOUCHABLE_STATE","PropTypes","TouchableHighlight","props","showUnderlay","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","hideUnderlay","onHideUnderlay","onStateChange","from","to","BEGAN","UNDETERMINED","MOVED_OUTSIDE","state","children","child","Children","only","cloneElement","style","StyleSheet","compose","rest","renderChildren","defaultProps","delayPressOut","propTypes","publicPropTypes","number","string","any","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}