{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import isString from'lodash/isString';import omit from'lodash/omit';import pick from'lodash/pick';import React,{PureComponent}from'react';import PropTypes from'prop-types';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";var styles=StyleSheet.create({container:{flexDirection:'row',justifyContent:'flex-start',alignItems:'center',padding:8},touchable:{overflow:'hidden'},icon:{marginRight:10},text:{fontWeight:'600',backgroundColor:'transparent'}});var IOS7_BLUE='#007AFF';var TEXT_PROP_NAMES=['ellipsizeMode','numberOfLines','textBreakStrategy','selectable','suppressHighlighting','allowFontScaling','adjustsFontSizeToFit','minimumFontScale'];var TOUCHABLE_PROP_NAMES=['accessible','accessibilityLabel','accessibilityHint','accessibilityComponentType','accessibilityRole','accessibilityStates','accessibilityTraits','onFocus','onBlur','disabled','onPress','onPressIn','onPressOut','onLayout','onLongPress','nativeID','testID','delayPressIn','delayPressOut','delayLongPress','activeOpacity','underlayColor','selectionColor','onShowUnderlay','onHideUnderlay','hasTVPreferredFocus','tvParallaxProperties'];export default function createIconButtonComponent(Icon){var _class,_temp;return _temp=_class=function(_PureComponent){_inherits(IconButton,_PureComponent);function IconButton(){_classCallCheck(this,IconButton);return _possibleConstructorReturn(this,_getPrototypeOf(IconButton).apply(this,arguments));}_createClass(IconButton,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,iconStyle=_this$props.iconStyle,children=_this$props.children,restProps=_objectWithoutProperties(_this$props,[\"style\",\"iconStyle\",\"children\"]);var iconProps=pick(restProps,TEXT_PROP_NAMES,'style','name','size','color');var touchableProps=pick(restProps,TOUCHABLE_PROP_NAMES);var props=omit(restProps,Object.keys(iconProps),Object.keys(touchableProps),'iconStyle','borderRadius','backgroundColor');iconProps.style=iconStyle?[styles.icon,iconStyle]:styles.icon;var colorStyle=pick(this.props,'color');var blockStyle=pick(this.props,'backgroundColor','borderRadius');return React.createElement(TouchableHighlight,_extends({style:[styles.touchable,blockStyle]},touchableProps),React.createElement(View,_extends({style:[styles.container,blockStyle,style]},props),React.createElement(Icon,iconProps),isString(children)?React.createElement(Text,{style:[styles.text,colorStyle]},children):children));}}]);return IconButton;}(PureComponent),_class.propTypes={backgroundColor:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),borderRadius:PropTypes.number,color:PropTypes.oneOfType([PropTypes.string,PropTypes.number]),size:PropTypes.number,iconStyle:PropTypes.any,style:PropTypes.any,children:PropTypes.node},_class.defaultProps={backgroundColor:IOS7_BLUE,borderRadius:5,color:'white',size:20},_temp;}","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/icon-button.js"],"names":["isString","omit","pick","React","PureComponent","PropTypes","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","createIconButtonComponent","Icon","props","style","iconStyle","children","restProps","iconProps","touchableProps","Object","keys","colorStyle","blockStyle","propTypes","oneOfType","string","number","borderRadius","color","size","any","node","defaultProps"],"mappings":"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","sourcesContent":["import isString from 'lodash/isString';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {isString(children) ? (\n              <Text style={[styles.text, colorStyle]}>{children}</Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}