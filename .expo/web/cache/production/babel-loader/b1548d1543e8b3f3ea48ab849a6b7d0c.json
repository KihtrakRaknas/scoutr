{"ast":null,"code":"import PropTypes from'prop-types';var GestureHandlerPropTypes={id:PropTypes.string,minPointers:PropTypes.number,enabled:PropTypes.bool,waitFor:PropTypes.oneOfType([PropTypes.string,PropTypes.object,PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.object]))]),simultaneousHandlers:PropTypes.oneOfType([PropTypes.string,PropTypes.object,PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string,PropTypes.object]))]),shouldCancelWhenOutside:PropTypes.bool,hitSlop:PropTypes.oneOfType([PropTypes.number,PropTypes.shape({left:PropTypes.number,top:PropTypes.number,right:PropTypes.number,bottom:PropTypes.number,vertical:PropTypes.number,horizontal:PropTypes.number,width:PropTypes.number,height:PropTypes.number})]),onGestureEvent:PropTypes.oneOfType([PropTypes.func,PropTypes.object]),onHandlerStateChange:PropTypes.oneOfType([PropTypes.func,PropTypes.object]),onBegan:PropTypes.func,onFailed:PropTypes.func,onCancelled:PropTypes.func,onActivated:PropTypes.func,onEnded:PropTypes.func};export default GestureHandlerPropTypes;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js"],"names":["PropTypes","GestureHandlerPropTypes","id","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CAGA,GAAMC,CAAAA,uBAAuB,CAAG,CAC9BC,EAAE,CAAEF,SAAS,CAACG,MADgB,CAE9BC,WAAW,CAAEJ,SAAS,CAACK,MAFO,CAG9BC,OAAO,CAAEN,SAAS,CAACO,IAHW,CAI9BC,OAAO,CAAER,SAAS,CAACS,SAAV,CAAoB,CAC3BT,SAAS,CAACG,MADiB,CAE3BH,SAAS,CAACU,MAFiB,CAG3BV,SAAS,CAACW,OAAV,CACEX,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACG,MAAX,CAAmBH,SAAS,CAACU,MAA7B,CAApB,CADF,CAH2B,CAApB,CAJqB,CAW9BE,oBAAoB,CAAEZ,SAAS,CAACS,SAAV,CAAoB,CACxCT,SAAS,CAACG,MAD8B,CAExCH,SAAS,CAACU,MAF8B,CAGxCV,SAAS,CAACW,OAAV,CACEX,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACG,MAAX,CAAmBH,SAAS,CAACU,MAA7B,CAApB,CADF,CAHwC,CAApB,CAXQ,CAkB9BG,uBAAuB,CAAEb,SAAS,CAACO,IAlBL,CAmB9BO,OAAO,CAAEd,SAAS,CAACS,SAAV,CAAoB,CAC3BT,SAAS,CAACK,MADiB,CAE3BL,SAAS,CAACe,KAAV,CAAgB,CACdC,IAAI,CAAEhB,SAAS,CAACK,MADF,CAEdY,GAAG,CAAEjB,SAAS,CAACK,MAFD,CAGda,KAAK,CAAElB,SAAS,CAACK,MAHH,CAIdc,MAAM,CAAEnB,SAAS,CAACK,MAJJ,CAKde,QAAQ,CAAEpB,SAAS,CAACK,MALN,CAMdgB,UAAU,CAAErB,SAAS,CAACK,MANR,CAOdiB,KAAK,CAAEtB,SAAS,CAACK,MAPH,CAQdkB,MAAM,CAAEvB,SAAS,CAACK,MARJ,CAAhB,CAF2B,CAApB,CAnBqB,CAgC9BmB,cAAc,CAAExB,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACyB,IAAX,CAAiBzB,SAAS,CAACU,MAA3B,CAApB,CAhCc,CAiC9BgB,oBAAoB,CAAE1B,SAAS,CAACS,SAAV,CAAoB,CAACT,SAAS,CAACyB,IAAX,CAAiBzB,SAAS,CAACU,MAA3B,CAApB,CAjCQ,CAkC9BiB,OAAO,CAAE3B,SAAS,CAACyB,IAlCW,CAmC9BG,QAAQ,CAAE5B,SAAS,CAACyB,IAnCU,CAoC9BI,WAAW,CAAE7B,SAAS,CAACyB,IApCO,CAqC9BK,WAAW,CAAE9B,SAAS,CAACyB,IArCO,CAsC9BM,OAAO,CAAE/B,SAAS,CAACyB,IAtCW,CAAhC,CAyCA,cAAexB,CAAAA,uBAAf","sourcesContent":["import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n"]},"metadata":{},"sourceType":"module"}