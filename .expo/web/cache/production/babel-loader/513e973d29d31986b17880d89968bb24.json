{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import Platform from\"react-native-web/dist/exports/Platform\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import NativeText from\"react-native-web/dist/exports/Text\";import getIconType from\"../helpers/getIconType\";import{ViewPropTypes,withTheme}from\"../config\";var Icon=function Icon(props){var type=props.type,name=props.name,size=props.size,color=props.color,iconStyle=props.iconStyle,underlayColor=props.underlayColor,reverse=props.reverse,raised=props.raised,containerStyle=props.containerStyle,reverseColor=props.reverseColor,disabled=props.disabled,disabledStyle=props.disabledStyle,onPress=props.onPress,_props$Component=props.Component,Component=_props$Component===void 0?onPress?TouchableHighlight:View:_props$Component,attributes=_objectWithoutProperties(props,[\"type\",\"name\",\"size\",\"color\",\"iconStyle\",\"underlayColor\",\"reverse\",\"raised\",\"containerStyle\",\"reverseColor\",\"disabled\",\"disabledStyle\",\"onPress\",\"Component\"]);var IconComponent=getIconType(type);var getBackgroundColor=function getBackgroundColor(){if(reverse){return color;}return raised?'white':'transparent';};return React.createElement(View,{style:containerStyle&&containerStyle},React.createElement(Component,_extends({},attributes,{underlayColor:reverse?color:underlayColor||color,style:StyleSheet.flatten([(reverse||raised)&&styles.button,(reverse||raised)&&{borderRadius:size+4,height:size*2+4,width:size*2+4},raised&&styles.raised,{backgroundColor:getBackgroundColor(),alignItems:'center',justifyContent:'center'},disabled&&styles.disabled,disabled&&disabledStyle])},onPress&&{disabled:disabled},{onPress:onPress}),React.createElement(IconComponent,{testID:\"iconIcon\",style:StyleSheet.flatten([{backgroundColor:'transparent'},iconStyle&&iconStyle]),size:size,name:name,color:reverse?reverseColor:color})));};Icon.propTypes={type:PropTypes.string,name:PropTypes.string,size:PropTypes.number,color:PropTypes.string,Component:PropTypes.elementType,underlayColor:PropTypes.string,reverse:PropTypes.bool,raised:PropTypes.bool,containerStyle:ViewPropTypes.style,iconStyle:NativeText.propTypes.style,onPress:PropTypes.func,reverseColor:PropTypes.string,disabled:PropTypes.bool,disabledStyle:ViewPropTypes.style};Icon.defaultProps={underlayColor:'white',reverse:false,raised:false,size:24,color:'black',reverseColor:'white',disabled:false,type:'material'};var styles=StyleSheet.create({button:{margin:7},raised:_objectSpread({},Platform.select({android:{elevation:2},default:{shadowColor:'rgba(0,0,0, .4)',shadowOffset:{height:1,width:1},shadowOpacity:1,shadowRadius:1}})),disabled:{backgroundColor:'#D1D5D8'}});export{Icon};export default withTheme(Icon,'Icon');","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-elements/src/icons/Icon.js"],"names":["React","PropTypes","getIconType","ViewPropTypes","withTheme","Icon","props","type","name","size","color","iconStyle","underlayColor","reverse","raised","containerStyle","reverseColor","disabled","disabledStyle","onPress","Component","TouchableHighlight","View","attributes","IconComponent","getBackgroundColor","StyleSheet","flatten","styles","button","borderRadius","height","width","backgroundColor","alignItems","justifyContent","propTypes","string","number","elementType","bool","style","NativeText","func","defaultProps","create","margin","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  Text as NativeText,\n} from 'react-native';\n\nimport getIconType from '../helpers/getIconType';\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress ? TouchableHighlight : View,\n    ...attributes\n  } = props;\n\n  const IconComponent = getIconType(type);\n  const getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  return (\n    <View style={containerStyle && containerStyle}>\n      <Component\n        {...attributes}\n        underlayColor={reverse ? color : underlayColor || color}\n        style={StyleSheet.flatten([\n          (reverse || raised) && styles.button,\n          (reverse || raised) && {\n            borderRadius: size + 4,\n            height: size * 2 + 4,\n            width: size * 2 + 4,\n          },\n          raised && styles.raised,\n          {\n            backgroundColor: getBackgroundColor(),\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n          disabled && styles.disabled,\n          disabled && disabledStyle,\n        ])}\n        {...onPress && { disabled }}\n        onPress={onPress}\n      >\n        <IconComponent\n          testID=\"iconIcon\"\n          style={StyleSheet.flatten([\n            { backgroundColor: 'transparent' },\n            iconStyle && iconStyle,\n          ])}\n          size={size}\n          name={name}\n          color={reverse ? reverseColor : color}\n        />\n      </Component>\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  iconStyle: NativeText.propTypes.style,\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'white',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material',\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  },\n  disabled: {\n    backgroundColor: '#D1D5D8',\n  },\n});\n\nexport { Icon };\nexport default withTheme(Icon, 'Icon');\n"]},"metadata":{},"sourceType":"module"}