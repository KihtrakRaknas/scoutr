{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import Hammer from'hammerjs';import{MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD}from\"./constants\";import DraggingGestureHandler from\"./DraggingGestureHandler\";import{isValidNumber,isnan,TEST_MIN_IF_NOT_NAN,VEC_LEN_SQ}from\"./utils\";var PanGestureHandler=function(_DraggingGestureHandl){_inherits(PanGestureHandler,_DraggingGestureHandl);function PanGestureHandler(){_classCallCheck(this,PanGestureHandler);return _possibleConstructorReturn(this,_getPrototypeOf(PanGestureHandler).apply(this,arguments));}_createClass(PanGestureHandler,[{key:\"getHammerConfig\",value:function getHammerConfig(){return _objectSpread({},_get(_getPrototypeOf(PanGestureHandler.prototype),\"getHammerConfig\",this).call(this),{direction:this.getDirection()});}},{key:\"getDirection\",value:function getDirection(){var config=this.getConfig();var activeOffsetXStart=config.activeOffsetXStart,activeOffsetXEnd=config.activeOffsetXEnd,activeOffsetYStart=config.activeOffsetYStart,activeOffsetYEnd=config.activeOffsetYEnd,minDist=config.minDist;var directions=[];var horizontalDirections=[];if(!isnan(minDist)){return Hammer.DIRECTION_ALL;}if(!isnan(activeOffsetXStart))horizontalDirections.push(Hammer.DIRECTION_LEFT);if(!isnan(activeOffsetXEnd))horizontalDirections.push(Hammer.DIRECTION_RIGHT);if(horizontalDirections.length===2)horizontalDirections=[Hammer.DIRECTION_HORIZONTAL];directions=directions.concat(horizontalDirections);var verticalDirections=[];if(!isnan(activeOffsetYStart))verticalDirections.push(Hammer.DIRECTION_UP);if(!isnan(activeOffsetYEnd))verticalDirections.push(Hammer.DIRECTION_DOWN);if(verticalDirections.length===2)verticalDirections=[Hammer.DIRECTION_VERTICAL];directions=directions.concat(verticalDirections);if(!directions.length){return Hammer.DIRECTION_NONE;}if(directions[0]===Hammer.DIRECTION_HORIZONTAL&&directions[1]===Hammer.DIRECTION_VERTICAL){return Hammer.DIRECTION_ALL;}if(horizontalDirections.length&&verticalDirections.length){return Hammer.DIRECTION_ALL;}return directions[0];}},{key:\"getConfig\",value:function getConfig(){if(!this._hasCustomActivationCriteria){return{minDistSq:10};}return this.config;}},{key:\"shouldFailUnderCustomCriteria\",value:function shouldFailUnderCustomCriteria(_ref,criteria){var deltaX=_ref.deltaX,deltaY=_ref.deltaY;return!isnan(criteria.failOffsetXStart)&&deltaX<criteria.failOffsetXStart||!isnan(criteria.failOffsetXEnd)&&deltaX>criteria.failOffsetXEnd||!isnan(criteria.failOffsetYStart)&&deltaY<criteria.failOffsetYStart||!isnan(criteria.failOffsetYEnd)&&deltaY>criteria.failOffsetYEnd;}},{key:\"shouldActivateUnderCustomCriteria\",value:function shouldActivateUnderCustomCriteria(_ref2,criteria){var deltaX=_ref2.deltaX,deltaY=_ref2.deltaY,velocity=_ref2.velocity;return!isnan(criteria.activeOffsetXStart)&&deltaX<criteria.activeOffsetXStart||!isnan(criteria.activeOffsetXEnd)&&deltaX>criteria.activeOffsetXEnd||!isnan(criteria.activeOffsetYStart)&&deltaY<criteria.activeOffsetYStart||!isnan(criteria.activeOffsetYEnd)&&deltaY>criteria.activeOffsetYEnd||TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({x:deltaX,y:deltaY}),criteria.minDistSq)||TEST_MIN_IF_NOT_NAN(velocity.x,criteria.minVelocityX)||TEST_MIN_IF_NOT_NAN(velocity.y,criteria.minVelocityY)||TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity),criteria.minVelocitySq);}},{key:\"shouldMultiFingerPanFail\",value:function shouldMultiFingerPanFail(_ref3){var pointerLength=_ref3.pointerLength,scale=_ref3.scale,deltaRotation=_ref3.deltaRotation;if(pointerLength<=1){return false;}var deltaScale=Math.abs(scale-1);var absDeltaRotation=Math.abs(deltaRotation);if(deltaScale>MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD){return true;}if(absDeltaRotation>MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD){return true;}return false;}},{key:\"updateHasCustomActivationCriteria\",value:function updateHasCustomActivationCriteria(criteria){return isValidNumber(criteria.minDistSq)||isValidNumber(criteria.minVelocityX)||isValidNumber(criteria.minVelocityY)||isValidNumber(criteria.minVelocitySq)||isValidNumber(criteria.activeOffsetXStart)||isValidNumber(criteria.activeOffsetXEnd)||isValidNumber(criteria.activeOffsetYStart)||isValidNumber(criteria.activeOffsetYEnd);}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(props,recognizer,inputData){if(this.shouldFailUnderCustomCriteria(inputData,props)){return{failed:true};}var velocity={x:inputData.velocityX,y:inputData.velocityY};if(this._hasCustomActivationCriteria&&this.shouldActivateUnderCustomCriteria({deltaX:inputData.deltaX,deltaY:inputData.deltaY,velocity:velocity},props)){if(this.shouldMultiFingerPanFail({pointerLength:inputData.maxPointers,scale:inputData.scale,deltaRotation:inputData.deltaRotation})){return{failed:true};}return{success:true};}return{success:false};}},{key:\"name\",get:function get(){return'pan';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Pan;}}]);return PanGestureHandler;}(DraggingGestureHandler);function validateConfig(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var isNum=function isNum(v){return isnan(v)||typeof v==='number';};var isBool=function isBool(v){return typeof v==='boolean';};var valid={enabled:isBool,minDistSq:isNum,minVelocityX:isNum,minVelocityY:isNum,minVelocity:isNum,minVelocitySq:isNum,activeOffsetXStart:isNum,activeOffsetXEnd:isNum,failOffsetXStart:isNum,failOffsetXEnd:isNum,activeOffsetYStart:isNum,activeOffsetYEnd:isNum,failOffsetYStart:isNum,failOffsetYEnd:isNum,hasCustomActivationCriteria:isBool,minPointers:isNum,maxPointers:isNum};var keys=Object.keys(valid);var invalidKeys=[];for(var _i=0,_Object$keys=Object.keys(config);_i<_Object$keys.length;_i++){var key=_Object$keys[_i];if(keys.includes(key)){if(valid[key](config[key])){console.warn('Invalid type: '+key+': '+config[key]);}}else{invalidKeys.push(key);}}if(invalidKeys.length){throw new Error('Invalid config props found: '+invalidKeys.join(', '));}return config;}export default PanGestureHandler;","map":{"version":3,"sources":["C:/Users/karth/Documents/RoboticsScoutingTool/node_modules/react-native-gesture-handler/web/PanGestureHandler.js"],"names":["Hammer","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","DraggingGestureHandler","isValidNumber","isnan","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","PanGestureHandler","direction","getDirection","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","_hasCustomActivationCriteria","minDistSq","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","props","recognizer","inputData","shouldFailUnderCustomCriteria","failed","velocityX","velocityY","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","maxPointers","success","Pan","validateConfig","isNum","v","isBool","valid","enabled","minVelocity","hasCustomActivationCriteria","minPointers","keys","Object","invalidKeys","key","includes","console","warn","Error","join"],"mappings":"+tCAAA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,CAEA,OACEC,oCADF,CAEEC,uCAFF,mBAIA,MAAOC,CAAAA,sBAAP,gCACA,OAASC,aAAT,CAAwBC,KAAxB,CAA+BC,mBAA/B,CAAoDC,UAApD,e,GAEMC,CAAAA,iB,kVASc,CAChB,8GAEEC,SAAS,CAAE,KAAKC,YAAL,EAFb,GAID,C,mDAEc,CACb,GAAMC,CAAAA,MAAM,CAAG,KAAKC,SAAL,EAAf,CADa,GAGXC,CAAAA,kBAHW,CAQTF,MARS,CAGXE,kBAHW,CAIXC,gBAJW,CAQTH,MARS,CAIXG,gBAJW,CAKXC,kBALW,CAQTJ,MARS,CAKXI,kBALW,CAMXC,gBANW,CAQTL,MARS,CAMXK,gBANW,CAOXC,OAPW,CAQTN,MARS,CAOXM,OAPW,CASb,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,oBAAoB,CAAG,EAA3B,CAEA,GAAI,CAACd,KAAK,CAACY,OAAD,CAAV,CAAqB,CACnB,MAAOjB,CAAAA,MAAM,CAACoB,aAAd,CACD,CAED,GAAI,CAACf,KAAK,CAACQ,kBAAD,CAAV,CACEM,oBAAoB,CAACE,IAArB,CAA0BrB,MAAM,CAACsB,cAAjC,EACF,GAAI,CAACjB,KAAK,CAACS,gBAAD,CAAV,CACEK,oBAAoB,CAACE,IAArB,CAA0BrB,MAAM,CAACuB,eAAjC,EACF,GAAIJ,oBAAoB,CAACK,MAArB,GAAgC,CAApC,CACEL,oBAAoB,CAAG,CAACnB,MAAM,CAACyB,oBAAR,CAAvB,CAEFP,UAAU,CAAGA,UAAU,CAACQ,MAAX,CAAkBP,oBAAlB,CAAb,CACA,GAAIQ,CAAAA,kBAAkB,CAAG,EAAzB,CAEA,GAAI,CAACtB,KAAK,CAACU,kBAAD,CAAV,CACEY,kBAAkB,CAACN,IAAnB,CAAwBrB,MAAM,CAAC4B,YAA/B,EACF,GAAI,CAACvB,KAAK,CAACW,gBAAD,CAAV,CACEW,kBAAkB,CAACN,IAAnB,CAAwBrB,MAAM,CAAC6B,cAA/B,EAEF,GAAIF,kBAAkB,CAACH,MAAnB,GAA8B,CAAlC,CACEG,kBAAkB,CAAG,CAAC3B,MAAM,CAAC8B,kBAAR,CAArB,CAEFZ,UAAU,CAAGA,UAAU,CAACQ,MAAX,CAAkBC,kBAAlB,CAAb,CAEA,GAAI,CAACT,UAAU,CAACM,MAAhB,CAAwB,CACtB,MAAOxB,CAAAA,MAAM,CAAC+B,cAAd,CACD,CACD,GACEb,UAAU,CAAC,CAAD,CAAV,GAAkBlB,MAAM,CAACyB,oBAAzB,EACAP,UAAU,CAAC,CAAD,CAAV,GAAkBlB,MAAM,CAAC8B,kBAF3B,CAGE,CACA,MAAO9B,CAAAA,MAAM,CAACoB,aAAd,CACD,CACD,GAAID,oBAAoB,CAACK,MAArB,EAA+BG,kBAAkB,CAACH,MAAtD,CAA8D,CAC5D,MAAOxB,CAAAA,MAAM,CAACoB,aAAd,CACD,CAED,MAAOF,CAAAA,UAAU,CAAC,CAAD,CAAjB,CACD,C,6CAEW,CACV,GAAI,CAAC,KAAKc,4BAAV,CAAwC,CAGtC,MAAO,CACLC,SAAS,CAAE,EADN,CAAP,CAGD,CACD,MAAO,MAAKtB,MAAZ,CACD,C,yFAEiDuB,Q,CAAU,IAA5BC,CAAAA,MAA4B,MAA5BA,MAA4B,CAApBC,MAAoB,MAApBA,MAAoB,CAC1D,MACG,CAAC/B,KAAK,CAAC6B,QAAQ,CAACG,gBAAV,CAAN,EACCF,MAAM,CAAGD,QAAQ,CAACG,gBADpB,EAEC,CAAChC,KAAK,CAAC6B,QAAQ,CAACI,cAAV,CAAN,EAAmCH,MAAM,CAAGD,QAAQ,CAACI,cAFtD,EAGC,CAACjC,KAAK,CAAC6B,QAAQ,CAACK,gBAAV,CAAN,EACCH,MAAM,CAAGF,QAAQ,CAACK,gBAJpB,EAKC,CAAClC,KAAK,CAAC6B,QAAQ,CAACM,cAAV,CAAN,EAAmCJ,MAAM,CAAGF,QAAQ,CAACM,cANxD,CAQD,C,kGAE+DN,Q,CAAU,IAAtCC,CAAAA,MAAsC,OAAtCA,MAAsC,CAA9BC,MAA8B,OAA9BA,MAA8B,CAAtBK,QAAsB,OAAtBA,QAAsB,CACxE,MACG,CAACpC,KAAK,CAAC6B,QAAQ,CAACrB,kBAAV,CAAN,EACCsB,MAAM,CAAGD,QAAQ,CAACrB,kBADpB,EAEC,CAACR,KAAK,CAAC6B,QAAQ,CAACpB,gBAAV,CAAN,EACCqB,MAAM,CAAGD,QAAQ,CAACpB,gBAHpB,EAIC,CAACT,KAAK,CAAC6B,QAAQ,CAACnB,kBAAV,CAAN,EACCqB,MAAM,CAAGF,QAAQ,CAACnB,kBALpB,EAMC,CAACV,KAAK,CAAC6B,QAAQ,CAAClB,gBAAV,CAAN,EACCoB,MAAM,CAAGF,QAAQ,CAAClB,gBAPpB,EAQAV,mBAAmB,CACjBC,UAAU,CAAC,CAAEmC,CAAC,CAAEP,MAAL,CAAaQ,CAAC,CAAEP,MAAhB,CAAD,CADO,CAEjBF,QAAQ,CAACD,SAFQ,CARnB,EAYA3B,mBAAmB,CAACmC,QAAQ,CAACC,CAAV,CAAaR,QAAQ,CAACU,YAAtB,CAZnB,EAaAtC,mBAAmB,CAACmC,QAAQ,CAACE,CAAV,CAAaT,QAAQ,CAACW,YAAtB,CAbnB,EAcAvC,mBAAmB,CAACC,UAAU,CAACkC,QAAD,CAAX,CAAuBP,QAAQ,CAACY,aAAhC,CAfrB,CAiBD,C,gFAEiE,IAAvCC,CAAAA,aAAuC,OAAvCA,aAAuC,CAAxBC,KAAwB,OAAxBA,KAAwB,CAAjBC,aAAiB,OAAjBA,aAAiB,CAChE,GAAIF,aAAa,EAAI,CAArB,CAAwB,CACtB,MAAO,MAAP,CACD,CAGD,GAAMG,CAAAA,UAAU,CAAGC,IAAI,CAACC,GAAL,CAASJ,KAAK,CAAG,CAAjB,CAAnB,CACA,GAAMK,CAAAA,gBAAgB,CAAGF,IAAI,CAACC,GAAL,CAASH,aAAT,CAAzB,CACA,GAAIC,UAAU,CAAGjD,oCAAjB,CAAuD,CAGrD,MAAO,KAAP,CACD,CACD,GAAIoD,gBAAgB,CAAGnD,uCAAvB,CAAgE,CAG9D,MAAO,KAAP,CACD,CAED,MAAO,MAAP,CACD,C,4FAEiCgC,Q,CAAU,CAC1C,MACE9B,CAAAA,aAAa,CAAC8B,QAAQ,CAACD,SAAV,CAAb,EACA7B,aAAa,CAAC8B,QAAQ,CAACU,YAAV,CADb,EAEAxC,aAAa,CAAC8B,QAAQ,CAACW,YAAV,CAFb,EAGAzC,aAAa,CAAC8B,QAAQ,CAACY,aAAV,CAHb,EAIA1C,aAAa,CAAC8B,QAAQ,CAACrB,kBAAV,CAJb,EAKAT,aAAa,CAAC8B,QAAQ,CAACpB,gBAAV,CALb,EAMAV,aAAa,CAAC8B,QAAQ,CAACnB,kBAAV,CANb,EAOAX,aAAa,CAAC8B,QAAQ,CAAClB,gBAAV,CARf,CAUD,C,0EAEwBsC,K,CAAOC,U,CAAYC,S,CAAW,CACrD,GAAI,KAAKC,6BAAL,CAAmCD,SAAnC,CAA8CF,KAA9C,CAAJ,CAA0D,CACxD,MAAO,CAAEI,MAAM,CAAE,IAAV,CAAP,CACD,CAED,GAAMjB,CAAAA,QAAQ,CAAG,CAAEC,CAAC,CAAEc,SAAS,CAACG,SAAf,CAA0BhB,CAAC,CAAEa,SAAS,CAACI,SAAvC,CAAjB,CACA,GACE,KAAK5B,4BAAL,EACA,KAAK6B,iCAAL,CACE,CAAE1B,MAAM,CAAEqB,SAAS,CAACrB,MAApB,CAA4BC,MAAM,CAAEoB,SAAS,CAACpB,MAA9C,CAAsDK,QAAQ,CAARA,QAAtD,CADF,CAEEa,KAFF,CAFF,CAME,CACA,GACE,KAAKQ,wBAAL,CAA8B,CAC5Bf,aAAa,CAAES,SAAS,CAACO,WADG,CAE5Bf,KAAK,CAAEQ,SAAS,CAACR,KAFW,CAG5BC,aAAa,CAAEO,SAAS,CAACP,aAHG,CAA9B,CADF,CAME,CACA,MAAO,CACLS,MAAM,CAAE,IADH,CAAP,CAGD,CACD,MAAO,CAAEM,OAAO,CAAE,IAAX,CAAP,CACD,CACD,MAAO,CAAEA,OAAO,CAAE,KAAX,CAAP,CACD,C,gCA3KU,CACT,MAAO,KAAP,CACD,C,8CAEwB,CACvB,MAAOhE,CAAAA,MAAM,CAACiE,GAAd,CACD,C,+BAP6B9D,sB,EA+KhC,QAAS+D,CAAAA,cAAT,EAAqC,IAAbvD,CAAAA,MAAa,2DAAJ,EAAI,CACnC,GAAMwD,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,CAAC,QAAI/D,CAAAA,KAAK,CAAC+D,CAAD,CAAL,EAAY,MAAOA,CAAAA,CAAP,GAAa,QAA7B,EAAf,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAD,CAAC,QAAI,OAAOA,CAAAA,CAAP,GAAa,SAAjB,EAAhB,CAEA,GAAME,CAAAA,KAAK,CAAG,CACZC,OAAO,CAAEF,MADG,CAEZpC,SAAS,CAAEkC,KAFC,CAGZvB,YAAY,CAAEuB,KAHF,CAIZtB,YAAY,CAAEsB,KAJF,CAMZK,WAAW,CAAEL,KAND,CAOZrB,aAAa,CAAEqB,KAPH,CAQZtD,kBAAkB,CAAEsD,KARR,CASZrD,gBAAgB,CAAEqD,KATN,CAUZ9B,gBAAgB,CAAE8B,KAVN,CAWZ7B,cAAc,CAAE6B,KAXJ,CAYZpD,kBAAkB,CAAEoD,KAZR,CAaZnD,gBAAgB,CAAEmD,KAbN,CAcZ5B,gBAAgB,CAAE4B,KAdN,CAeZ3B,cAAc,CAAE2B,KAfJ,CAgBZM,2BAA2B,CAAEJ,MAhBjB,CAiBZK,WAAW,CAAEP,KAjBD,CAkBZJ,WAAW,CAAEI,KAlBD,CAAd,CAoBA,GAAMQ,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYL,KAAZ,CAAb,CAEA,GAAIO,CAAAA,WAAW,CAAG,EAAlB,CACA,0BAAkBD,MAAM,CAACD,IAAP,CAAYhE,MAAZ,CAAlB,6BAAuC,CAAlC,GAAMmE,CAAAA,GAAG,iBAAT,CACH,GAAIH,IAAI,CAACI,QAAL,CAAcD,GAAd,CAAJ,CAAwB,CACtB,GAAIR,KAAK,CAACQ,GAAD,CAAL,CAAWnE,MAAM,CAACmE,GAAD,CAAjB,CAAJ,CAA6B,CAC3BE,OAAO,CAACC,IAAR,CAAa,iBAAmBH,GAAnB,CAAyB,IAAzB,CAAgCnE,MAAM,CAACmE,GAAD,CAAnD,EACD,CACF,CAJD,IAIO,CACLD,WAAW,CAACxD,IAAZ,CAAiByD,GAAjB,EACD,CACF,CAED,GAAID,WAAW,CAACrD,MAAhB,CAAwB,CACtB,KAAM,IAAI0D,CAAAA,KAAJ,CAAU,+BAAiCL,WAAW,CAACM,IAAZ,CAAiB,IAAjB,CAA3C,CAAN,CACD,CACD,MAAOxE,CAAAA,MAAP,CACD,CAED,cAAeH,CAAAA,iBAAf","sourcesContent":["import Hammer from 'hammerjs';\n\nimport {\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(criteria) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(props, recognizer, inputData) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this._hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nfunction validateConfig(config = {}) {\n  const isNum = v => isnan(v) || typeof v === 'number';\n  const isBool = v => typeof v === 'boolean';\n\n  const valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    // TODO: Bacon: remove `minVelocity`\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum,\n  };\n  const keys = Object.keys(valid);\n\n  let invalidKeys = [];\n  for (const key of Object.keys(config)) {\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n  return config;\n}\n\nexport default PanGestureHandler;\n"]},"metadata":{},"sourceType":"module"}